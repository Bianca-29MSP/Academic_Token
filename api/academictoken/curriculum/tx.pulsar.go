// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package curriculum

import (
	_ "cosmossdk.io/api/amino"
	_ "cosmossdk.io/api/cosmos/msg/v1"
	binary "encoding/binary"
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	_ "github.com/cosmos/gogoproto/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	io "io"
	math "math"
	reflect "reflect"
	sync "sync"
)

var (
	md_MsgUpdateParams           protoreflect.MessageDescriptor
	fd_MsgUpdateParams_authority protoreflect.FieldDescriptor
	fd_MsgUpdateParams_params    protoreflect.FieldDescriptor
)

func init() {
	file_academictoken_curriculum_tx_proto_init()
	md_MsgUpdateParams = File_academictoken_curriculum_tx_proto.Messages().ByName("MsgUpdateParams")
	fd_MsgUpdateParams_authority = md_MsgUpdateParams.Fields().ByName("authority")
	fd_MsgUpdateParams_params = md_MsgUpdateParams.Fields().ByName("params")
}

var _ protoreflect.Message = (*fastReflection_MsgUpdateParams)(nil)

type fastReflection_MsgUpdateParams MsgUpdateParams

func (x *MsgUpdateParams) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgUpdateParams)(x)
}

func (x *MsgUpdateParams) slowProtoReflect() protoreflect.Message {
	mi := &file_academictoken_curriculum_tx_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgUpdateParams_messageType fastReflection_MsgUpdateParams_messageType
var _ protoreflect.MessageType = fastReflection_MsgUpdateParams_messageType{}

type fastReflection_MsgUpdateParams_messageType struct{}

func (x fastReflection_MsgUpdateParams_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgUpdateParams)(nil)
}
func (x fastReflection_MsgUpdateParams_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgUpdateParams)
}
func (x fastReflection_MsgUpdateParams_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUpdateParams
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgUpdateParams) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUpdateParams
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgUpdateParams) Type() protoreflect.MessageType {
	return _fastReflection_MsgUpdateParams_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgUpdateParams) New() protoreflect.Message {
	return new(fastReflection_MsgUpdateParams)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgUpdateParams) Interface() protoreflect.ProtoMessage {
	return (*MsgUpdateParams)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgUpdateParams) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Authority != "" {
		value := protoreflect.ValueOfString(x.Authority)
		if !f(fd_MsgUpdateParams_authority, value) {
			return
		}
	}
	if x.Params != nil {
		value := protoreflect.ValueOfMessage(x.Params.ProtoReflect())
		if !f(fd_MsgUpdateParams_params, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgUpdateParams) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "academictoken.curriculum.MsgUpdateParams.authority":
		return x.Authority != ""
	case "academictoken.curriculum.MsgUpdateParams.params":
		return x.Params != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.curriculum.MsgUpdateParams"))
		}
		panic(fmt.Errorf("message academictoken.curriculum.MsgUpdateParams does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateParams) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "academictoken.curriculum.MsgUpdateParams.authority":
		x.Authority = ""
	case "academictoken.curriculum.MsgUpdateParams.params":
		x.Params = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.curriculum.MsgUpdateParams"))
		}
		panic(fmt.Errorf("message academictoken.curriculum.MsgUpdateParams does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgUpdateParams) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "academictoken.curriculum.MsgUpdateParams.authority":
		value := x.Authority
		return protoreflect.ValueOfString(value)
	case "academictoken.curriculum.MsgUpdateParams.params":
		value := x.Params
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.curriculum.MsgUpdateParams"))
		}
		panic(fmt.Errorf("message academictoken.curriculum.MsgUpdateParams does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateParams) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "academictoken.curriculum.MsgUpdateParams.authority":
		x.Authority = value.Interface().(string)
	case "academictoken.curriculum.MsgUpdateParams.params":
		x.Params = value.Message().Interface().(*Params)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.curriculum.MsgUpdateParams"))
		}
		panic(fmt.Errorf("message academictoken.curriculum.MsgUpdateParams does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateParams) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "academictoken.curriculum.MsgUpdateParams.params":
		if x.Params == nil {
			x.Params = new(Params)
		}
		return protoreflect.ValueOfMessage(x.Params.ProtoReflect())
	case "academictoken.curriculum.MsgUpdateParams.authority":
		panic(fmt.Errorf("field authority of message academictoken.curriculum.MsgUpdateParams is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.curriculum.MsgUpdateParams"))
		}
		panic(fmt.Errorf("message academictoken.curriculum.MsgUpdateParams does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgUpdateParams) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "academictoken.curriculum.MsgUpdateParams.authority":
		return protoreflect.ValueOfString("")
	case "academictoken.curriculum.MsgUpdateParams.params":
		m := new(Params)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.curriculum.MsgUpdateParams"))
		}
		panic(fmt.Errorf("message academictoken.curriculum.MsgUpdateParams does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgUpdateParams) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in academictoken.curriculum.MsgUpdateParams", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgUpdateParams) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateParams) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgUpdateParams) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgUpdateParams) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgUpdateParams)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Authority)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Params != nil {
			l = options.Size(x.Params)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgUpdateParams)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Params != nil {
			encoded, err := options.Marshal(x.Params)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Authority) > 0 {
			i -= len(x.Authority)
			copy(dAtA[i:], x.Authority)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Authority)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgUpdateParams)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUpdateParams: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUpdateParams: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Authority", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Authority = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Params == nil {
					x.Params = &Params{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Params); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgUpdateParamsResponse protoreflect.MessageDescriptor
)

func init() {
	file_academictoken_curriculum_tx_proto_init()
	md_MsgUpdateParamsResponse = File_academictoken_curriculum_tx_proto.Messages().ByName("MsgUpdateParamsResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgUpdateParamsResponse)(nil)

type fastReflection_MsgUpdateParamsResponse MsgUpdateParamsResponse

func (x *MsgUpdateParamsResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgUpdateParamsResponse)(x)
}

func (x *MsgUpdateParamsResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_academictoken_curriculum_tx_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgUpdateParamsResponse_messageType fastReflection_MsgUpdateParamsResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgUpdateParamsResponse_messageType{}

type fastReflection_MsgUpdateParamsResponse_messageType struct{}

func (x fastReflection_MsgUpdateParamsResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgUpdateParamsResponse)(nil)
}
func (x fastReflection_MsgUpdateParamsResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgUpdateParamsResponse)
}
func (x fastReflection_MsgUpdateParamsResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUpdateParamsResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgUpdateParamsResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUpdateParamsResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgUpdateParamsResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgUpdateParamsResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgUpdateParamsResponse) New() protoreflect.Message {
	return new(fastReflection_MsgUpdateParamsResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgUpdateParamsResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgUpdateParamsResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgUpdateParamsResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgUpdateParamsResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.curriculum.MsgUpdateParamsResponse"))
		}
		panic(fmt.Errorf("message academictoken.curriculum.MsgUpdateParamsResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateParamsResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.curriculum.MsgUpdateParamsResponse"))
		}
		panic(fmt.Errorf("message academictoken.curriculum.MsgUpdateParamsResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgUpdateParamsResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.curriculum.MsgUpdateParamsResponse"))
		}
		panic(fmt.Errorf("message academictoken.curriculum.MsgUpdateParamsResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateParamsResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.curriculum.MsgUpdateParamsResponse"))
		}
		panic(fmt.Errorf("message academictoken.curriculum.MsgUpdateParamsResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateParamsResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.curriculum.MsgUpdateParamsResponse"))
		}
		panic(fmt.Errorf("message academictoken.curriculum.MsgUpdateParamsResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgUpdateParamsResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.curriculum.MsgUpdateParamsResponse"))
		}
		panic(fmt.Errorf("message academictoken.curriculum.MsgUpdateParamsResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgUpdateParamsResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in academictoken.curriculum.MsgUpdateParamsResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgUpdateParamsResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateParamsResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgUpdateParamsResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgUpdateParamsResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgUpdateParamsResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgUpdateParamsResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgUpdateParamsResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUpdateParamsResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUpdateParamsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_MsgCreateCurriculumTree_6_list)(nil)

type _MsgCreateCurriculumTree_6_list struct {
	list *[]string
}

func (x *_MsgCreateCurriculumTree_6_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgCreateCurriculumTree_6_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_MsgCreateCurriculumTree_6_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_MsgCreateCurriculumTree_6_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgCreateCurriculumTree_6_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message MsgCreateCurriculumTree at list field RequiredSubjects as it is not of Message kind"))
}

func (x *_MsgCreateCurriculumTree_6_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_MsgCreateCurriculumTree_6_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_MsgCreateCurriculumTree_6_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_MsgCreateCurriculumTree_7_list)(nil)

type _MsgCreateCurriculumTree_7_list struct {
	list *[]string
}

func (x *_MsgCreateCurriculumTree_7_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgCreateCurriculumTree_7_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_MsgCreateCurriculumTree_7_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_MsgCreateCurriculumTree_7_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgCreateCurriculumTree_7_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message MsgCreateCurriculumTree at list field ElectiveSubjects as it is not of Message kind"))
}

func (x *_MsgCreateCurriculumTree_7_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_MsgCreateCurriculumTree_7_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_MsgCreateCurriculumTree_7_list) IsValid() bool {
	return x.list != nil
}

var (
	md_MsgCreateCurriculumTree                    protoreflect.MessageDescriptor
	fd_MsgCreateCurriculumTree_creator            protoreflect.FieldDescriptor
	fd_MsgCreateCurriculumTree_courseId           protoreflect.FieldDescriptor
	fd_MsgCreateCurriculumTree_version            protoreflect.FieldDescriptor
	fd_MsgCreateCurriculumTree_electiveMin        protoreflect.FieldDescriptor
	fd_MsgCreateCurriculumTree_totalWorkloadHours protoreflect.FieldDescriptor
	fd_MsgCreateCurriculumTree_requiredSubjects   protoreflect.FieldDescriptor
	fd_MsgCreateCurriculumTree_electiveSubjects   protoreflect.FieldDescriptor
)

func init() {
	file_academictoken_curriculum_tx_proto_init()
	md_MsgCreateCurriculumTree = File_academictoken_curriculum_tx_proto.Messages().ByName("MsgCreateCurriculumTree")
	fd_MsgCreateCurriculumTree_creator = md_MsgCreateCurriculumTree.Fields().ByName("creator")
	fd_MsgCreateCurriculumTree_courseId = md_MsgCreateCurriculumTree.Fields().ByName("courseId")
	fd_MsgCreateCurriculumTree_version = md_MsgCreateCurriculumTree.Fields().ByName("version")
	fd_MsgCreateCurriculumTree_electiveMin = md_MsgCreateCurriculumTree.Fields().ByName("electiveMin")
	fd_MsgCreateCurriculumTree_totalWorkloadHours = md_MsgCreateCurriculumTree.Fields().ByName("totalWorkloadHours")
	fd_MsgCreateCurriculumTree_requiredSubjects = md_MsgCreateCurriculumTree.Fields().ByName("requiredSubjects")
	fd_MsgCreateCurriculumTree_electiveSubjects = md_MsgCreateCurriculumTree.Fields().ByName("electiveSubjects")
}

var _ protoreflect.Message = (*fastReflection_MsgCreateCurriculumTree)(nil)

type fastReflection_MsgCreateCurriculumTree MsgCreateCurriculumTree

func (x *MsgCreateCurriculumTree) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgCreateCurriculumTree)(x)
}

func (x *MsgCreateCurriculumTree) slowProtoReflect() protoreflect.Message {
	mi := &file_academictoken_curriculum_tx_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgCreateCurriculumTree_messageType fastReflection_MsgCreateCurriculumTree_messageType
var _ protoreflect.MessageType = fastReflection_MsgCreateCurriculumTree_messageType{}

type fastReflection_MsgCreateCurriculumTree_messageType struct{}

func (x fastReflection_MsgCreateCurriculumTree_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgCreateCurriculumTree)(nil)
}
func (x fastReflection_MsgCreateCurriculumTree_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgCreateCurriculumTree)
}
func (x fastReflection_MsgCreateCurriculumTree_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgCreateCurriculumTree
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgCreateCurriculumTree) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgCreateCurriculumTree
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgCreateCurriculumTree) Type() protoreflect.MessageType {
	return _fastReflection_MsgCreateCurriculumTree_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgCreateCurriculumTree) New() protoreflect.Message {
	return new(fastReflection_MsgCreateCurriculumTree)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgCreateCurriculumTree) Interface() protoreflect.ProtoMessage {
	return (*MsgCreateCurriculumTree)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgCreateCurriculumTree) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Creator != "" {
		value := protoreflect.ValueOfString(x.Creator)
		if !f(fd_MsgCreateCurriculumTree_creator, value) {
			return
		}
	}
	if x.CourseId != "" {
		value := protoreflect.ValueOfString(x.CourseId)
		if !f(fd_MsgCreateCurriculumTree_courseId, value) {
			return
		}
	}
	if x.Version != "" {
		value := protoreflect.ValueOfString(x.Version)
		if !f(fd_MsgCreateCurriculumTree_version, value) {
			return
		}
	}
	if x.ElectiveMin != uint64(0) {
		value := protoreflect.ValueOfUint64(x.ElectiveMin)
		if !f(fd_MsgCreateCurriculumTree_electiveMin, value) {
			return
		}
	}
	if x.TotalWorkloadHours != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TotalWorkloadHours)
		if !f(fd_MsgCreateCurriculumTree_totalWorkloadHours, value) {
			return
		}
	}
	if len(x.RequiredSubjects) != 0 {
		value := protoreflect.ValueOfList(&_MsgCreateCurriculumTree_6_list{list: &x.RequiredSubjects})
		if !f(fd_MsgCreateCurriculumTree_requiredSubjects, value) {
			return
		}
	}
	if len(x.ElectiveSubjects) != 0 {
		value := protoreflect.ValueOfList(&_MsgCreateCurriculumTree_7_list{list: &x.ElectiveSubjects})
		if !f(fd_MsgCreateCurriculumTree_electiveSubjects, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgCreateCurriculumTree) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "academictoken.curriculum.MsgCreateCurriculumTree.creator":
		return x.Creator != ""
	case "academictoken.curriculum.MsgCreateCurriculumTree.courseId":
		return x.CourseId != ""
	case "academictoken.curriculum.MsgCreateCurriculumTree.version":
		return x.Version != ""
	case "academictoken.curriculum.MsgCreateCurriculumTree.electiveMin":
		return x.ElectiveMin != uint64(0)
	case "academictoken.curriculum.MsgCreateCurriculumTree.totalWorkloadHours":
		return x.TotalWorkloadHours != uint64(0)
	case "academictoken.curriculum.MsgCreateCurriculumTree.requiredSubjects":
		return len(x.RequiredSubjects) != 0
	case "academictoken.curriculum.MsgCreateCurriculumTree.electiveSubjects":
		return len(x.ElectiveSubjects) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.curriculum.MsgCreateCurriculumTree"))
		}
		panic(fmt.Errorf("message academictoken.curriculum.MsgCreateCurriculumTree does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCreateCurriculumTree) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "academictoken.curriculum.MsgCreateCurriculumTree.creator":
		x.Creator = ""
	case "academictoken.curriculum.MsgCreateCurriculumTree.courseId":
		x.CourseId = ""
	case "academictoken.curriculum.MsgCreateCurriculumTree.version":
		x.Version = ""
	case "academictoken.curriculum.MsgCreateCurriculumTree.electiveMin":
		x.ElectiveMin = uint64(0)
	case "academictoken.curriculum.MsgCreateCurriculumTree.totalWorkloadHours":
		x.TotalWorkloadHours = uint64(0)
	case "academictoken.curriculum.MsgCreateCurriculumTree.requiredSubjects":
		x.RequiredSubjects = nil
	case "academictoken.curriculum.MsgCreateCurriculumTree.electiveSubjects":
		x.ElectiveSubjects = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.curriculum.MsgCreateCurriculumTree"))
		}
		panic(fmt.Errorf("message academictoken.curriculum.MsgCreateCurriculumTree does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgCreateCurriculumTree) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "academictoken.curriculum.MsgCreateCurriculumTree.creator":
		value := x.Creator
		return protoreflect.ValueOfString(value)
	case "academictoken.curriculum.MsgCreateCurriculumTree.courseId":
		value := x.CourseId
		return protoreflect.ValueOfString(value)
	case "academictoken.curriculum.MsgCreateCurriculumTree.version":
		value := x.Version
		return protoreflect.ValueOfString(value)
	case "academictoken.curriculum.MsgCreateCurriculumTree.electiveMin":
		value := x.ElectiveMin
		return protoreflect.ValueOfUint64(value)
	case "academictoken.curriculum.MsgCreateCurriculumTree.totalWorkloadHours":
		value := x.TotalWorkloadHours
		return protoreflect.ValueOfUint64(value)
	case "academictoken.curriculum.MsgCreateCurriculumTree.requiredSubjects":
		if len(x.RequiredSubjects) == 0 {
			return protoreflect.ValueOfList(&_MsgCreateCurriculumTree_6_list{})
		}
		listValue := &_MsgCreateCurriculumTree_6_list{list: &x.RequiredSubjects}
		return protoreflect.ValueOfList(listValue)
	case "academictoken.curriculum.MsgCreateCurriculumTree.electiveSubjects":
		if len(x.ElectiveSubjects) == 0 {
			return protoreflect.ValueOfList(&_MsgCreateCurriculumTree_7_list{})
		}
		listValue := &_MsgCreateCurriculumTree_7_list{list: &x.ElectiveSubjects}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.curriculum.MsgCreateCurriculumTree"))
		}
		panic(fmt.Errorf("message academictoken.curriculum.MsgCreateCurriculumTree does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCreateCurriculumTree) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "academictoken.curriculum.MsgCreateCurriculumTree.creator":
		x.Creator = value.Interface().(string)
	case "academictoken.curriculum.MsgCreateCurriculumTree.courseId":
		x.CourseId = value.Interface().(string)
	case "academictoken.curriculum.MsgCreateCurriculumTree.version":
		x.Version = value.Interface().(string)
	case "academictoken.curriculum.MsgCreateCurriculumTree.electiveMin":
		x.ElectiveMin = value.Uint()
	case "academictoken.curriculum.MsgCreateCurriculumTree.totalWorkloadHours":
		x.TotalWorkloadHours = value.Uint()
	case "academictoken.curriculum.MsgCreateCurriculumTree.requiredSubjects":
		lv := value.List()
		clv := lv.(*_MsgCreateCurriculumTree_6_list)
		x.RequiredSubjects = *clv.list
	case "academictoken.curriculum.MsgCreateCurriculumTree.electiveSubjects":
		lv := value.List()
		clv := lv.(*_MsgCreateCurriculumTree_7_list)
		x.ElectiveSubjects = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.curriculum.MsgCreateCurriculumTree"))
		}
		panic(fmt.Errorf("message academictoken.curriculum.MsgCreateCurriculumTree does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCreateCurriculumTree) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "academictoken.curriculum.MsgCreateCurriculumTree.requiredSubjects":
		if x.RequiredSubjects == nil {
			x.RequiredSubjects = []string{}
		}
		value := &_MsgCreateCurriculumTree_6_list{list: &x.RequiredSubjects}
		return protoreflect.ValueOfList(value)
	case "academictoken.curriculum.MsgCreateCurriculumTree.electiveSubjects":
		if x.ElectiveSubjects == nil {
			x.ElectiveSubjects = []string{}
		}
		value := &_MsgCreateCurriculumTree_7_list{list: &x.ElectiveSubjects}
		return protoreflect.ValueOfList(value)
	case "academictoken.curriculum.MsgCreateCurriculumTree.creator":
		panic(fmt.Errorf("field creator of message academictoken.curriculum.MsgCreateCurriculumTree is not mutable"))
	case "academictoken.curriculum.MsgCreateCurriculumTree.courseId":
		panic(fmt.Errorf("field courseId of message academictoken.curriculum.MsgCreateCurriculumTree is not mutable"))
	case "academictoken.curriculum.MsgCreateCurriculumTree.version":
		panic(fmt.Errorf("field version of message academictoken.curriculum.MsgCreateCurriculumTree is not mutable"))
	case "academictoken.curriculum.MsgCreateCurriculumTree.electiveMin":
		panic(fmt.Errorf("field electiveMin of message academictoken.curriculum.MsgCreateCurriculumTree is not mutable"))
	case "academictoken.curriculum.MsgCreateCurriculumTree.totalWorkloadHours":
		panic(fmt.Errorf("field totalWorkloadHours of message academictoken.curriculum.MsgCreateCurriculumTree is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.curriculum.MsgCreateCurriculumTree"))
		}
		panic(fmt.Errorf("message academictoken.curriculum.MsgCreateCurriculumTree does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgCreateCurriculumTree) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "academictoken.curriculum.MsgCreateCurriculumTree.creator":
		return protoreflect.ValueOfString("")
	case "academictoken.curriculum.MsgCreateCurriculumTree.courseId":
		return protoreflect.ValueOfString("")
	case "academictoken.curriculum.MsgCreateCurriculumTree.version":
		return protoreflect.ValueOfString("")
	case "academictoken.curriculum.MsgCreateCurriculumTree.electiveMin":
		return protoreflect.ValueOfUint64(uint64(0))
	case "academictoken.curriculum.MsgCreateCurriculumTree.totalWorkloadHours":
		return protoreflect.ValueOfUint64(uint64(0))
	case "academictoken.curriculum.MsgCreateCurriculumTree.requiredSubjects":
		list := []string{}
		return protoreflect.ValueOfList(&_MsgCreateCurriculumTree_6_list{list: &list})
	case "academictoken.curriculum.MsgCreateCurriculumTree.electiveSubjects":
		list := []string{}
		return protoreflect.ValueOfList(&_MsgCreateCurriculumTree_7_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.curriculum.MsgCreateCurriculumTree"))
		}
		panic(fmt.Errorf("message academictoken.curriculum.MsgCreateCurriculumTree does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgCreateCurriculumTree) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in academictoken.curriculum.MsgCreateCurriculumTree", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgCreateCurriculumTree) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCreateCurriculumTree) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgCreateCurriculumTree) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgCreateCurriculumTree) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgCreateCurriculumTree)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Creator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.CourseId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Version)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.ElectiveMin != 0 {
			n += 1 + runtime.Sov(uint64(x.ElectiveMin))
		}
		if x.TotalWorkloadHours != 0 {
			n += 1 + runtime.Sov(uint64(x.TotalWorkloadHours))
		}
		if len(x.RequiredSubjects) > 0 {
			for _, s := range x.RequiredSubjects {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.ElectiveSubjects) > 0 {
			for _, s := range x.ElectiveSubjects {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgCreateCurriculumTree)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.ElectiveSubjects) > 0 {
			for iNdEx := len(x.ElectiveSubjects) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.ElectiveSubjects[iNdEx])
				copy(dAtA[i:], x.ElectiveSubjects[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ElectiveSubjects[iNdEx])))
				i--
				dAtA[i] = 0x3a
			}
		}
		if len(x.RequiredSubjects) > 0 {
			for iNdEx := len(x.RequiredSubjects) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.RequiredSubjects[iNdEx])
				copy(dAtA[i:], x.RequiredSubjects[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.RequiredSubjects[iNdEx])))
				i--
				dAtA[i] = 0x32
			}
		}
		if x.TotalWorkloadHours != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TotalWorkloadHours))
			i--
			dAtA[i] = 0x28
		}
		if x.ElectiveMin != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.ElectiveMin))
			i--
			dAtA[i] = 0x20
		}
		if len(x.Version) > 0 {
			i -= len(x.Version)
			copy(dAtA[i:], x.Version)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Version)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.CourseId) > 0 {
			i -= len(x.CourseId)
			copy(dAtA[i:], x.CourseId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.CourseId)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Creator) > 0 {
			i -= len(x.Creator)
			copy(dAtA[i:], x.Creator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Creator)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgCreateCurriculumTree)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgCreateCurriculumTree: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgCreateCurriculumTree: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Creator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CourseId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CourseId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Version", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Version = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ElectiveMin", wireType)
				}
				x.ElectiveMin = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.ElectiveMin |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 5:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TotalWorkloadHours", wireType)
				}
				x.TotalWorkloadHours = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TotalWorkloadHours |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RequiredSubjects", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.RequiredSubjects = append(x.RequiredSubjects, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			case 7:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ElectiveSubjects", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ElectiveSubjects = append(x.ElectiveSubjects, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgCreateCurriculumTreeResponse protoreflect.MessageDescriptor
)

func init() {
	file_academictoken_curriculum_tx_proto_init()
	md_MsgCreateCurriculumTreeResponse = File_academictoken_curriculum_tx_proto.Messages().ByName("MsgCreateCurriculumTreeResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgCreateCurriculumTreeResponse)(nil)

type fastReflection_MsgCreateCurriculumTreeResponse MsgCreateCurriculumTreeResponse

func (x *MsgCreateCurriculumTreeResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgCreateCurriculumTreeResponse)(x)
}

func (x *MsgCreateCurriculumTreeResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_academictoken_curriculum_tx_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgCreateCurriculumTreeResponse_messageType fastReflection_MsgCreateCurriculumTreeResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgCreateCurriculumTreeResponse_messageType{}

type fastReflection_MsgCreateCurriculumTreeResponse_messageType struct{}

func (x fastReflection_MsgCreateCurriculumTreeResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgCreateCurriculumTreeResponse)(nil)
}
func (x fastReflection_MsgCreateCurriculumTreeResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgCreateCurriculumTreeResponse)
}
func (x fastReflection_MsgCreateCurriculumTreeResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgCreateCurriculumTreeResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgCreateCurriculumTreeResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgCreateCurriculumTreeResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgCreateCurriculumTreeResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgCreateCurriculumTreeResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgCreateCurriculumTreeResponse) New() protoreflect.Message {
	return new(fastReflection_MsgCreateCurriculumTreeResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgCreateCurriculumTreeResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgCreateCurriculumTreeResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgCreateCurriculumTreeResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgCreateCurriculumTreeResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.curriculum.MsgCreateCurriculumTreeResponse"))
		}
		panic(fmt.Errorf("message academictoken.curriculum.MsgCreateCurriculumTreeResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCreateCurriculumTreeResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.curriculum.MsgCreateCurriculumTreeResponse"))
		}
		panic(fmt.Errorf("message academictoken.curriculum.MsgCreateCurriculumTreeResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgCreateCurriculumTreeResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.curriculum.MsgCreateCurriculumTreeResponse"))
		}
		panic(fmt.Errorf("message academictoken.curriculum.MsgCreateCurriculumTreeResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCreateCurriculumTreeResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.curriculum.MsgCreateCurriculumTreeResponse"))
		}
		panic(fmt.Errorf("message academictoken.curriculum.MsgCreateCurriculumTreeResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCreateCurriculumTreeResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.curriculum.MsgCreateCurriculumTreeResponse"))
		}
		panic(fmt.Errorf("message academictoken.curriculum.MsgCreateCurriculumTreeResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgCreateCurriculumTreeResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.curriculum.MsgCreateCurriculumTreeResponse"))
		}
		panic(fmt.Errorf("message academictoken.curriculum.MsgCreateCurriculumTreeResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgCreateCurriculumTreeResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in academictoken.curriculum.MsgCreateCurriculumTreeResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgCreateCurriculumTreeResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCreateCurriculumTreeResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgCreateCurriculumTreeResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgCreateCurriculumTreeResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgCreateCurriculumTreeResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgCreateCurriculumTreeResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgCreateCurriculumTreeResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgCreateCurriculumTreeResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgCreateCurriculumTreeResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_MsgAddSemesterToCurriculum_4_list)(nil)

type _MsgAddSemesterToCurriculum_4_list struct {
	list *[]string
}

func (x *_MsgAddSemesterToCurriculum_4_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgAddSemesterToCurriculum_4_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_MsgAddSemesterToCurriculum_4_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_MsgAddSemesterToCurriculum_4_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgAddSemesterToCurriculum_4_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message MsgAddSemesterToCurriculum at list field SubjectIds as it is not of Message kind"))
}

func (x *_MsgAddSemesterToCurriculum_4_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_MsgAddSemesterToCurriculum_4_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_MsgAddSemesterToCurriculum_4_list) IsValid() bool {
	return x.list != nil
}

var (
	md_MsgAddSemesterToCurriculum                 protoreflect.MessageDescriptor
	fd_MsgAddSemesterToCurriculum_creator         protoreflect.FieldDescriptor
	fd_MsgAddSemesterToCurriculum_curriculumIndex protoreflect.FieldDescriptor
	fd_MsgAddSemesterToCurriculum_semesterNumber  protoreflect.FieldDescriptor
	fd_MsgAddSemesterToCurriculum_subjectIds      protoreflect.FieldDescriptor
)

func init() {
	file_academictoken_curriculum_tx_proto_init()
	md_MsgAddSemesterToCurriculum = File_academictoken_curriculum_tx_proto.Messages().ByName("MsgAddSemesterToCurriculum")
	fd_MsgAddSemesterToCurriculum_creator = md_MsgAddSemesterToCurriculum.Fields().ByName("creator")
	fd_MsgAddSemesterToCurriculum_curriculumIndex = md_MsgAddSemesterToCurriculum.Fields().ByName("curriculumIndex")
	fd_MsgAddSemesterToCurriculum_semesterNumber = md_MsgAddSemesterToCurriculum.Fields().ByName("semesterNumber")
	fd_MsgAddSemesterToCurriculum_subjectIds = md_MsgAddSemesterToCurriculum.Fields().ByName("subjectIds")
}

var _ protoreflect.Message = (*fastReflection_MsgAddSemesterToCurriculum)(nil)

type fastReflection_MsgAddSemesterToCurriculum MsgAddSemesterToCurriculum

func (x *MsgAddSemesterToCurriculum) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgAddSemesterToCurriculum)(x)
}

func (x *MsgAddSemesterToCurriculum) slowProtoReflect() protoreflect.Message {
	mi := &file_academictoken_curriculum_tx_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgAddSemesterToCurriculum_messageType fastReflection_MsgAddSemesterToCurriculum_messageType
var _ protoreflect.MessageType = fastReflection_MsgAddSemesterToCurriculum_messageType{}

type fastReflection_MsgAddSemesterToCurriculum_messageType struct{}

func (x fastReflection_MsgAddSemesterToCurriculum_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgAddSemesterToCurriculum)(nil)
}
func (x fastReflection_MsgAddSemesterToCurriculum_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgAddSemesterToCurriculum)
}
func (x fastReflection_MsgAddSemesterToCurriculum_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgAddSemesterToCurriculum
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgAddSemesterToCurriculum) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgAddSemesterToCurriculum
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgAddSemesterToCurriculum) Type() protoreflect.MessageType {
	return _fastReflection_MsgAddSemesterToCurriculum_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgAddSemesterToCurriculum) New() protoreflect.Message {
	return new(fastReflection_MsgAddSemesterToCurriculum)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgAddSemesterToCurriculum) Interface() protoreflect.ProtoMessage {
	return (*MsgAddSemesterToCurriculum)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgAddSemesterToCurriculum) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Creator != "" {
		value := protoreflect.ValueOfString(x.Creator)
		if !f(fd_MsgAddSemesterToCurriculum_creator, value) {
			return
		}
	}
	if x.CurriculumIndex != "" {
		value := protoreflect.ValueOfString(x.CurriculumIndex)
		if !f(fd_MsgAddSemesterToCurriculum_curriculumIndex, value) {
			return
		}
	}
	if x.SemesterNumber != uint64(0) {
		value := protoreflect.ValueOfUint64(x.SemesterNumber)
		if !f(fd_MsgAddSemesterToCurriculum_semesterNumber, value) {
			return
		}
	}
	if len(x.SubjectIds) != 0 {
		value := protoreflect.ValueOfList(&_MsgAddSemesterToCurriculum_4_list{list: &x.SubjectIds})
		if !f(fd_MsgAddSemesterToCurriculum_subjectIds, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgAddSemesterToCurriculum) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "academictoken.curriculum.MsgAddSemesterToCurriculum.creator":
		return x.Creator != ""
	case "academictoken.curriculum.MsgAddSemesterToCurriculum.curriculumIndex":
		return x.CurriculumIndex != ""
	case "academictoken.curriculum.MsgAddSemesterToCurriculum.semesterNumber":
		return x.SemesterNumber != uint64(0)
	case "academictoken.curriculum.MsgAddSemesterToCurriculum.subjectIds":
		return len(x.SubjectIds) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.curriculum.MsgAddSemesterToCurriculum"))
		}
		panic(fmt.Errorf("message academictoken.curriculum.MsgAddSemesterToCurriculum does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAddSemesterToCurriculum) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "academictoken.curriculum.MsgAddSemesterToCurriculum.creator":
		x.Creator = ""
	case "academictoken.curriculum.MsgAddSemesterToCurriculum.curriculumIndex":
		x.CurriculumIndex = ""
	case "academictoken.curriculum.MsgAddSemesterToCurriculum.semesterNumber":
		x.SemesterNumber = uint64(0)
	case "academictoken.curriculum.MsgAddSemesterToCurriculum.subjectIds":
		x.SubjectIds = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.curriculum.MsgAddSemesterToCurriculum"))
		}
		panic(fmt.Errorf("message academictoken.curriculum.MsgAddSemesterToCurriculum does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgAddSemesterToCurriculum) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "academictoken.curriculum.MsgAddSemesterToCurriculum.creator":
		value := x.Creator
		return protoreflect.ValueOfString(value)
	case "academictoken.curriculum.MsgAddSemesterToCurriculum.curriculumIndex":
		value := x.CurriculumIndex
		return protoreflect.ValueOfString(value)
	case "academictoken.curriculum.MsgAddSemesterToCurriculum.semesterNumber":
		value := x.SemesterNumber
		return protoreflect.ValueOfUint64(value)
	case "academictoken.curriculum.MsgAddSemesterToCurriculum.subjectIds":
		if len(x.SubjectIds) == 0 {
			return protoreflect.ValueOfList(&_MsgAddSemesterToCurriculum_4_list{})
		}
		listValue := &_MsgAddSemesterToCurriculum_4_list{list: &x.SubjectIds}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.curriculum.MsgAddSemesterToCurriculum"))
		}
		panic(fmt.Errorf("message academictoken.curriculum.MsgAddSemesterToCurriculum does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAddSemesterToCurriculum) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "academictoken.curriculum.MsgAddSemesterToCurriculum.creator":
		x.Creator = value.Interface().(string)
	case "academictoken.curriculum.MsgAddSemesterToCurriculum.curriculumIndex":
		x.CurriculumIndex = value.Interface().(string)
	case "academictoken.curriculum.MsgAddSemesterToCurriculum.semesterNumber":
		x.SemesterNumber = value.Uint()
	case "academictoken.curriculum.MsgAddSemesterToCurriculum.subjectIds":
		lv := value.List()
		clv := lv.(*_MsgAddSemesterToCurriculum_4_list)
		x.SubjectIds = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.curriculum.MsgAddSemesterToCurriculum"))
		}
		panic(fmt.Errorf("message academictoken.curriculum.MsgAddSemesterToCurriculum does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAddSemesterToCurriculum) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "academictoken.curriculum.MsgAddSemesterToCurriculum.subjectIds":
		if x.SubjectIds == nil {
			x.SubjectIds = []string{}
		}
		value := &_MsgAddSemesterToCurriculum_4_list{list: &x.SubjectIds}
		return protoreflect.ValueOfList(value)
	case "academictoken.curriculum.MsgAddSemesterToCurriculum.creator":
		panic(fmt.Errorf("field creator of message academictoken.curriculum.MsgAddSemesterToCurriculum is not mutable"))
	case "academictoken.curriculum.MsgAddSemesterToCurriculum.curriculumIndex":
		panic(fmt.Errorf("field curriculumIndex of message academictoken.curriculum.MsgAddSemesterToCurriculum is not mutable"))
	case "academictoken.curriculum.MsgAddSemesterToCurriculum.semesterNumber":
		panic(fmt.Errorf("field semesterNumber of message academictoken.curriculum.MsgAddSemesterToCurriculum is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.curriculum.MsgAddSemesterToCurriculum"))
		}
		panic(fmt.Errorf("message academictoken.curriculum.MsgAddSemesterToCurriculum does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgAddSemesterToCurriculum) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "academictoken.curriculum.MsgAddSemesterToCurriculum.creator":
		return protoreflect.ValueOfString("")
	case "academictoken.curriculum.MsgAddSemesterToCurriculum.curriculumIndex":
		return protoreflect.ValueOfString("")
	case "academictoken.curriculum.MsgAddSemesterToCurriculum.semesterNumber":
		return protoreflect.ValueOfUint64(uint64(0))
	case "academictoken.curriculum.MsgAddSemesterToCurriculum.subjectIds":
		list := []string{}
		return protoreflect.ValueOfList(&_MsgAddSemesterToCurriculum_4_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.curriculum.MsgAddSemesterToCurriculum"))
		}
		panic(fmt.Errorf("message academictoken.curriculum.MsgAddSemesterToCurriculum does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgAddSemesterToCurriculum) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in academictoken.curriculum.MsgAddSemesterToCurriculum", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgAddSemesterToCurriculum) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAddSemesterToCurriculum) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgAddSemesterToCurriculum) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgAddSemesterToCurriculum) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgAddSemesterToCurriculum)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Creator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.CurriculumIndex)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.SemesterNumber != 0 {
			n += 1 + runtime.Sov(uint64(x.SemesterNumber))
		}
		if len(x.SubjectIds) > 0 {
			for _, s := range x.SubjectIds {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgAddSemesterToCurriculum)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.SubjectIds) > 0 {
			for iNdEx := len(x.SubjectIds) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.SubjectIds[iNdEx])
				copy(dAtA[i:], x.SubjectIds[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.SubjectIds[iNdEx])))
				i--
				dAtA[i] = 0x22
			}
		}
		if x.SemesterNumber != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.SemesterNumber))
			i--
			dAtA[i] = 0x18
		}
		if len(x.CurriculumIndex) > 0 {
			i -= len(x.CurriculumIndex)
			copy(dAtA[i:], x.CurriculumIndex)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.CurriculumIndex)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Creator) > 0 {
			i -= len(x.Creator)
			copy(dAtA[i:], x.Creator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Creator)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgAddSemesterToCurriculum)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgAddSemesterToCurriculum: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgAddSemesterToCurriculum: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Creator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CurriculumIndex", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CurriculumIndex = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field SemesterNumber", wireType)
				}
				x.SemesterNumber = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.SemesterNumber |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field SubjectIds", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.SubjectIds = append(x.SubjectIds, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgAddSemesterToCurriculumResponse protoreflect.MessageDescriptor
)

func init() {
	file_academictoken_curriculum_tx_proto_init()
	md_MsgAddSemesterToCurriculumResponse = File_academictoken_curriculum_tx_proto.Messages().ByName("MsgAddSemesterToCurriculumResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgAddSemesterToCurriculumResponse)(nil)

type fastReflection_MsgAddSemesterToCurriculumResponse MsgAddSemesterToCurriculumResponse

func (x *MsgAddSemesterToCurriculumResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgAddSemesterToCurriculumResponse)(x)
}

func (x *MsgAddSemesterToCurriculumResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_academictoken_curriculum_tx_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgAddSemesterToCurriculumResponse_messageType fastReflection_MsgAddSemesterToCurriculumResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgAddSemesterToCurriculumResponse_messageType{}

type fastReflection_MsgAddSemesterToCurriculumResponse_messageType struct{}

func (x fastReflection_MsgAddSemesterToCurriculumResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgAddSemesterToCurriculumResponse)(nil)
}
func (x fastReflection_MsgAddSemesterToCurriculumResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgAddSemesterToCurriculumResponse)
}
func (x fastReflection_MsgAddSemesterToCurriculumResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgAddSemesterToCurriculumResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgAddSemesterToCurriculumResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgAddSemesterToCurriculumResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgAddSemesterToCurriculumResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgAddSemesterToCurriculumResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgAddSemesterToCurriculumResponse) New() protoreflect.Message {
	return new(fastReflection_MsgAddSemesterToCurriculumResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgAddSemesterToCurriculumResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgAddSemesterToCurriculumResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgAddSemesterToCurriculumResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgAddSemesterToCurriculumResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.curriculum.MsgAddSemesterToCurriculumResponse"))
		}
		panic(fmt.Errorf("message academictoken.curriculum.MsgAddSemesterToCurriculumResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAddSemesterToCurriculumResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.curriculum.MsgAddSemesterToCurriculumResponse"))
		}
		panic(fmt.Errorf("message academictoken.curriculum.MsgAddSemesterToCurriculumResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgAddSemesterToCurriculumResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.curriculum.MsgAddSemesterToCurriculumResponse"))
		}
		panic(fmt.Errorf("message academictoken.curriculum.MsgAddSemesterToCurriculumResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAddSemesterToCurriculumResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.curriculum.MsgAddSemesterToCurriculumResponse"))
		}
		panic(fmt.Errorf("message academictoken.curriculum.MsgAddSemesterToCurriculumResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAddSemesterToCurriculumResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.curriculum.MsgAddSemesterToCurriculumResponse"))
		}
		panic(fmt.Errorf("message academictoken.curriculum.MsgAddSemesterToCurriculumResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgAddSemesterToCurriculumResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.curriculum.MsgAddSemesterToCurriculumResponse"))
		}
		panic(fmt.Errorf("message academictoken.curriculum.MsgAddSemesterToCurriculumResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgAddSemesterToCurriculumResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in academictoken.curriculum.MsgAddSemesterToCurriculumResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgAddSemesterToCurriculumResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAddSemesterToCurriculumResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgAddSemesterToCurriculumResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgAddSemesterToCurriculumResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgAddSemesterToCurriculumResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgAddSemesterToCurriculumResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgAddSemesterToCurriculumResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgAddSemesterToCurriculumResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgAddSemesterToCurriculumResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_MsgAddElectiveGroup_8_list)(nil)

type _MsgAddElectiveGroup_8_list struct {
	list *[]string
}

func (x *_MsgAddElectiveGroup_8_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgAddElectiveGroup_8_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_MsgAddElectiveGroup_8_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_MsgAddElectiveGroup_8_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgAddElectiveGroup_8_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message MsgAddElectiveGroup at list field SubjectIds as it is not of Message kind"))
}

func (x *_MsgAddElectiveGroup_8_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_MsgAddElectiveGroup_8_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_MsgAddElectiveGroup_8_list) IsValid() bool {
	return x.list != nil
}

var (
	md_MsgAddElectiveGroup                     protoreflect.MessageDescriptor
	fd_MsgAddElectiveGroup_creator             protoreflect.FieldDescriptor
	fd_MsgAddElectiveGroup_curriculumIndex     protoreflect.FieldDescriptor
	fd_MsgAddElectiveGroup_name                protoreflect.FieldDescriptor
	fd_MsgAddElectiveGroup_description         protoreflect.FieldDescriptor
	fd_MsgAddElectiveGroup_minSubjectsRequired protoreflect.FieldDescriptor
	fd_MsgAddElectiveGroup_creditsRequired     protoreflect.FieldDescriptor
	fd_MsgAddElectiveGroup_knowledgeArea       protoreflect.FieldDescriptor
	fd_MsgAddElectiveGroup_subjectIds          protoreflect.FieldDescriptor
)

func init() {
	file_academictoken_curriculum_tx_proto_init()
	md_MsgAddElectiveGroup = File_academictoken_curriculum_tx_proto.Messages().ByName("MsgAddElectiveGroup")
	fd_MsgAddElectiveGroup_creator = md_MsgAddElectiveGroup.Fields().ByName("creator")
	fd_MsgAddElectiveGroup_curriculumIndex = md_MsgAddElectiveGroup.Fields().ByName("curriculumIndex")
	fd_MsgAddElectiveGroup_name = md_MsgAddElectiveGroup.Fields().ByName("name")
	fd_MsgAddElectiveGroup_description = md_MsgAddElectiveGroup.Fields().ByName("description")
	fd_MsgAddElectiveGroup_minSubjectsRequired = md_MsgAddElectiveGroup.Fields().ByName("minSubjectsRequired")
	fd_MsgAddElectiveGroup_creditsRequired = md_MsgAddElectiveGroup.Fields().ByName("creditsRequired")
	fd_MsgAddElectiveGroup_knowledgeArea = md_MsgAddElectiveGroup.Fields().ByName("knowledgeArea")
	fd_MsgAddElectiveGroup_subjectIds = md_MsgAddElectiveGroup.Fields().ByName("subjectIds")
}

var _ protoreflect.Message = (*fastReflection_MsgAddElectiveGroup)(nil)

type fastReflection_MsgAddElectiveGroup MsgAddElectiveGroup

func (x *MsgAddElectiveGroup) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgAddElectiveGroup)(x)
}

func (x *MsgAddElectiveGroup) slowProtoReflect() protoreflect.Message {
	mi := &file_academictoken_curriculum_tx_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgAddElectiveGroup_messageType fastReflection_MsgAddElectiveGroup_messageType
var _ protoreflect.MessageType = fastReflection_MsgAddElectiveGroup_messageType{}

type fastReflection_MsgAddElectiveGroup_messageType struct{}

func (x fastReflection_MsgAddElectiveGroup_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgAddElectiveGroup)(nil)
}
func (x fastReflection_MsgAddElectiveGroup_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgAddElectiveGroup)
}
func (x fastReflection_MsgAddElectiveGroup_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgAddElectiveGroup
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgAddElectiveGroup) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgAddElectiveGroup
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgAddElectiveGroup) Type() protoreflect.MessageType {
	return _fastReflection_MsgAddElectiveGroup_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgAddElectiveGroup) New() protoreflect.Message {
	return new(fastReflection_MsgAddElectiveGroup)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgAddElectiveGroup) Interface() protoreflect.ProtoMessage {
	return (*MsgAddElectiveGroup)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgAddElectiveGroup) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Creator != "" {
		value := protoreflect.ValueOfString(x.Creator)
		if !f(fd_MsgAddElectiveGroup_creator, value) {
			return
		}
	}
	if x.CurriculumIndex != "" {
		value := protoreflect.ValueOfString(x.CurriculumIndex)
		if !f(fd_MsgAddElectiveGroup_curriculumIndex, value) {
			return
		}
	}
	if x.Name != "" {
		value := protoreflect.ValueOfString(x.Name)
		if !f(fd_MsgAddElectiveGroup_name, value) {
			return
		}
	}
	if x.Description != "" {
		value := protoreflect.ValueOfString(x.Description)
		if !f(fd_MsgAddElectiveGroup_description, value) {
			return
		}
	}
	if x.MinSubjectsRequired != uint64(0) {
		value := protoreflect.ValueOfUint64(x.MinSubjectsRequired)
		if !f(fd_MsgAddElectiveGroup_minSubjectsRequired, value) {
			return
		}
	}
	if x.CreditsRequired != uint64(0) {
		value := protoreflect.ValueOfUint64(x.CreditsRequired)
		if !f(fd_MsgAddElectiveGroup_creditsRequired, value) {
			return
		}
	}
	if x.KnowledgeArea != "" {
		value := protoreflect.ValueOfString(x.KnowledgeArea)
		if !f(fd_MsgAddElectiveGroup_knowledgeArea, value) {
			return
		}
	}
	if len(x.SubjectIds) != 0 {
		value := protoreflect.ValueOfList(&_MsgAddElectiveGroup_8_list{list: &x.SubjectIds})
		if !f(fd_MsgAddElectiveGroup_subjectIds, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgAddElectiveGroup) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "academictoken.curriculum.MsgAddElectiveGroup.creator":
		return x.Creator != ""
	case "academictoken.curriculum.MsgAddElectiveGroup.curriculumIndex":
		return x.CurriculumIndex != ""
	case "academictoken.curriculum.MsgAddElectiveGroup.name":
		return x.Name != ""
	case "academictoken.curriculum.MsgAddElectiveGroup.description":
		return x.Description != ""
	case "academictoken.curriculum.MsgAddElectiveGroup.minSubjectsRequired":
		return x.MinSubjectsRequired != uint64(0)
	case "academictoken.curriculum.MsgAddElectiveGroup.creditsRequired":
		return x.CreditsRequired != uint64(0)
	case "academictoken.curriculum.MsgAddElectiveGroup.knowledgeArea":
		return x.KnowledgeArea != ""
	case "academictoken.curriculum.MsgAddElectiveGroup.subjectIds":
		return len(x.SubjectIds) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.curriculum.MsgAddElectiveGroup"))
		}
		panic(fmt.Errorf("message academictoken.curriculum.MsgAddElectiveGroup does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAddElectiveGroup) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "academictoken.curriculum.MsgAddElectiveGroup.creator":
		x.Creator = ""
	case "academictoken.curriculum.MsgAddElectiveGroup.curriculumIndex":
		x.CurriculumIndex = ""
	case "academictoken.curriculum.MsgAddElectiveGroup.name":
		x.Name = ""
	case "academictoken.curriculum.MsgAddElectiveGroup.description":
		x.Description = ""
	case "academictoken.curriculum.MsgAddElectiveGroup.minSubjectsRequired":
		x.MinSubjectsRequired = uint64(0)
	case "academictoken.curriculum.MsgAddElectiveGroup.creditsRequired":
		x.CreditsRequired = uint64(0)
	case "academictoken.curriculum.MsgAddElectiveGroup.knowledgeArea":
		x.KnowledgeArea = ""
	case "academictoken.curriculum.MsgAddElectiveGroup.subjectIds":
		x.SubjectIds = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.curriculum.MsgAddElectiveGroup"))
		}
		panic(fmt.Errorf("message academictoken.curriculum.MsgAddElectiveGroup does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgAddElectiveGroup) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "academictoken.curriculum.MsgAddElectiveGroup.creator":
		value := x.Creator
		return protoreflect.ValueOfString(value)
	case "academictoken.curriculum.MsgAddElectiveGroup.curriculumIndex":
		value := x.CurriculumIndex
		return protoreflect.ValueOfString(value)
	case "academictoken.curriculum.MsgAddElectiveGroup.name":
		value := x.Name
		return protoreflect.ValueOfString(value)
	case "academictoken.curriculum.MsgAddElectiveGroup.description":
		value := x.Description
		return protoreflect.ValueOfString(value)
	case "academictoken.curriculum.MsgAddElectiveGroup.minSubjectsRequired":
		value := x.MinSubjectsRequired
		return protoreflect.ValueOfUint64(value)
	case "academictoken.curriculum.MsgAddElectiveGroup.creditsRequired":
		value := x.CreditsRequired
		return protoreflect.ValueOfUint64(value)
	case "academictoken.curriculum.MsgAddElectiveGroup.knowledgeArea":
		value := x.KnowledgeArea
		return protoreflect.ValueOfString(value)
	case "academictoken.curriculum.MsgAddElectiveGroup.subjectIds":
		if len(x.SubjectIds) == 0 {
			return protoreflect.ValueOfList(&_MsgAddElectiveGroup_8_list{})
		}
		listValue := &_MsgAddElectiveGroup_8_list{list: &x.SubjectIds}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.curriculum.MsgAddElectiveGroup"))
		}
		panic(fmt.Errorf("message academictoken.curriculum.MsgAddElectiveGroup does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAddElectiveGroup) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "academictoken.curriculum.MsgAddElectiveGroup.creator":
		x.Creator = value.Interface().(string)
	case "academictoken.curriculum.MsgAddElectiveGroup.curriculumIndex":
		x.CurriculumIndex = value.Interface().(string)
	case "academictoken.curriculum.MsgAddElectiveGroup.name":
		x.Name = value.Interface().(string)
	case "academictoken.curriculum.MsgAddElectiveGroup.description":
		x.Description = value.Interface().(string)
	case "academictoken.curriculum.MsgAddElectiveGroup.minSubjectsRequired":
		x.MinSubjectsRequired = value.Uint()
	case "academictoken.curriculum.MsgAddElectiveGroup.creditsRequired":
		x.CreditsRequired = value.Uint()
	case "academictoken.curriculum.MsgAddElectiveGroup.knowledgeArea":
		x.KnowledgeArea = value.Interface().(string)
	case "academictoken.curriculum.MsgAddElectiveGroup.subjectIds":
		lv := value.List()
		clv := lv.(*_MsgAddElectiveGroup_8_list)
		x.SubjectIds = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.curriculum.MsgAddElectiveGroup"))
		}
		panic(fmt.Errorf("message academictoken.curriculum.MsgAddElectiveGroup does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAddElectiveGroup) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "academictoken.curriculum.MsgAddElectiveGroup.subjectIds":
		if x.SubjectIds == nil {
			x.SubjectIds = []string{}
		}
		value := &_MsgAddElectiveGroup_8_list{list: &x.SubjectIds}
		return protoreflect.ValueOfList(value)
	case "academictoken.curriculum.MsgAddElectiveGroup.creator":
		panic(fmt.Errorf("field creator of message academictoken.curriculum.MsgAddElectiveGroup is not mutable"))
	case "academictoken.curriculum.MsgAddElectiveGroup.curriculumIndex":
		panic(fmt.Errorf("field curriculumIndex of message academictoken.curriculum.MsgAddElectiveGroup is not mutable"))
	case "academictoken.curriculum.MsgAddElectiveGroup.name":
		panic(fmt.Errorf("field name of message academictoken.curriculum.MsgAddElectiveGroup is not mutable"))
	case "academictoken.curriculum.MsgAddElectiveGroup.description":
		panic(fmt.Errorf("field description of message academictoken.curriculum.MsgAddElectiveGroup is not mutable"))
	case "academictoken.curriculum.MsgAddElectiveGroup.minSubjectsRequired":
		panic(fmt.Errorf("field minSubjectsRequired of message academictoken.curriculum.MsgAddElectiveGroup is not mutable"))
	case "academictoken.curriculum.MsgAddElectiveGroup.creditsRequired":
		panic(fmt.Errorf("field creditsRequired of message academictoken.curriculum.MsgAddElectiveGroup is not mutable"))
	case "academictoken.curriculum.MsgAddElectiveGroup.knowledgeArea":
		panic(fmt.Errorf("field knowledgeArea of message academictoken.curriculum.MsgAddElectiveGroup is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.curriculum.MsgAddElectiveGroup"))
		}
		panic(fmt.Errorf("message academictoken.curriculum.MsgAddElectiveGroup does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgAddElectiveGroup) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "academictoken.curriculum.MsgAddElectiveGroup.creator":
		return protoreflect.ValueOfString("")
	case "academictoken.curriculum.MsgAddElectiveGroup.curriculumIndex":
		return protoreflect.ValueOfString("")
	case "academictoken.curriculum.MsgAddElectiveGroup.name":
		return protoreflect.ValueOfString("")
	case "academictoken.curriculum.MsgAddElectiveGroup.description":
		return protoreflect.ValueOfString("")
	case "academictoken.curriculum.MsgAddElectiveGroup.minSubjectsRequired":
		return protoreflect.ValueOfUint64(uint64(0))
	case "academictoken.curriculum.MsgAddElectiveGroup.creditsRequired":
		return protoreflect.ValueOfUint64(uint64(0))
	case "academictoken.curriculum.MsgAddElectiveGroup.knowledgeArea":
		return protoreflect.ValueOfString("")
	case "academictoken.curriculum.MsgAddElectiveGroup.subjectIds":
		list := []string{}
		return protoreflect.ValueOfList(&_MsgAddElectiveGroup_8_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.curriculum.MsgAddElectiveGroup"))
		}
		panic(fmt.Errorf("message academictoken.curriculum.MsgAddElectiveGroup does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgAddElectiveGroup) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in academictoken.curriculum.MsgAddElectiveGroup", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgAddElectiveGroup) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAddElectiveGroup) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgAddElectiveGroup) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgAddElectiveGroup) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgAddElectiveGroup)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Creator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.CurriculumIndex)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Name)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Description)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.MinSubjectsRequired != 0 {
			n += 1 + runtime.Sov(uint64(x.MinSubjectsRequired))
		}
		if x.CreditsRequired != 0 {
			n += 1 + runtime.Sov(uint64(x.CreditsRequired))
		}
		l = len(x.KnowledgeArea)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.SubjectIds) > 0 {
			for _, s := range x.SubjectIds {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgAddElectiveGroup)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.SubjectIds) > 0 {
			for iNdEx := len(x.SubjectIds) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.SubjectIds[iNdEx])
				copy(dAtA[i:], x.SubjectIds[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.SubjectIds[iNdEx])))
				i--
				dAtA[i] = 0x42
			}
		}
		if len(x.KnowledgeArea) > 0 {
			i -= len(x.KnowledgeArea)
			copy(dAtA[i:], x.KnowledgeArea)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.KnowledgeArea)))
			i--
			dAtA[i] = 0x3a
		}
		if x.CreditsRequired != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.CreditsRequired))
			i--
			dAtA[i] = 0x30
		}
		if x.MinSubjectsRequired != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.MinSubjectsRequired))
			i--
			dAtA[i] = 0x28
		}
		if len(x.Description) > 0 {
			i -= len(x.Description)
			copy(dAtA[i:], x.Description)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Description)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.Name) > 0 {
			i -= len(x.Name)
			copy(dAtA[i:], x.Name)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Name)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.CurriculumIndex) > 0 {
			i -= len(x.CurriculumIndex)
			copy(dAtA[i:], x.CurriculumIndex)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.CurriculumIndex)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Creator) > 0 {
			i -= len(x.Creator)
			copy(dAtA[i:], x.Creator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Creator)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgAddElectiveGroup)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgAddElectiveGroup: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgAddElectiveGroup: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Creator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CurriculumIndex", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CurriculumIndex = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Name = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Description = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 5:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field MinSubjectsRequired", wireType)
				}
				x.MinSubjectsRequired = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.MinSubjectsRequired |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 6:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CreditsRequired", wireType)
				}
				x.CreditsRequired = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.CreditsRequired |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 7:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field KnowledgeArea", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.KnowledgeArea = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 8:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field SubjectIds", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.SubjectIds = append(x.SubjectIds, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgAddElectiveGroupResponse protoreflect.MessageDescriptor
)

func init() {
	file_academictoken_curriculum_tx_proto_init()
	md_MsgAddElectiveGroupResponse = File_academictoken_curriculum_tx_proto.Messages().ByName("MsgAddElectiveGroupResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgAddElectiveGroupResponse)(nil)

type fastReflection_MsgAddElectiveGroupResponse MsgAddElectiveGroupResponse

func (x *MsgAddElectiveGroupResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgAddElectiveGroupResponse)(x)
}

func (x *MsgAddElectiveGroupResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_academictoken_curriculum_tx_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgAddElectiveGroupResponse_messageType fastReflection_MsgAddElectiveGroupResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgAddElectiveGroupResponse_messageType{}

type fastReflection_MsgAddElectiveGroupResponse_messageType struct{}

func (x fastReflection_MsgAddElectiveGroupResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgAddElectiveGroupResponse)(nil)
}
func (x fastReflection_MsgAddElectiveGroupResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgAddElectiveGroupResponse)
}
func (x fastReflection_MsgAddElectiveGroupResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgAddElectiveGroupResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgAddElectiveGroupResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgAddElectiveGroupResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgAddElectiveGroupResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgAddElectiveGroupResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgAddElectiveGroupResponse) New() protoreflect.Message {
	return new(fastReflection_MsgAddElectiveGroupResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgAddElectiveGroupResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgAddElectiveGroupResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgAddElectiveGroupResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgAddElectiveGroupResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.curriculum.MsgAddElectiveGroupResponse"))
		}
		panic(fmt.Errorf("message academictoken.curriculum.MsgAddElectiveGroupResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAddElectiveGroupResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.curriculum.MsgAddElectiveGroupResponse"))
		}
		panic(fmt.Errorf("message academictoken.curriculum.MsgAddElectiveGroupResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgAddElectiveGroupResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.curriculum.MsgAddElectiveGroupResponse"))
		}
		panic(fmt.Errorf("message academictoken.curriculum.MsgAddElectiveGroupResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAddElectiveGroupResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.curriculum.MsgAddElectiveGroupResponse"))
		}
		panic(fmt.Errorf("message academictoken.curriculum.MsgAddElectiveGroupResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAddElectiveGroupResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.curriculum.MsgAddElectiveGroupResponse"))
		}
		panic(fmt.Errorf("message academictoken.curriculum.MsgAddElectiveGroupResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgAddElectiveGroupResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.curriculum.MsgAddElectiveGroupResponse"))
		}
		panic(fmt.Errorf("message academictoken.curriculum.MsgAddElectiveGroupResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgAddElectiveGroupResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in academictoken.curriculum.MsgAddElectiveGroupResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgAddElectiveGroupResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAddElectiveGroupResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgAddElectiveGroupResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgAddElectiveGroupResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgAddElectiveGroupResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgAddElectiveGroupResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgAddElectiveGroupResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgAddElectiveGroupResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgAddElectiveGroupResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_MsgSetGraduationRequirements_8_list)(nil)

type _MsgSetGraduationRequirements_8_list struct {
	list *[]string
}

func (x *_MsgSetGraduationRequirements_8_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgSetGraduationRequirements_8_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_MsgSetGraduationRequirements_8_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_MsgSetGraduationRequirements_8_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgSetGraduationRequirements_8_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message MsgSetGraduationRequirements at list field RequiredActivities as it is not of Message kind"))
}

func (x *_MsgSetGraduationRequirements_8_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_MsgSetGraduationRequirements_8_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_MsgSetGraduationRequirements_8_list) IsValid() bool {
	return x.list != nil
}

var (
	md_MsgSetGraduationRequirements                         protoreflect.MessageDescriptor
	fd_MsgSetGraduationRequirements_creator                 protoreflect.FieldDescriptor
	fd_MsgSetGraduationRequirements_curriculumIndex         protoreflect.FieldDescriptor
	fd_MsgSetGraduationRequirements_totalCreditsRequired    protoreflect.FieldDescriptor
	fd_MsgSetGraduationRequirements_minGpa                  protoreflect.FieldDescriptor
	fd_MsgSetGraduationRequirements_requiredElectiveCredits protoreflect.FieldDescriptor
	fd_MsgSetGraduationRequirements_minimumTimeYears        protoreflect.FieldDescriptor
	fd_MsgSetGraduationRequirements_maximumTimeYears        protoreflect.FieldDescriptor
	fd_MsgSetGraduationRequirements_requiredActivities      protoreflect.FieldDescriptor
)

func init() {
	file_academictoken_curriculum_tx_proto_init()
	md_MsgSetGraduationRequirements = File_academictoken_curriculum_tx_proto.Messages().ByName("MsgSetGraduationRequirements")
	fd_MsgSetGraduationRequirements_creator = md_MsgSetGraduationRequirements.Fields().ByName("creator")
	fd_MsgSetGraduationRequirements_curriculumIndex = md_MsgSetGraduationRequirements.Fields().ByName("curriculumIndex")
	fd_MsgSetGraduationRequirements_totalCreditsRequired = md_MsgSetGraduationRequirements.Fields().ByName("totalCreditsRequired")
	fd_MsgSetGraduationRequirements_minGpa = md_MsgSetGraduationRequirements.Fields().ByName("minGpa")
	fd_MsgSetGraduationRequirements_requiredElectiveCredits = md_MsgSetGraduationRequirements.Fields().ByName("requiredElectiveCredits")
	fd_MsgSetGraduationRequirements_minimumTimeYears = md_MsgSetGraduationRequirements.Fields().ByName("minimumTimeYears")
	fd_MsgSetGraduationRequirements_maximumTimeYears = md_MsgSetGraduationRequirements.Fields().ByName("maximumTimeYears")
	fd_MsgSetGraduationRequirements_requiredActivities = md_MsgSetGraduationRequirements.Fields().ByName("requiredActivities")
}

var _ protoreflect.Message = (*fastReflection_MsgSetGraduationRequirements)(nil)

type fastReflection_MsgSetGraduationRequirements MsgSetGraduationRequirements

func (x *MsgSetGraduationRequirements) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgSetGraduationRequirements)(x)
}

func (x *MsgSetGraduationRequirements) slowProtoReflect() protoreflect.Message {
	mi := &file_academictoken_curriculum_tx_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgSetGraduationRequirements_messageType fastReflection_MsgSetGraduationRequirements_messageType
var _ protoreflect.MessageType = fastReflection_MsgSetGraduationRequirements_messageType{}

type fastReflection_MsgSetGraduationRequirements_messageType struct{}

func (x fastReflection_MsgSetGraduationRequirements_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgSetGraduationRequirements)(nil)
}
func (x fastReflection_MsgSetGraduationRequirements_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgSetGraduationRequirements)
}
func (x fastReflection_MsgSetGraduationRequirements_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgSetGraduationRequirements
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgSetGraduationRequirements) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgSetGraduationRequirements
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgSetGraduationRequirements) Type() protoreflect.MessageType {
	return _fastReflection_MsgSetGraduationRequirements_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgSetGraduationRequirements) New() protoreflect.Message {
	return new(fastReflection_MsgSetGraduationRequirements)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgSetGraduationRequirements) Interface() protoreflect.ProtoMessage {
	return (*MsgSetGraduationRequirements)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgSetGraduationRequirements) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Creator != "" {
		value := protoreflect.ValueOfString(x.Creator)
		if !f(fd_MsgSetGraduationRequirements_creator, value) {
			return
		}
	}
	if x.CurriculumIndex != "" {
		value := protoreflect.ValueOfString(x.CurriculumIndex)
		if !f(fd_MsgSetGraduationRequirements_curriculumIndex, value) {
			return
		}
	}
	if x.TotalCreditsRequired != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TotalCreditsRequired)
		if !f(fd_MsgSetGraduationRequirements_totalCreditsRequired, value) {
			return
		}
	}
	if x.MinGpa != float32(0) || math.Signbit(float64(x.MinGpa)) {
		value := protoreflect.ValueOfFloat32(x.MinGpa)
		if !f(fd_MsgSetGraduationRequirements_minGpa, value) {
			return
		}
	}
	if x.RequiredElectiveCredits != uint64(0) {
		value := protoreflect.ValueOfUint64(x.RequiredElectiveCredits)
		if !f(fd_MsgSetGraduationRequirements_requiredElectiveCredits, value) {
			return
		}
	}
	if x.MinimumTimeYears != float32(0) || math.Signbit(float64(x.MinimumTimeYears)) {
		value := protoreflect.ValueOfFloat32(x.MinimumTimeYears)
		if !f(fd_MsgSetGraduationRequirements_minimumTimeYears, value) {
			return
		}
	}
	if x.MaximumTimeYears != float32(0) || math.Signbit(float64(x.MaximumTimeYears)) {
		value := protoreflect.ValueOfFloat32(x.MaximumTimeYears)
		if !f(fd_MsgSetGraduationRequirements_maximumTimeYears, value) {
			return
		}
	}
	if len(x.RequiredActivities) != 0 {
		value := protoreflect.ValueOfList(&_MsgSetGraduationRequirements_8_list{list: &x.RequiredActivities})
		if !f(fd_MsgSetGraduationRequirements_requiredActivities, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgSetGraduationRequirements) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "academictoken.curriculum.MsgSetGraduationRequirements.creator":
		return x.Creator != ""
	case "academictoken.curriculum.MsgSetGraduationRequirements.curriculumIndex":
		return x.CurriculumIndex != ""
	case "academictoken.curriculum.MsgSetGraduationRequirements.totalCreditsRequired":
		return x.TotalCreditsRequired != uint64(0)
	case "academictoken.curriculum.MsgSetGraduationRequirements.minGpa":
		return x.MinGpa != float32(0) || math.Signbit(float64(x.MinGpa))
	case "academictoken.curriculum.MsgSetGraduationRequirements.requiredElectiveCredits":
		return x.RequiredElectiveCredits != uint64(0)
	case "academictoken.curriculum.MsgSetGraduationRequirements.minimumTimeYears":
		return x.MinimumTimeYears != float32(0) || math.Signbit(float64(x.MinimumTimeYears))
	case "academictoken.curriculum.MsgSetGraduationRequirements.maximumTimeYears":
		return x.MaximumTimeYears != float32(0) || math.Signbit(float64(x.MaximumTimeYears))
	case "academictoken.curriculum.MsgSetGraduationRequirements.requiredActivities":
		return len(x.RequiredActivities) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.curriculum.MsgSetGraduationRequirements"))
		}
		panic(fmt.Errorf("message academictoken.curriculum.MsgSetGraduationRequirements does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgSetGraduationRequirements) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "academictoken.curriculum.MsgSetGraduationRequirements.creator":
		x.Creator = ""
	case "academictoken.curriculum.MsgSetGraduationRequirements.curriculumIndex":
		x.CurriculumIndex = ""
	case "academictoken.curriculum.MsgSetGraduationRequirements.totalCreditsRequired":
		x.TotalCreditsRequired = uint64(0)
	case "academictoken.curriculum.MsgSetGraduationRequirements.minGpa":
		x.MinGpa = float32(0)
	case "academictoken.curriculum.MsgSetGraduationRequirements.requiredElectiveCredits":
		x.RequiredElectiveCredits = uint64(0)
	case "academictoken.curriculum.MsgSetGraduationRequirements.minimumTimeYears":
		x.MinimumTimeYears = float32(0)
	case "academictoken.curriculum.MsgSetGraduationRequirements.maximumTimeYears":
		x.MaximumTimeYears = float32(0)
	case "academictoken.curriculum.MsgSetGraduationRequirements.requiredActivities":
		x.RequiredActivities = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.curriculum.MsgSetGraduationRequirements"))
		}
		panic(fmt.Errorf("message academictoken.curriculum.MsgSetGraduationRequirements does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgSetGraduationRequirements) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "academictoken.curriculum.MsgSetGraduationRequirements.creator":
		value := x.Creator
		return protoreflect.ValueOfString(value)
	case "academictoken.curriculum.MsgSetGraduationRequirements.curriculumIndex":
		value := x.CurriculumIndex
		return protoreflect.ValueOfString(value)
	case "academictoken.curriculum.MsgSetGraduationRequirements.totalCreditsRequired":
		value := x.TotalCreditsRequired
		return protoreflect.ValueOfUint64(value)
	case "academictoken.curriculum.MsgSetGraduationRequirements.minGpa":
		value := x.MinGpa
		return protoreflect.ValueOfFloat32(value)
	case "academictoken.curriculum.MsgSetGraduationRequirements.requiredElectiveCredits":
		value := x.RequiredElectiveCredits
		return protoreflect.ValueOfUint64(value)
	case "academictoken.curriculum.MsgSetGraduationRequirements.minimumTimeYears":
		value := x.MinimumTimeYears
		return protoreflect.ValueOfFloat32(value)
	case "academictoken.curriculum.MsgSetGraduationRequirements.maximumTimeYears":
		value := x.MaximumTimeYears
		return protoreflect.ValueOfFloat32(value)
	case "academictoken.curriculum.MsgSetGraduationRequirements.requiredActivities":
		if len(x.RequiredActivities) == 0 {
			return protoreflect.ValueOfList(&_MsgSetGraduationRequirements_8_list{})
		}
		listValue := &_MsgSetGraduationRequirements_8_list{list: &x.RequiredActivities}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.curriculum.MsgSetGraduationRequirements"))
		}
		panic(fmt.Errorf("message academictoken.curriculum.MsgSetGraduationRequirements does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgSetGraduationRequirements) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "academictoken.curriculum.MsgSetGraduationRequirements.creator":
		x.Creator = value.Interface().(string)
	case "academictoken.curriculum.MsgSetGraduationRequirements.curriculumIndex":
		x.CurriculumIndex = value.Interface().(string)
	case "academictoken.curriculum.MsgSetGraduationRequirements.totalCreditsRequired":
		x.TotalCreditsRequired = value.Uint()
	case "academictoken.curriculum.MsgSetGraduationRequirements.minGpa":
		x.MinGpa = float32(value.Float())
	case "academictoken.curriculum.MsgSetGraduationRequirements.requiredElectiveCredits":
		x.RequiredElectiveCredits = value.Uint()
	case "academictoken.curriculum.MsgSetGraduationRequirements.minimumTimeYears":
		x.MinimumTimeYears = float32(value.Float())
	case "academictoken.curriculum.MsgSetGraduationRequirements.maximumTimeYears":
		x.MaximumTimeYears = float32(value.Float())
	case "academictoken.curriculum.MsgSetGraduationRequirements.requiredActivities":
		lv := value.List()
		clv := lv.(*_MsgSetGraduationRequirements_8_list)
		x.RequiredActivities = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.curriculum.MsgSetGraduationRequirements"))
		}
		panic(fmt.Errorf("message academictoken.curriculum.MsgSetGraduationRequirements does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgSetGraduationRequirements) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "academictoken.curriculum.MsgSetGraduationRequirements.requiredActivities":
		if x.RequiredActivities == nil {
			x.RequiredActivities = []string{}
		}
		value := &_MsgSetGraduationRequirements_8_list{list: &x.RequiredActivities}
		return protoreflect.ValueOfList(value)
	case "academictoken.curriculum.MsgSetGraduationRequirements.creator":
		panic(fmt.Errorf("field creator of message academictoken.curriculum.MsgSetGraduationRequirements is not mutable"))
	case "academictoken.curriculum.MsgSetGraduationRequirements.curriculumIndex":
		panic(fmt.Errorf("field curriculumIndex of message academictoken.curriculum.MsgSetGraduationRequirements is not mutable"))
	case "academictoken.curriculum.MsgSetGraduationRequirements.totalCreditsRequired":
		panic(fmt.Errorf("field totalCreditsRequired of message academictoken.curriculum.MsgSetGraduationRequirements is not mutable"))
	case "academictoken.curriculum.MsgSetGraduationRequirements.minGpa":
		panic(fmt.Errorf("field minGpa of message academictoken.curriculum.MsgSetGraduationRequirements is not mutable"))
	case "academictoken.curriculum.MsgSetGraduationRequirements.requiredElectiveCredits":
		panic(fmt.Errorf("field requiredElectiveCredits of message academictoken.curriculum.MsgSetGraduationRequirements is not mutable"))
	case "academictoken.curriculum.MsgSetGraduationRequirements.minimumTimeYears":
		panic(fmt.Errorf("field minimumTimeYears of message academictoken.curriculum.MsgSetGraduationRequirements is not mutable"))
	case "academictoken.curriculum.MsgSetGraduationRequirements.maximumTimeYears":
		panic(fmt.Errorf("field maximumTimeYears of message academictoken.curriculum.MsgSetGraduationRequirements is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.curriculum.MsgSetGraduationRequirements"))
		}
		panic(fmt.Errorf("message academictoken.curriculum.MsgSetGraduationRequirements does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgSetGraduationRequirements) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "academictoken.curriculum.MsgSetGraduationRequirements.creator":
		return protoreflect.ValueOfString("")
	case "academictoken.curriculum.MsgSetGraduationRequirements.curriculumIndex":
		return protoreflect.ValueOfString("")
	case "academictoken.curriculum.MsgSetGraduationRequirements.totalCreditsRequired":
		return protoreflect.ValueOfUint64(uint64(0))
	case "academictoken.curriculum.MsgSetGraduationRequirements.minGpa":
		return protoreflect.ValueOfFloat32(float32(0))
	case "academictoken.curriculum.MsgSetGraduationRequirements.requiredElectiveCredits":
		return protoreflect.ValueOfUint64(uint64(0))
	case "academictoken.curriculum.MsgSetGraduationRequirements.minimumTimeYears":
		return protoreflect.ValueOfFloat32(float32(0))
	case "academictoken.curriculum.MsgSetGraduationRequirements.maximumTimeYears":
		return protoreflect.ValueOfFloat32(float32(0))
	case "academictoken.curriculum.MsgSetGraduationRequirements.requiredActivities":
		list := []string{}
		return protoreflect.ValueOfList(&_MsgSetGraduationRequirements_8_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.curriculum.MsgSetGraduationRequirements"))
		}
		panic(fmt.Errorf("message academictoken.curriculum.MsgSetGraduationRequirements does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgSetGraduationRequirements) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in academictoken.curriculum.MsgSetGraduationRequirements", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgSetGraduationRequirements) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgSetGraduationRequirements) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgSetGraduationRequirements) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgSetGraduationRequirements) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgSetGraduationRequirements)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Creator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.CurriculumIndex)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.TotalCreditsRequired != 0 {
			n += 1 + runtime.Sov(uint64(x.TotalCreditsRequired))
		}
		if x.MinGpa != 0 || math.Signbit(float64(x.MinGpa)) {
			n += 5
		}
		if x.RequiredElectiveCredits != 0 {
			n += 1 + runtime.Sov(uint64(x.RequiredElectiveCredits))
		}
		if x.MinimumTimeYears != 0 || math.Signbit(float64(x.MinimumTimeYears)) {
			n += 5
		}
		if x.MaximumTimeYears != 0 || math.Signbit(float64(x.MaximumTimeYears)) {
			n += 5
		}
		if len(x.RequiredActivities) > 0 {
			for _, s := range x.RequiredActivities {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgSetGraduationRequirements)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.RequiredActivities) > 0 {
			for iNdEx := len(x.RequiredActivities) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.RequiredActivities[iNdEx])
				copy(dAtA[i:], x.RequiredActivities[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.RequiredActivities[iNdEx])))
				i--
				dAtA[i] = 0x42
			}
		}
		if x.MaximumTimeYears != 0 || math.Signbit(float64(x.MaximumTimeYears)) {
			i -= 4
			binary.LittleEndian.PutUint32(dAtA[i:], uint32(math.Float32bits(float32(x.MaximumTimeYears))))
			i--
			dAtA[i] = 0x3d
		}
		if x.MinimumTimeYears != 0 || math.Signbit(float64(x.MinimumTimeYears)) {
			i -= 4
			binary.LittleEndian.PutUint32(dAtA[i:], uint32(math.Float32bits(float32(x.MinimumTimeYears))))
			i--
			dAtA[i] = 0x35
		}
		if x.RequiredElectiveCredits != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.RequiredElectiveCredits))
			i--
			dAtA[i] = 0x28
		}
		if x.MinGpa != 0 || math.Signbit(float64(x.MinGpa)) {
			i -= 4
			binary.LittleEndian.PutUint32(dAtA[i:], uint32(math.Float32bits(float32(x.MinGpa))))
			i--
			dAtA[i] = 0x25
		}
		if x.TotalCreditsRequired != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TotalCreditsRequired))
			i--
			dAtA[i] = 0x18
		}
		if len(x.CurriculumIndex) > 0 {
			i -= len(x.CurriculumIndex)
			copy(dAtA[i:], x.CurriculumIndex)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.CurriculumIndex)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Creator) > 0 {
			i -= len(x.Creator)
			copy(dAtA[i:], x.Creator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Creator)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgSetGraduationRequirements)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgSetGraduationRequirements: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgSetGraduationRequirements: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Creator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CurriculumIndex", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CurriculumIndex = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TotalCreditsRequired", wireType)
				}
				x.TotalCreditsRequired = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TotalCreditsRequired |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 4:
				if wireType != 5 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field MinGpa", wireType)
				}
				var v uint32
				if (iNdEx + 4) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				v = uint32(binary.LittleEndian.Uint32(dAtA[iNdEx:]))
				iNdEx += 4
				x.MinGpa = float32(math.Float32frombits(v))
			case 5:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RequiredElectiveCredits", wireType)
				}
				x.RequiredElectiveCredits = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.RequiredElectiveCredits |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 6:
				if wireType != 5 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field MinimumTimeYears", wireType)
				}
				var v uint32
				if (iNdEx + 4) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				v = uint32(binary.LittleEndian.Uint32(dAtA[iNdEx:]))
				iNdEx += 4
				x.MinimumTimeYears = float32(math.Float32frombits(v))
			case 7:
				if wireType != 5 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field MaximumTimeYears", wireType)
				}
				var v uint32
				if (iNdEx + 4) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				v = uint32(binary.LittleEndian.Uint32(dAtA[iNdEx:]))
				iNdEx += 4
				x.MaximumTimeYears = float32(math.Float32frombits(v))
			case 8:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RequiredActivities", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.RequiredActivities = append(x.RequiredActivities, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgSetGraduationRequirementsResponse protoreflect.MessageDescriptor
)

func init() {
	file_academictoken_curriculum_tx_proto_init()
	md_MsgSetGraduationRequirementsResponse = File_academictoken_curriculum_tx_proto.Messages().ByName("MsgSetGraduationRequirementsResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgSetGraduationRequirementsResponse)(nil)

type fastReflection_MsgSetGraduationRequirementsResponse MsgSetGraduationRequirementsResponse

func (x *MsgSetGraduationRequirementsResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgSetGraduationRequirementsResponse)(x)
}

func (x *MsgSetGraduationRequirementsResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_academictoken_curriculum_tx_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgSetGraduationRequirementsResponse_messageType fastReflection_MsgSetGraduationRequirementsResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgSetGraduationRequirementsResponse_messageType{}

type fastReflection_MsgSetGraduationRequirementsResponse_messageType struct{}

func (x fastReflection_MsgSetGraduationRequirementsResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgSetGraduationRequirementsResponse)(nil)
}
func (x fastReflection_MsgSetGraduationRequirementsResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgSetGraduationRequirementsResponse)
}
func (x fastReflection_MsgSetGraduationRequirementsResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgSetGraduationRequirementsResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgSetGraduationRequirementsResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgSetGraduationRequirementsResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgSetGraduationRequirementsResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgSetGraduationRequirementsResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgSetGraduationRequirementsResponse) New() protoreflect.Message {
	return new(fastReflection_MsgSetGraduationRequirementsResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgSetGraduationRequirementsResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgSetGraduationRequirementsResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgSetGraduationRequirementsResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgSetGraduationRequirementsResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.curriculum.MsgSetGraduationRequirementsResponse"))
		}
		panic(fmt.Errorf("message academictoken.curriculum.MsgSetGraduationRequirementsResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgSetGraduationRequirementsResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.curriculum.MsgSetGraduationRequirementsResponse"))
		}
		panic(fmt.Errorf("message academictoken.curriculum.MsgSetGraduationRequirementsResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgSetGraduationRequirementsResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.curriculum.MsgSetGraduationRequirementsResponse"))
		}
		panic(fmt.Errorf("message academictoken.curriculum.MsgSetGraduationRequirementsResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgSetGraduationRequirementsResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.curriculum.MsgSetGraduationRequirementsResponse"))
		}
		panic(fmt.Errorf("message academictoken.curriculum.MsgSetGraduationRequirementsResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgSetGraduationRequirementsResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.curriculum.MsgSetGraduationRequirementsResponse"))
		}
		panic(fmt.Errorf("message academictoken.curriculum.MsgSetGraduationRequirementsResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgSetGraduationRequirementsResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.curriculum.MsgSetGraduationRequirementsResponse"))
		}
		panic(fmt.Errorf("message academictoken.curriculum.MsgSetGraduationRequirementsResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgSetGraduationRequirementsResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in academictoken.curriculum.MsgSetGraduationRequirementsResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgSetGraduationRequirementsResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgSetGraduationRequirementsResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgSetGraduationRequirementsResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgSetGraduationRequirementsResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgSetGraduationRequirementsResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgSetGraduationRequirementsResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgSetGraduationRequirementsResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgSetGraduationRequirementsResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgSetGraduationRequirementsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: academictoken/curriculum/tx.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// MsgUpdateParams is the Msg/UpdateParams request type.
type MsgUpdateParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// authority is the address that controls the module (defaults to x/gov unless overwritten).
	Authority string `protobuf:"bytes,1,opt,name=authority,proto3" json:"authority,omitempty"` // params defines the module parameters to update.
	// NOTE: All parameters must be supplied.
	Params *Params `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *MsgUpdateParams) Reset() {
	*x = MsgUpdateParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_academictoken_curriculum_tx_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUpdateParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpdateParams) ProtoMessage() {}

// Deprecated: Use MsgUpdateParams.ProtoReflect.Descriptor instead.
func (*MsgUpdateParams) Descriptor() ([]byte, []int) {
	return file_academictoken_curriculum_tx_proto_rawDescGZIP(), []int{0}
}

func (x *MsgUpdateParams) GetAuthority() string {
	if x != nil {
		return x.Authority
	}
	return ""
}

func (x *MsgUpdateParams) GetParams() *Params {
	if x != nil {
		return x.Params
	}
	return nil
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
type MsgUpdateParamsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgUpdateParamsResponse) Reset() {
	*x = MsgUpdateParamsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_academictoken_curriculum_tx_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUpdateParamsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpdateParamsResponse) ProtoMessage() {}

// Deprecated: Use MsgUpdateParamsResponse.ProtoReflect.Descriptor instead.
func (*MsgUpdateParamsResponse) Descriptor() ([]byte, []int) {
	return file_academictoken_curriculum_tx_proto_rawDescGZIP(), []int{1}
}

type MsgCreateCurriculumTree struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator            string   `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	CourseId           string   `protobuf:"bytes,2,opt,name=courseId,proto3" json:"courseId,omitempty"`
	Version            string   `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	ElectiveMin        uint64   `protobuf:"varint,4,opt,name=electiveMin,proto3" json:"electiveMin,omitempty"`               // Changed to uint64
	TotalWorkloadHours uint64   `protobuf:"varint,5,opt,name=totalWorkloadHours,proto3" json:"totalWorkloadHours,omitempty"` // Changed to uint64
	RequiredSubjects   []string `protobuf:"bytes,6,rep,name=requiredSubjects,proto3" json:"requiredSubjects,omitempty"`      // Added
	ElectiveSubjects   []string `protobuf:"bytes,7,rep,name=electiveSubjects,proto3" json:"electiveSubjects,omitempty"`      // Added
}

func (x *MsgCreateCurriculumTree) Reset() {
	*x = MsgCreateCurriculumTree{}
	if protoimpl.UnsafeEnabled {
		mi := &file_academictoken_curriculum_tx_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgCreateCurriculumTree) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgCreateCurriculumTree) ProtoMessage() {}

// Deprecated: Use MsgCreateCurriculumTree.ProtoReflect.Descriptor instead.
func (*MsgCreateCurriculumTree) Descriptor() ([]byte, []int) {
	return file_academictoken_curriculum_tx_proto_rawDescGZIP(), []int{2}
}

func (x *MsgCreateCurriculumTree) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgCreateCurriculumTree) GetCourseId() string {
	if x != nil {
		return x.CourseId
	}
	return ""
}

func (x *MsgCreateCurriculumTree) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *MsgCreateCurriculumTree) GetElectiveMin() uint64 {
	if x != nil {
		return x.ElectiveMin
	}
	return 0
}

func (x *MsgCreateCurriculumTree) GetTotalWorkloadHours() uint64 {
	if x != nil {
		return x.TotalWorkloadHours
	}
	return 0
}

func (x *MsgCreateCurriculumTree) GetRequiredSubjects() []string {
	if x != nil {
		return x.RequiredSubjects
	}
	return nil
}

func (x *MsgCreateCurriculumTree) GetElectiveSubjects() []string {
	if x != nil {
		return x.ElectiveSubjects
	}
	return nil
}

type MsgCreateCurriculumTreeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgCreateCurriculumTreeResponse) Reset() {
	*x = MsgCreateCurriculumTreeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_academictoken_curriculum_tx_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgCreateCurriculumTreeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgCreateCurriculumTreeResponse) ProtoMessage() {}

// Deprecated: Use MsgCreateCurriculumTreeResponse.ProtoReflect.Descriptor instead.
func (*MsgCreateCurriculumTreeResponse) Descriptor() ([]byte, []int) {
	return file_academictoken_curriculum_tx_proto_rawDescGZIP(), []int{3}
}

type MsgAddSemesterToCurriculum struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator         string   `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	CurriculumIndex string   `protobuf:"bytes,2,opt,name=curriculumIndex,proto3" json:"curriculumIndex,omitempty"`
	SemesterNumber  uint64   `protobuf:"varint,3,opt,name=semesterNumber,proto3" json:"semesterNumber,omitempty"` // Changed to uint64
	SubjectIds      []string `protobuf:"bytes,4,rep,name=subjectIds,proto3" json:"subjectIds,omitempty"`          // Added
}

func (x *MsgAddSemesterToCurriculum) Reset() {
	*x = MsgAddSemesterToCurriculum{}
	if protoimpl.UnsafeEnabled {
		mi := &file_academictoken_curriculum_tx_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgAddSemesterToCurriculum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgAddSemesterToCurriculum) ProtoMessage() {}

// Deprecated: Use MsgAddSemesterToCurriculum.ProtoReflect.Descriptor instead.
func (*MsgAddSemesterToCurriculum) Descriptor() ([]byte, []int) {
	return file_academictoken_curriculum_tx_proto_rawDescGZIP(), []int{4}
}

func (x *MsgAddSemesterToCurriculum) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgAddSemesterToCurriculum) GetCurriculumIndex() string {
	if x != nil {
		return x.CurriculumIndex
	}
	return ""
}

func (x *MsgAddSemesterToCurriculum) GetSemesterNumber() uint64 {
	if x != nil {
		return x.SemesterNumber
	}
	return 0
}

func (x *MsgAddSemesterToCurriculum) GetSubjectIds() []string {
	if x != nil {
		return x.SubjectIds
	}
	return nil
}

type MsgAddSemesterToCurriculumResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgAddSemesterToCurriculumResponse) Reset() {
	*x = MsgAddSemesterToCurriculumResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_academictoken_curriculum_tx_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgAddSemesterToCurriculumResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgAddSemesterToCurriculumResponse) ProtoMessage() {}

// Deprecated: Use MsgAddSemesterToCurriculumResponse.ProtoReflect.Descriptor instead.
func (*MsgAddSemesterToCurriculumResponse) Descriptor() ([]byte, []int) {
	return file_academictoken_curriculum_tx_proto_rawDescGZIP(), []int{5}
}

type MsgAddElectiveGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator             string   `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	CurriculumIndex     string   `protobuf:"bytes,2,opt,name=curriculumIndex,proto3" json:"curriculumIndex,omitempty"`
	Name                string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description         string   `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	MinSubjectsRequired uint64   `protobuf:"varint,5,opt,name=minSubjectsRequired,proto3" json:"minSubjectsRequired,omitempty"` // Changed to uint64
	CreditsRequired     uint64   `protobuf:"varint,6,opt,name=creditsRequired,proto3" json:"creditsRequired,omitempty"`         // Changed to uint64
	KnowledgeArea       string   `protobuf:"bytes,7,opt,name=knowledgeArea,proto3" json:"knowledgeArea,omitempty"`
	SubjectIds          []string `protobuf:"bytes,8,rep,name=subjectIds,proto3" json:"subjectIds,omitempty"` // Added
}

func (x *MsgAddElectiveGroup) Reset() {
	*x = MsgAddElectiveGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_academictoken_curriculum_tx_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgAddElectiveGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgAddElectiveGroup) ProtoMessage() {}

// Deprecated: Use MsgAddElectiveGroup.ProtoReflect.Descriptor instead.
func (*MsgAddElectiveGroup) Descriptor() ([]byte, []int) {
	return file_academictoken_curriculum_tx_proto_rawDescGZIP(), []int{6}
}

func (x *MsgAddElectiveGroup) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgAddElectiveGroup) GetCurriculumIndex() string {
	if x != nil {
		return x.CurriculumIndex
	}
	return ""
}

func (x *MsgAddElectiveGroup) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MsgAddElectiveGroup) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MsgAddElectiveGroup) GetMinSubjectsRequired() uint64 {
	if x != nil {
		return x.MinSubjectsRequired
	}
	return 0
}

func (x *MsgAddElectiveGroup) GetCreditsRequired() uint64 {
	if x != nil {
		return x.CreditsRequired
	}
	return 0
}

func (x *MsgAddElectiveGroup) GetKnowledgeArea() string {
	if x != nil {
		return x.KnowledgeArea
	}
	return ""
}

func (x *MsgAddElectiveGroup) GetSubjectIds() []string {
	if x != nil {
		return x.SubjectIds
	}
	return nil
}

type MsgAddElectiveGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgAddElectiveGroupResponse) Reset() {
	*x = MsgAddElectiveGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_academictoken_curriculum_tx_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgAddElectiveGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgAddElectiveGroupResponse) ProtoMessage() {}

// Deprecated: Use MsgAddElectiveGroupResponse.ProtoReflect.Descriptor instead.
func (*MsgAddElectiveGroupResponse) Descriptor() ([]byte, []int) {
	return file_academictoken_curriculum_tx_proto_rawDescGZIP(), []int{7}
}

type MsgSetGraduationRequirements struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator                 string   `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	CurriculumIndex         string   `protobuf:"bytes,2,opt,name=curriculumIndex,proto3" json:"curriculumIndex,omitempty"`
	TotalCreditsRequired    uint64   `protobuf:"varint,3,opt,name=totalCreditsRequired,proto3" json:"totalCreditsRequired,omitempty"`       // Changed to uint64
	MinGpa                  float32  `protobuf:"fixed32,4,opt,name=minGpa,proto3" json:"minGpa,omitempty"`                                  // Changed to float
	RequiredElectiveCredits uint64   `protobuf:"varint,5,opt,name=requiredElectiveCredits,proto3" json:"requiredElectiveCredits,omitempty"` // Changed to uint64
	MinimumTimeYears        float32  `protobuf:"fixed32,6,opt,name=minimumTimeYears,proto3" json:"minimumTimeYears,omitempty"`              // Changed to float
	MaximumTimeYears        float32  `protobuf:"fixed32,7,opt,name=maximumTimeYears,proto3" json:"maximumTimeYears,omitempty"`              // Changed to float
	RequiredActivities      []string `protobuf:"bytes,8,rep,name=requiredActivities,proto3" json:"requiredActivities,omitempty"`            // Added
}

func (x *MsgSetGraduationRequirements) Reset() {
	*x = MsgSetGraduationRequirements{}
	if protoimpl.UnsafeEnabled {
		mi := &file_academictoken_curriculum_tx_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgSetGraduationRequirements) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgSetGraduationRequirements) ProtoMessage() {}

// Deprecated: Use MsgSetGraduationRequirements.ProtoReflect.Descriptor instead.
func (*MsgSetGraduationRequirements) Descriptor() ([]byte, []int) {
	return file_academictoken_curriculum_tx_proto_rawDescGZIP(), []int{8}
}

func (x *MsgSetGraduationRequirements) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgSetGraduationRequirements) GetCurriculumIndex() string {
	if x != nil {
		return x.CurriculumIndex
	}
	return ""
}

func (x *MsgSetGraduationRequirements) GetTotalCreditsRequired() uint64 {
	if x != nil {
		return x.TotalCreditsRequired
	}
	return 0
}

func (x *MsgSetGraduationRequirements) GetMinGpa() float32 {
	if x != nil {
		return x.MinGpa
	}
	return 0
}

func (x *MsgSetGraduationRequirements) GetRequiredElectiveCredits() uint64 {
	if x != nil {
		return x.RequiredElectiveCredits
	}
	return 0
}

func (x *MsgSetGraduationRequirements) GetMinimumTimeYears() float32 {
	if x != nil {
		return x.MinimumTimeYears
	}
	return 0
}

func (x *MsgSetGraduationRequirements) GetMaximumTimeYears() float32 {
	if x != nil {
		return x.MaximumTimeYears
	}
	return 0
}

func (x *MsgSetGraduationRequirements) GetRequiredActivities() []string {
	if x != nil {
		return x.RequiredActivities
	}
	return nil
}

type MsgSetGraduationRequirementsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgSetGraduationRequirementsResponse) Reset() {
	*x = MsgSetGraduationRequirementsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_academictoken_curriculum_tx_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgSetGraduationRequirementsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgSetGraduationRequirementsResponse) ProtoMessage() {}

// Deprecated: Use MsgSetGraduationRequirementsResponse.ProtoReflect.Descriptor instead.
func (*MsgSetGraduationRequirementsResponse) Descriptor() ([]byte, []int) {
	return file_academictoken_curriculum_tx_proto_rawDescGZIP(), []int{9}
}

var File_academictoken_curriculum_tx_proto protoreflect.FileDescriptor

var file_academictoken_curriculum_tx_proto_rawDesc = []byte{
	0x0a, 0x21, 0x61, 0x63, 0x61, 0x64, 0x65, 0x6d, 0x69, 0x63, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2f,
	0x63, 0x75, 0x72, 0x72, 0x69, 0x63, 0x75, 0x6c, 0x75, 0x6d, 0x2f, 0x74, 0x78, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x18, 0x61, 0x63, 0x61, 0x64, 0x65, 0x6d, 0x69, 0x63, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x2e, 0x63, 0x75, 0x72, 0x72, 0x69, 0x63, 0x75, 0x6c, 0x75, 0x6d, 0x1a, 0x11, 0x61,
	0x6d, 0x69, 0x6e, 0x6f, 0x2f, 0x61, 0x6d, 0x69, 0x6e, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x17, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x6d, 0x73, 0x67, 0x2f, 0x76, 0x31, 0x2f,
	0x6d, 0x73, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x63, 0x6f, 0x73, 0x6d, 0x6f,
	0x73, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x67, 0x6f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x25, 0x61, 0x63, 0x61, 0x64,
	0x65, 0x6d, 0x69, 0x63, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2f, 0x63, 0x75, 0x72, 0x72, 0x69, 0x63,
	0x75, 0x6c, 0x75, 0x6d, 0x2f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xcd, 0x01, 0x0a, 0x0f, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x36, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69,
	0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x18, 0xd2, 0xb4, 0x2d, 0x14, 0x63, 0x6f,
	0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x52, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x43, 0x0a,
	0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x61, 0x63, 0x61, 0x64, 0x65, 0x6d, 0x69, 0x63, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x63, 0x75,
	0x72, 0x72, 0x69, 0x63, 0x75, 0x6c, 0x75, 0x6d, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x42,
	0x09, 0xc8, 0xde, 0x1f, 0x00, 0xa8, 0xe7, 0xb0, 0x2a, 0x01, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x3a, 0x3d, 0x82, 0xe7, 0xb0, 0x2a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69,
	0x74, 0x79, 0x8a, 0xe7, 0xb0, 0x2a, 0x2a, 0x61, 0x63, 0x61, 0x64, 0x65, 0x6d, 0x69, 0x63, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x2f, 0x78, 0x2f, 0x63, 0x75, 0x72, 0x72, 0x69, 0x63, 0x75, 0x6c, 0x75,
	0x6d, 0x2f, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x22, 0x19, 0x0a, 0x17, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xa1, 0x02, 0x0a,
	0x17, 0x4d, 0x73, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x75, 0x72, 0x72, 0x69, 0x63,
	0x75, 0x6c, 0x75, 0x6d, 0x54, 0x72, 0x65, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x6f, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x4d, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x69, 0x6e, 0x12, 0x2e, 0x0a, 0x12, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x48, 0x6f, 0x75, 0x72, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x12, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x57, 0x6f, 0x72,
	0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x72, 0x65,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x53, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x10, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x73, 0x3a, 0x0c, 0x82, 0xe7, 0xb0, 0x2a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72,
	0x22, 0x21, 0x0a, 0x1f, 0x4d, 0x73, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x75, 0x72,
	0x72, 0x69, 0x63, 0x75, 0x6c, 0x75, 0x6d, 0x54, 0x72, 0x65, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0xb6, 0x01, 0x0a, 0x1a, 0x4d, 0x73, 0x67, 0x41, 0x64, 0x64, 0x53, 0x65,
	0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x54, 0x6f, 0x43, 0x75, 0x72, 0x72, 0x69, 0x63, 0x75, 0x6c,
	0x75, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x28, 0x0a, 0x0f,
	0x63, 0x75, 0x72, 0x72, 0x69, 0x63, 0x75, 0x6c, 0x75, 0x6d, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x75, 0x72, 0x72, 0x69, 0x63, 0x75, 0x6c, 0x75,
	0x6d, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74,
	0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e,
	0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1e,
	0x0a, 0x0a, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0a, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x73, 0x3a, 0x0c,
	0x82, 0xe7, 0xb0, 0x2a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x22, 0x24, 0x0a, 0x22,
	0x4d, 0x73, 0x67, 0x41, 0x64, 0x64, 0x53, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x54, 0x6f,
	0x43, 0x75, 0x72, 0x72, 0x69, 0x63, 0x75, 0x6c, 0x75, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0xbf, 0x02, 0x0a, 0x13, 0x4d, 0x73, 0x67, 0x41, 0x64, 0x64, 0x45, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x6f, 0x72, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x75, 0x72, 0x72, 0x69, 0x63, 0x75, 0x6c,
	0x75, 0x6d, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63,
	0x75, 0x72, 0x72, 0x69, 0x63, 0x75, 0x6c, 0x75, 0x6d, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x13, 0x6d, 0x69, 0x6e, 0x53, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x13, 0x6d, 0x69, 0x6e, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0f, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64,
	0x12, 0x24, 0x0a, 0x0d, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x41, 0x72, 0x65,
	0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64,
	0x67, 0x65, 0x41, 0x72, 0x65, 0x61, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x64, 0x73, 0x3a, 0x0c, 0x82, 0xe7, 0xb0, 0x2a, 0x07, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x6f, 0x72, 0x22, 0x1d, 0x0a, 0x1b, 0x4d, 0x73, 0x67, 0x41, 0x64, 0x64, 0x45, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0xfe, 0x02, 0x0a, 0x1c, 0x4d, 0x73, 0x67, 0x53, 0x65, 0x74, 0x47, 0x72,
	0x61, 0x64, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x28,
	0x0a, 0x0f, 0x63, 0x75, 0x72, 0x72, 0x69, 0x63, 0x75, 0x6c, 0x75, 0x6d, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x75, 0x72, 0x72, 0x69, 0x63, 0x75,
	0x6c, 0x75, 0x6d, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x32, 0x0a, 0x14, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x14, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x72, 0x65,
	0x64, 0x69, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x6d, 0x69, 0x6e, 0x47, 0x70, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x6d, 0x69,
	0x6e, 0x47, 0x70, 0x61, 0x12, 0x38, 0x0a, 0x17, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64,
	0x45, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x17, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x45,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x73, 0x12, 0x2a,
	0x0a, 0x10, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x54, 0x69, 0x6d, 0x65, 0x59, 0x65, 0x61,
	0x72, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x10, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75,
	0x6d, 0x54, 0x69, 0x6d, 0x65, 0x59, 0x65, 0x61, 0x72, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x6d, 0x61,
	0x78, 0x69, 0x6d, 0x75, 0x6d, 0x54, 0x69, 0x6d, 0x65, 0x59, 0x65, 0x61, 0x72, 0x73, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x10, 0x6d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x54, 0x69, 0x6d,
	0x65, 0x59, 0x65, 0x61, 0x72, 0x73, 0x12, 0x2e, 0x0a, 0x12, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x64, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x12, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x3a, 0x0c, 0x82, 0xe7, 0xb0, 0x2a, 0x07, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x6f, 0x72, 0x22, 0x26, 0x0a, 0x24, 0x4d, 0x73, 0x67, 0x53, 0x65, 0x74, 0x47, 0x72,
	0x61, 0x64, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xa1, 0x05, 0x0a,
	0x03, 0x4d, 0x73, 0x67, 0x12, 0x6c, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x12, 0x29, 0x2e, 0x61, 0x63, 0x61, 0x64, 0x65, 0x6d, 0x69, 0x63, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x63, 0x75, 0x72, 0x72, 0x69, 0x63, 0x75, 0x6c, 0x75, 0x6d, 0x2e,
	0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a,
	0x31, 0x2e, 0x61, 0x63, 0x61, 0x64, 0x65, 0x6d, 0x69, 0x63, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e,
	0x63, 0x75, 0x72, 0x72, 0x69, 0x63, 0x75, 0x6c, 0x75, 0x6d, 0x2e, 0x4d, 0x73, 0x67, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x84, 0x01, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x75, 0x72,
	0x72, 0x69, 0x63, 0x75, 0x6c, 0x75, 0x6d, 0x54, 0x72, 0x65, 0x65, 0x12, 0x31, 0x2e, 0x61, 0x63,
	0x61, 0x64, 0x65, 0x6d, 0x69, 0x63, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x63, 0x75, 0x72, 0x72,
	0x69, 0x63, 0x75, 0x6c, 0x75, 0x6d, 0x2e, 0x4d, 0x73, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x43, 0x75, 0x72, 0x72, 0x69, 0x63, 0x75, 0x6c, 0x75, 0x6d, 0x54, 0x72, 0x65, 0x65, 0x1a, 0x39,
	0x2e, 0x61, 0x63, 0x61, 0x64, 0x65, 0x6d, 0x69, 0x63, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x63,
	0x75, 0x72, 0x72, 0x69, 0x63, 0x75, 0x6c, 0x75, 0x6d, 0x2e, 0x4d, 0x73, 0x67, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x43, 0x75, 0x72, 0x72, 0x69, 0x63, 0x75, 0x6c, 0x75, 0x6d, 0x54, 0x72, 0x65,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x8d, 0x01, 0x0a, 0x17, 0x41, 0x64,
	0x64, 0x53, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x54, 0x6f, 0x43, 0x75, 0x72, 0x72, 0x69,
	0x63, 0x75, 0x6c, 0x75, 0x6d, 0x12, 0x34, 0x2e, 0x61, 0x63, 0x61, 0x64, 0x65, 0x6d, 0x69, 0x63,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x63, 0x75, 0x72, 0x72, 0x69, 0x63, 0x75, 0x6c, 0x75, 0x6d,
	0x2e, 0x4d, 0x73, 0x67, 0x41, 0x64, 0x64, 0x53, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x54,
	0x6f, 0x43, 0x75, 0x72, 0x72, 0x69, 0x63, 0x75, 0x6c, 0x75, 0x6d, 0x1a, 0x3c, 0x2e, 0x61, 0x63,
	0x61, 0x64, 0x65, 0x6d, 0x69, 0x63, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x63, 0x75, 0x72, 0x72,
	0x69, 0x63, 0x75, 0x6c, 0x75, 0x6d, 0x2e, 0x4d, 0x73, 0x67, 0x41, 0x64, 0x64, 0x53, 0x65, 0x6d,
	0x65, 0x73, 0x74, 0x65, 0x72, 0x54, 0x6f, 0x43, 0x75, 0x72, 0x72, 0x69, 0x63, 0x75, 0x6c, 0x75,
	0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x78, 0x0a, 0x10, 0x41, 0x64, 0x64,
	0x45, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x2d, 0x2e,
	0x61, 0x63, 0x61, 0x64, 0x65, 0x6d, 0x69, 0x63, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x63, 0x75,
	0x72, 0x72, 0x69, 0x63, 0x75, 0x6c, 0x75, 0x6d, 0x2e, 0x4d, 0x73, 0x67, 0x41, 0x64, 0x64, 0x45,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x1a, 0x35, 0x2e, 0x61,
	0x63, 0x61, 0x64, 0x65, 0x6d, 0x69, 0x63, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x63, 0x75, 0x72,
	0x72, 0x69, 0x63, 0x75, 0x6c, 0x75, 0x6d, 0x2e, 0x4d, 0x73, 0x67, 0x41, 0x64, 0x64, 0x45, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x93, 0x01, 0x0a, 0x19, 0x53, 0x65, 0x74, 0x47, 0x72, 0x61, 0x64, 0x75,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x12, 0x36, 0x2e, 0x61, 0x63, 0x61, 0x64, 0x65, 0x6d, 0x69, 0x63, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x2e, 0x63, 0x75, 0x72, 0x72, 0x69, 0x63, 0x75, 0x6c, 0x75, 0x6d, 0x2e, 0x4d, 0x73, 0x67,
	0x53, 0x65, 0x74, 0x47, 0x72, 0x61, 0x64, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x3e, 0x2e, 0x61, 0x63, 0x61, 0x64,
	0x65, 0x6d, 0x69, 0x63, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x63, 0x75, 0x72, 0x72, 0x69, 0x63,
	0x75, 0x6c, 0x75, 0x6d, 0x2e, 0x4d, 0x73, 0x67, 0x53, 0x65, 0x74, 0x47, 0x72, 0x61, 0x64, 0x75,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0x05, 0x80, 0xe7, 0xb0, 0x2a, 0x01,
	0x42, 0xd4, 0x01, 0x0a, 0x1c, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x63, 0x61, 0x64, 0x65, 0x6d, 0x69,
	0x63, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x63, 0x75, 0x72, 0x72, 0x69, 0x63, 0x75, 0x6c, 0x75,
	0x6d, 0x42, 0x07, 0x54, 0x78, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x2a, 0x61, 0x63,
	0x61, 0x64, 0x65, 0x6d, 0x69, 0x63, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x61, 0x63, 0x61, 0x64, 0x65, 0x6d, 0x69, 0x63, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2f, 0x63, 0x75,
	0x72, 0x72, 0x69, 0x63, 0x75, 0x6c, 0x75, 0x6d, 0xa2, 0x02, 0x03, 0x41, 0x43, 0x58, 0xaa, 0x02,
	0x18, 0x41, 0x63, 0x61, 0x64, 0x65, 0x6d, 0x69, 0x63, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x43,
	0x75, 0x72, 0x72, 0x69, 0x63, 0x75, 0x6c, 0x75, 0x6d, 0xca, 0x02, 0x18, 0x41, 0x63, 0x61, 0x64,
	0x65, 0x6d, 0x69, 0x63, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5c, 0x43, 0x75, 0x72, 0x72, 0x69, 0x63,
	0x75, 0x6c, 0x75, 0x6d, 0xe2, 0x02, 0x24, 0x41, 0x63, 0x61, 0x64, 0x65, 0x6d, 0x69, 0x63, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x5c, 0x43, 0x75, 0x72, 0x72, 0x69, 0x63, 0x75, 0x6c, 0x75, 0x6d, 0x5c,
	0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x19, 0x41, 0x63,
	0x61, 0x64, 0x65, 0x6d, 0x69, 0x63, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x3a, 0x3a, 0x43, 0x75, 0x72,
	0x72, 0x69, 0x63, 0x75, 0x6c, 0x75, 0x6d, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_academictoken_curriculum_tx_proto_rawDescOnce sync.Once
	file_academictoken_curriculum_tx_proto_rawDescData = file_academictoken_curriculum_tx_proto_rawDesc
)

func file_academictoken_curriculum_tx_proto_rawDescGZIP() []byte {
	file_academictoken_curriculum_tx_proto_rawDescOnce.Do(func() {
		file_academictoken_curriculum_tx_proto_rawDescData = protoimpl.X.CompressGZIP(file_academictoken_curriculum_tx_proto_rawDescData)
	})
	return file_academictoken_curriculum_tx_proto_rawDescData
}

var file_academictoken_curriculum_tx_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_academictoken_curriculum_tx_proto_goTypes = []interface{}{
	(*MsgUpdateParams)(nil),                      // 0: academictoken.curriculum.MsgUpdateParams
	(*MsgUpdateParamsResponse)(nil),              // 1: academictoken.curriculum.MsgUpdateParamsResponse
	(*MsgCreateCurriculumTree)(nil),              // 2: academictoken.curriculum.MsgCreateCurriculumTree
	(*MsgCreateCurriculumTreeResponse)(nil),      // 3: academictoken.curriculum.MsgCreateCurriculumTreeResponse
	(*MsgAddSemesterToCurriculum)(nil),           // 4: academictoken.curriculum.MsgAddSemesterToCurriculum
	(*MsgAddSemesterToCurriculumResponse)(nil),   // 5: academictoken.curriculum.MsgAddSemesterToCurriculumResponse
	(*MsgAddElectiveGroup)(nil),                  // 6: academictoken.curriculum.MsgAddElectiveGroup
	(*MsgAddElectiveGroupResponse)(nil),          // 7: academictoken.curriculum.MsgAddElectiveGroupResponse
	(*MsgSetGraduationRequirements)(nil),         // 8: academictoken.curriculum.MsgSetGraduationRequirements
	(*MsgSetGraduationRequirementsResponse)(nil), // 9: academictoken.curriculum.MsgSetGraduationRequirementsResponse
	(*Params)(nil),                               // 10: academictoken.curriculum.Params
}
var file_academictoken_curriculum_tx_proto_depIdxs = []int32{
	10, // 0: academictoken.curriculum.MsgUpdateParams.params:type_name -> academictoken.curriculum.Params
	0,  // 1: academictoken.curriculum.Msg.UpdateParams:input_type -> academictoken.curriculum.MsgUpdateParams
	2,  // 2: academictoken.curriculum.Msg.CreateCurriculumTree:input_type -> academictoken.curriculum.MsgCreateCurriculumTree
	4,  // 3: academictoken.curriculum.Msg.AddSemesterToCurriculum:input_type -> academictoken.curriculum.MsgAddSemesterToCurriculum
	6,  // 4: academictoken.curriculum.Msg.AddElectiveGroup:input_type -> academictoken.curriculum.MsgAddElectiveGroup
	8,  // 5: academictoken.curriculum.Msg.SetGraduationRequirements:input_type -> academictoken.curriculum.MsgSetGraduationRequirements
	1,  // 6: academictoken.curriculum.Msg.UpdateParams:output_type -> academictoken.curriculum.MsgUpdateParamsResponse
	3,  // 7: academictoken.curriculum.Msg.CreateCurriculumTree:output_type -> academictoken.curriculum.MsgCreateCurriculumTreeResponse
	5,  // 8: academictoken.curriculum.Msg.AddSemesterToCurriculum:output_type -> academictoken.curriculum.MsgAddSemesterToCurriculumResponse
	7,  // 9: academictoken.curriculum.Msg.AddElectiveGroup:output_type -> academictoken.curriculum.MsgAddElectiveGroupResponse
	9,  // 10: academictoken.curriculum.Msg.SetGraduationRequirements:output_type -> academictoken.curriculum.MsgSetGraduationRequirementsResponse
	6,  // [6:11] is the sub-list for method output_type
	1,  // [1:6] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_academictoken_curriculum_tx_proto_init() }
func file_academictoken_curriculum_tx_proto_init() {
	if File_academictoken_curriculum_tx_proto != nil {
		return
	}
	file_academictoken_curriculum_params_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_academictoken_curriculum_tx_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUpdateParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_academictoken_curriculum_tx_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUpdateParamsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_academictoken_curriculum_tx_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgCreateCurriculumTree); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_academictoken_curriculum_tx_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgCreateCurriculumTreeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_academictoken_curriculum_tx_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgAddSemesterToCurriculum); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_academictoken_curriculum_tx_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgAddSemesterToCurriculumResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_academictoken_curriculum_tx_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgAddElectiveGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_academictoken_curriculum_tx_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgAddElectiveGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_academictoken_curriculum_tx_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgSetGraduationRequirements); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_academictoken_curriculum_tx_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgSetGraduationRequirementsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_academictoken_curriculum_tx_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_academictoken_curriculum_tx_proto_goTypes,
		DependencyIndexes: file_academictoken_curriculum_tx_proto_depIdxs,
		MessageInfos:      file_academictoken_curriculum_tx_proto_msgTypes,
	}.Build()
	File_academictoken_curriculum_tx_proto = out.File
	file_academictoken_curriculum_tx_proto_rawDesc = nil
	file_academictoken_curriculum_tx_proto_goTypes = nil
	file_academictoken_curriculum_tx_proto_depIdxs = nil
}
