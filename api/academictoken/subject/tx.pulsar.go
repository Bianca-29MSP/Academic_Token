// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package subject

import (
	_ "cosmossdk.io/api/amino"
	_ "cosmossdk.io/api/cosmos/msg/v1"
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	_ "github.com/cosmos/gogoproto/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	io "io"
	reflect "reflect"
	sync "sync"
)

var (
	md_MsgUpdateParams           protoreflect.MessageDescriptor
	fd_MsgUpdateParams_authority protoreflect.FieldDescriptor
	fd_MsgUpdateParams_params    protoreflect.FieldDescriptor
)

func init() {
	file_academictoken_subject_tx_proto_init()
	md_MsgUpdateParams = File_academictoken_subject_tx_proto.Messages().ByName("MsgUpdateParams")
	fd_MsgUpdateParams_authority = md_MsgUpdateParams.Fields().ByName("authority")
	fd_MsgUpdateParams_params = md_MsgUpdateParams.Fields().ByName("params")
}

var _ protoreflect.Message = (*fastReflection_MsgUpdateParams)(nil)

type fastReflection_MsgUpdateParams MsgUpdateParams

func (x *MsgUpdateParams) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgUpdateParams)(x)
}

func (x *MsgUpdateParams) slowProtoReflect() protoreflect.Message {
	mi := &file_academictoken_subject_tx_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgUpdateParams_messageType fastReflection_MsgUpdateParams_messageType
var _ protoreflect.MessageType = fastReflection_MsgUpdateParams_messageType{}

type fastReflection_MsgUpdateParams_messageType struct{}

func (x fastReflection_MsgUpdateParams_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgUpdateParams)(nil)
}
func (x fastReflection_MsgUpdateParams_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgUpdateParams)
}
func (x fastReflection_MsgUpdateParams_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUpdateParams
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgUpdateParams) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUpdateParams
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgUpdateParams) Type() protoreflect.MessageType {
	return _fastReflection_MsgUpdateParams_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgUpdateParams) New() protoreflect.Message {
	return new(fastReflection_MsgUpdateParams)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgUpdateParams) Interface() protoreflect.ProtoMessage {
	return (*MsgUpdateParams)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgUpdateParams) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Authority != "" {
		value := protoreflect.ValueOfString(x.Authority)
		if !f(fd_MsgUpdateParams_authority, value) {
			return
		}
	}
	if x.Params != nil {
		value := protoreflect.ValueOfMessage(x.Params.ProtoReflect())
		if !f(fd_MsgUpdateParams_params, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgUpdateParams) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "academictoken.subject.MsgUpdateParams.authority":
		return x.Authority != ""
	case "academictoken.subject.MsgUpdateParams.params":
		return x.Params != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.subject.MsgUpdateParams"))
		}
		panic(fmt.Errorf("message academictoken.subject.MsgUpdateParams does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateParams) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "academictoken.subject.MsgUpdateParams.authority":
		x.Authority = ""
	case "academictoken.subject.MsgUpdateParams.params":
		x.Params = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.subject.MsgUpdateParams"))
		}
		panic(fmt.Errorf("message academictoken.subject.MsgUpdateParams does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgUpdateParams) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "academictoken.subject.MsgUpdateParams.authority":
		value := x.Authority
		return protoreflect.ValueOfString(value)
	case "academictoken.subject.MsgUpdateParams.params":
		value := x.Params
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.subject.MsgUpdateParams"))
		}
		panic(fmt.Errorf("message academictoken.subject.MsgUpdateParams does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateParams) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "academictoken.subject.MsgUpdateParams.authority":
		x.Authority = value.Interface().(string)
	case "academictoken.subject.MsgUpdateParams.params":
		x.Params = value.Message().Interface().(*Params)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.subject.MsgUpdateParams"))
		}
		panic(fmt.Errorf("message academictoken.subject.MsgUpdateParams does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateParams) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "academictoken.subject.MsgUpdateParams.params":
		if x.Params == nil {
			x.Params = new(Params)
		}
		return protoreflect.ValueOfMessage(x.Params.ProtoReflect())
	case "academictoken.subject.MsgUpdateParams.authority":
		panic(fmt.Errorf("field authority of message academictoken.subject.MsgUpdateParams is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.subject.MsgUpdateParams"))
		}
		panic(fmt.Errorf("message academictoken.subject.MsgUpdateParams does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgUpdateParams) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "academictoken.subject.MsgUpdateParams.authority":
		return protoreflect.ValueOfString("")
	case "academictoken.subject.MsgUpdateParams.params":
		m := new(Params)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.subject.MsgUpdateParams"))
		}
		panic(fmt.Errorf("message academictoken.subject.MsgUpdateParams does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgUpdateParams) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in academictoken.subject.MsgUpdateParams", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgUpdateParams) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateParams) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgUpdateParams) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgUpdateParams) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgUpdateParams)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Authority)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Params != nil {
			l = options.Size(x.Params)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgUpdateParams)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Params != nil {
			encoded, err := options.Marshal(x.Params)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Authority) > 0 {
			i -= len(x.Authority)
			copy(dAtA[i:], x.Authority)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Authority)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgUpdateParams)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUpdateParams: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUpdateParams: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Authority", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Authority = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Params == nil {
					x.Params = &Params{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Params); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgUpdateParamsResponse protoreflect.MessageDescriptor
)

func init() {
	file_academictoken_subject_tx_proto_init()
	md_MsgUpdateParamsResponse = File_academictoken_subject_tx_proto.Messages().ByName("MsgUpdateParamsResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgUpdateParamsResponse)(nil)

type fastReflection_MsgUpdateParamsResponse MsgUpdateParamsResponse

func (x *MsgUpdateParamsResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgUpdateParamsResponse)(x)
}

func (x *MsgUpdateParamsResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_academictoken_subject_tx_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgUpdateParamsResponse_messageType fastReflection_MsgUpdateParamsResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgUpdateParamsResponse_messageType{}

type fastReflection_MsgUpdateParamsResponse_messageType struct{}

func (x fastReflection_MsgUpdateParamsResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgUpdateParamsResponse)(nil)
}
func (x fastReflection_MsgUpdateParamsResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgUpdateParamsResponse)
}
func (x fastReflection_MsgUpdateParamsResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUpdateParamsResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgUpdateParamsResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUpdateParamsResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgUpdateParamsResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgUpdateParamsResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgUpdateParamsResponse) New() protoreflect.Message {
	return new(fastReflection_MsgUpdateParamsResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgUpdateParamsResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgUpdateParamsResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgUpdateParamsResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgUpdateParamsResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.subject.MsgUpdateParamsResponse"))
		}
		panic(fmt.Errorf("message academictoken.subject.MsgUpdateParamsResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateParamsResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.subject.MsgUpdateParamsResponse"))
		}
		panic(fmt.Errorf("message academictoken.subject.MsgUpdateParamsResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgUpdateParamsResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.subject.MsgUpdateParamsResponse"))
		}
		panic(fmt.Errorf("message academictoken.subject.MsgUpdateParamsResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateParamsResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.subject.MsgUpdateParamsResponse"))
		}
		panic(fmt.Errorf("message academictoken.subject.MsgUpdateParamsResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateParamsResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.subject.MsgUpdateParamsResponse"))
		}
		panic(fmt.Errorf("message academictoken.subject.MsgUpdateParamsResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgUpdateParamsResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.subject.MsgUpdateParamsResponse"))
		}
		panic(fmt.Errorf("message academictoken.subject.MsgUpdateParamsResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgUpdateParamsResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in academictoken.subject.MsgUpdateParamsResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgUpdateParamsResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateParamsResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgUpdateParamsResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgUpdateParamsResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgUpdateParamsResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgUpdateParamsResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgUpdateParamsResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUpdateParamsResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUpdateParamsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_MsgCreateSubject_11_list)(nil)

type _MsgCreateSubject_11_list struct {
	list *[]string
}

func (x *_MsgCreateSubject_11_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgCreateSubject_11_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_MsgCreateSubject_11_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_MsgCreateSubject_11_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgCreateSubject_11_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message MsgCreateSubject at list field Objectives as it is not of Message kind"))
}

func (x *_MsgCreateSubject_11_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_MsgCreateSubject_11_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_MsgCreateSubject_11_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_MsgCreateSubject_12_list)(nil)

type _MsgCreateSubject_12_list struct {
	list *[]string
}

func (x *_MsgCreateSubject_12_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgCreateSubject_12_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_MsgCreateSubject_12_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_MsgCreateSubject_12_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgCreateSubject_12_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message MsgCreateSubject at list field TopicUnits as it is not of Message kind"))
}

func (x *_MsgCreateSubject_12_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_MsgCreateSubject_12_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_MsgCreateSubject_12_list) IsValid() bool {
	return x.list != nil
}

var (
	md_MsgCreateSubject               protoreflect.MessageDescriptor
	fd_MsgCreateSubject_creator       protoreflect.FieldDescriptor
	fd_MsgCreateSubject_institution   protoreflect.FieldDescriptor
	fd_MsgCreateSubject_course_id     protoreflect.FieldDescriptor
	fd_MsgCreateSubject_title         protoreflect.FieldDescriptor
	fd_MsgCreateSubject_code          protoreflect.FieldDescriptor
	fd_MsgCreateSubject_workloadHours protoreflect.FieldDescriptor
	fd_MsgCreateSubject_credits       protoreflect.FieldDescriptor
	fd_MsgCreateSubject_description   protoreflect.FieldDescriptor
	fd_MsgCreateSubject_subjectType   protoreflect.FieldDescriptor
	fd_MsgCreateSubject_knowledgeArea protoreflect.FieldDescriptor
	fd_MsgCreateSubject_objectives    protoreflect.FieldDescriptor
	fd_MsgCreateSubject_topicUnits    protoreflect.FieldDescriptor
)

func init() {
	file_academictoken_subject_tx_proto_init()
	md_MsgCreateSubject = File_academictoken_subject_tx_proto.Messages().ByName("MsgCreateSubject")
	fd_MsgCreateSubject_creator = md_MsgCreateSubject.Fields().ByName("creator")
	fd_MsgCreateSubject_institution = md_MsgCreateSubject.Fields().ByName("institution")
	fd_MsgCreateSubject_course_id = md_MsgCreateSubject.Fields().ByName("course_id")
	fd_MsgCreateSubject_title = md_MsgCreateSubject.Fields().ByName("title")
	fd_MsgCreateSubject_code = md_MsgCreateSubject.Fields().ByName("code")
	fd_MsgCreateSubject_workloadHours = md_MsgCreateSubject.Fields().ByName("workloadHours")
	fd_MsgCreateSubject_credits = md_MsgCreateSubject.Fields().ByName("credits")
	fd_MsgCreateSubject_description = md_MsgCreateSubject.Fields().ByName("description")
	fd_MsgCreateSubject_subjectType = md_MsgCreateSubject.Fields().ByName("subjectType")
	fd_MsgCreateSubject_knowledgeArea = md_MsgCreateSubject.Fields().ByName("knowledgeArea")
	fd_MsgCreateSubject_objectives = md_MsgCreateSubject.Fields().ByName("objectives")
	fd_MsgCreateSubject_topicUnits = md_MsgCreateSubject.Fields().ByName("topicUnits")
}

var _ protoreflect.Message = (*fastReflection_MsgCreateSubject)(nil)

type fastReflection_MsgCreateSubject MsgCreateSubject

func (x *MsgCreateSubject) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgCreateSubject)(x)
}

func (x *MsgCreateSubject) slowProtoReflect() protoreflect.Message {
	mi := &file_academictoken_subject_tx_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgCreateSubject_messageType fastReflection_MsgCreateSubject_messageType
var _ protoreflect.MessageType = fastReflection_MsgCreateSubject_messageType{}

type fastReflection_MsgCreateSubject_messageType struct{}

func (x fastReflection_MsgCreateSubject_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgCreateSubject)(nil)
}
func (x fastReflection_MsgCreateSubject_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgCreateSubject)
}
func (x fastReflection_MsgCreateSubject_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgCreateSubject
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgCreateSubject) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgCreateSubject
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgCreateSubject) Type() protoreflect.MessageType {
	return _fastReflection_MsgCreateSubject_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgCreateSubject) New() protoreflect.Message {
	return new(fastReflection_MsgCreateSubject)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgCreateSubject) Interface() protoreflect.ProtoMessage {
	return (*MsgCreateSubject)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgCreateSubject) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Creator != "" {
		value := protoreflect.ValueOfString(x.Creator)
		if !f(fd_MsgCreateSubject_creator, value) {
			return
		}
	}
	if x.Institution != "" {
		value := protoreflect.ValueOfString(x.Institution)
		if !f(fd_MsgCreateSubject_institution, value) {
			return
		}
	}
	if x.CourseId != "" {
		value := protoreflect.ValueOfString(x.CourseId)
		if !f(fd_MsgCreateSubject_course_id, value) {
			return
		}
	}
	if x.Title != "" {
		value := protoreflect.ValueOfString(x.Title)
		if !f(fd_MsgCreateSubject_title, value) {
			return
		}
	}
	if x.Code != "" {
		value := protoreflect.ValueOfString(x.Code)
		if !f(fd_MsgCreateSubject_code, value) {
			return
		}
	}
	if x.WorkloadHours != uint64(0) {
		value := protoreflect.ValueOfUint64(x.WorkloadHours)
		if !f(fd_MsgCreateSubject_workloadHours, value) {
			return
		}
	}
	if x.Credits != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Credits)
		if !f(fd_MsgCreateSubject_credits, value) {
			return
		}
	}
	if x.Description != "" {
		value := protoreflect.ValueOfString(x.Description)
		if !f(fd_MsgCreateSubject_description, value) {
			return
		}
	}
	if x.SubjectType != "" {
		value := protoreflect.ValueOfString(x.SubjectType)
		if !f(fd_MsgCreateSubject_subjectType, value) {
			return
		}
	}
	if x.KnowledgeArea != "" {
		value := protoreflect.ValueOfString(x.KnowledgeArea)
		if !f(fd_MsgCreateSubject_knowledgeArea, value) {
			return
		}
	}
	if len(x.Objectives) != 0 {
		value := protoreflect.ValueOfList(&_MsgCreateSubject_11_list{list: &x.Objectives})
		if !f(fd_MsgCreateSubject_objectives, value) {
			return
		}
	}
	if len(x.TopicUnits) != 0 {
		value := protoreflect.ValueOfList(&_MsgCreateSubject_12_list{list: &x.TopicUnits})
		if !f(fd_MsgCreateSubject_topicUnits, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgCreateSubject) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "academictoken.subject.MsgCreateSubject.creator":
		return x.Creator != ""
	case "academictoken.subject.MsgCreateSubject.institution":
		return x.Institution != ""
	case "academictoken.subject.MsgCreateSubject.course_id":
		return x.CourseId != ""
	case "academictoken.subject.MsgCreateSubject.title":
		return x.Title != ""
	case "academictoken.subject.MsgCreateSubject.code":
		return x.Code != ""
	case "academictoken.subject.MsgCreateSubject.workloadHours":
		return x.WorkloadHours != uint64(0)
	case "academictoken.subject.MsgCreateSubject.credits":
		return x.Credits != uint64(0)
	case "academictoken.subject.MsgCreateSubject.description":
		return x.Description != ""
	case "academictoken.subject.MsgCreateSubject.subjectType":
		return x.SubjectType != ""
	case "academictoken.subject.MsgCreateSubject.knowledgeArea":
		return x.KnowledgeArea != ""
	case "academictoken.subject.MsgCreateSubject.objectives":
		return len(x.Objectives) != 0
	case "academictoken.subject.MsgCreateSubject.topicUnits":
		return len(x.TopicUnits) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.subject.MsgCreateSubject"))
		}
		panic(fmt.Errorf("message academictoken.subject.MsgCreateSubject does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCreateSubject) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "academictoken.subject.MsgCreateSubject.creator":
		x.Creator = ""
	case "academictoken.subject.MsgCreateSubject.institution":
		x.Institution = ""
	case "academictoken.subject.MsgCreateSubject.course_id":
		x.CourseId = ""
	case "academictoken.subject.MsgCreateSubject.title":
		x.Title = ""
	case "academictoken.subject.MsgCreateSubject.code":
		x.Code = ""
	case "academictoken.subject.MsgCreateSubject.workloadHours":
		x.WorkloadHours = uint64(0)
	case "academictoken.subject.MsgCreateSubject.credits":
		x.Credits = uint64(0)
	case "academictoken.subject.MsgCreateSubject.description":
		x.Description = ""
	case "academictoken.subject.MsgCreateSubject.subjectType":
		x.SubjectType = ""
	case "academictoken.subject.MsgCreateSubject.knowledgeArea":
		x.KnowledgeArea = ""
	case "academictoken.subject.MsgCreateSubject.objectives":
		x.Objectives = nil
	case "academictoken.subject.MsgCreateSubject.topicUnits":
		x.TopicUnits = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.subject.MsgCreateSubject"))
		}
		panic(fmt.Errorf("message academictoken.subject.MsgCreateSubject does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgCreateSubject) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "academictoken.subject.MsgCreateSubject.creator":
		value := x.Creator
		return protoreflect.ValueOfString(value)
	case "academictoken.subject.MsgCreateSubject.institution":
		value := x.Institution
		return protoreflect.ValueOfString(value)
	case "academictoken.subject.MsgCreateSubject.course_id":
		value := x.CourseId
		return protoreflect.ValueOfString(value)
	case "academictoken.subject.MsgCreateSubject.title":
		value := x.Title
		return protoreflect.ValueOfString(value)
	case "academictoken.subject.MsgCreateSubject.code":
		value := x.Code
		return protoreflect.ValueOfString(value)
	case "academictoken.subject.MsgCreateSubject.workloadHours":
		value := x.WorkloadHours
		return protoreflect.ValueOfUint64(value)
	case "academictoken.subject.MsgCreateSubject.credits":
		value := x.Credits
		return protoreflect.ValueOfUint64(value)
	case "academictoken.subject.MsgCreateSubject.description":
		value := x.Description
		return protoreflect.ValueOfString(value)
	case "academictoken.subject.MsgCreateSubject.subjectType":
		value := x.SubjectType
		return protoreflect.ValueOfString(value)
	case "academictoken.subject.MsgCreateSubject.knowledgeArea":
		value := x.KnowledgeArea
		return protoreflect.ValueOfString(value)
	case "academictoken.subject.MsgCreateSubject.objectives":
		if len(x.Objectives) == 0 {
			return protoreflect.ValueOfList(&_MsgCreateSubject_11_list{})
		}
		listValue := &_MsgCreateSubject_11_list{list: &x.Objectives}
		return protoreflect.ValueOfList(listValue)
	case "academictoken.subject.MsgCreateSubject.topicUnits":
		if len(x.TopicUnits) == 0 {
			return protoreflect.ValueOfList(&_MsgCreateSubject_12_list{})
		}
		listValue := &_MsgCreateSubject_12_list{list: &x.TopicUnits}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.subject.MsgCreateSubject"))
		}
		panic(fmt.Errorf("message academictoken.subject.MsgCreateSubject does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCreateSubject) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "academictoken.subject.MsgCreateSubject.creator":
		x.Creator = value.Interface().(string)
	case "academictoken.subject.MsgCreateSubject.institution":
		x.Institution = value.Interface().(string)
	case "academictoken.subject.MsgCreateSubject.course_id":
		x.CourseId = value.Interface().(string)
	case "academictoken.subject.MsgCreateSubject.title":
		x.Title = value.Interface().(string)
	case "academictoken.subject.MsgCreateSubject.code":
		x.Code = value.Interface().(string)
	case "academictoken.subject.MsgCreateSubject.workloadHours":
		x.WorkloadHours = value.Uint()
	case "academictoken.subject.MsgCreateSubject.credits":
		x.Credits = value.Uint()
	case "academictoken.subject.MsgCreateSubject.description":
		x.Description = value.Interface().(string)
	case "academictoken.subject.MsgCreateSubject.subjectType":
		x.SubjectType = value.Interface().(string)
	case "academictoken.subject.MsgCreateSubject.knowledgeArea":
		x.KnowledgeArea = value.Interface().(string)
	case "academictoken.subject.MsgCreateSubject.objectives":
		lv := value.List()
		clv := lv.(*_MsgCreateSubject_11_list)
		x.Objectives = *clv.list
	case "academictoken.subject.MsgCreateSubject.topicUnits":
		lv := value.List()
		clv := lv.(*_MsgCreateSubject_12_list)
		x.TopicUnits = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.subject.MsgCreateSubject"))
		}
		panic(fmt.Errorf("message academictoken.subject.MsgCreateSubject does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCreateSubject) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "academictoken.subject.MsgCreateSubject.objectives":
		if x.Objectives == nil {
			x.Objectives = []string{}
		}
		value := &_MsgCreateSubject_11_list{list: &x.Objectives}
		return protoreflect.ValueOfList(value)
	case "academictoken.subject.MsgCreateSubject.topicUnits":
		if x.TopicUnits == nil {
			x.TopicUnits = []string{}
		}
		value := &_MsgCreateSubject_12_list{list: &x.TopicUnits}
		return protoreflect.ValueOfList(value)
	case "academictoken.subject.MsgCreateSubject.creator":
		panic(fmt.Errorf("field creator of message academictoken.subject.MsgCreateSubject is not mutable"))
	case "academictoken.subject.MsgCreateSubject.institution":
		panic(fmt.Errorf("field institution of message academictoken.subject.MsgCreateSubject is not mutable"))
	case "academictoken.subject.MsgCreateSubject.course_id":
		panic(fmt.Errorf("field course_id of message academictoken.subject.MsgCreateSubject is not mutable"))
	case "academictoken.subject.MsgCreateSubject.title":
		panic(fmt.Errorf("field title of message academictoken.subject.MsgCreateSubject is not mutable"))
	case "academictoken.subject.MsgCreateSubject.code":
		panic(fmt.Errorf("field code of message academictoken.subject.MsgCreateSubject is not mutable"))
	case "academictoken.subject.MsgCreateSubject.workloadHours":
		panic(fmt.Errorf("field workloadHours of message academictoken.subject.MsgCreateSubject is not mutable"))
	case "academictoken.subject.MsgCreateSubject.credits":
		panic(fmt.Errorf("field credits of message academictoken.subject.MsgCreateSubject is not mutable"))
	case "academictoken.subject.MsgCreateSubject.description":
		panic(fmt.Errorf("field description of message academictoken.subject.MsgCreateSubject is not mutable"))
	case "academictoken.subject.MsgCreateSubject.subjectType":
		panic(fmt.Errorf("field subjectType of message academictoken.subject.MsgCreateSubject is not mutable"))
	case "academictoken.subject.MsgCreateSubject.knowledgeArea":
		panic(fmt.Errorf("field knowledgeArea of message academictoken.subject.MsgCreateSubject is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.subject.MsgCreateSubject"))
		}
		panic(fmt.Errorf("message academictoken.subject.MsgCreateSubject does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgCreateSubject) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "academictoken.subject.MsgCreateSubject.creator":
		return protoreflect.ValueOfString("")
	case "academictoken.subject.MsgCreateSubject.institution":
		return protoreflect.ValueOfString("")
	case "academictoken.subject.MsgCreateSubject.course_id":
		return protoreflect.ValueOfString("")
	case "academictoken.subject.MsgCreateSubject.title":
		return protoreflect.ValueOfString("")
	case "academictoken.subject.MsgCreateSubject.code":
		return protoreflect.ValueOfString("")
	case "academictoken.subject.MsgCreateSubject.workloadHours":
		return protoreflect.ValueOfUint64(uint64(0))
	case "academictoken.subject.MsgCreateSubject.credits":
		return protoreflect.ValueOfUint64(uint64(0))
	case "academictoken.subject.MsgCreateSubject.description":
		return protoreflect.ValueOfString("")
	case "academictoken.subject.MsgCreateSubject.subjectType":
		return protoreflect.ValueOfString("")
	case "academictoken.subject.MsgCreateSubject.knowledgeArea":
		return protoreflect.ValueOfString("")
	case "academictoken.subject.MsgCreateSubject.objectives":
		list := []string{}
		return protoreflect.ValueOfList(&_MsgCreateSubject_11_list{list: &list})
	case "academictoken.subject.MsgCreateSubject.topicUnits":
		list := []string{}
		return protoreflect.ValueOfList(&_MsgCreateSubject_12_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.subject.MsgCreateSubject"))
		}
		panic(fmt.Errorf("message academictoken.subject.MsgCreateSubject does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgCreateSubject) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in academictoken.subject.MsgCreateSubject", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgCreateSubject) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCreateSubject) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgCreateSubject) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgCreateSubject) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgCreateSubject)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Creator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Institution)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.CourseId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Title)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Code)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.WorkloadHours != 0 {
			n += 1 + runtime.Sov(uint64(x.WorkloadHours))
		}
		if x.Credits != 0 {
			n += 1 + runtime.Sov(uint64(x.Credits))
		}
		l = len(x.Description)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.SubjectType)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.KnowledgeArea)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.Objectives) > 0 {
			for _, s := range x.Objectives {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.TopicUnits) > 0 {
			for _, s := range x.TopicUnits {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgCreateSubject)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.TopicUnits) > 0 {
			for iNdEx := len(x.TopicUnits) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.TopicUnits[iNdEx])
				copy(dAtA[i:], x.TopicUnits[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.TopicUnits[iNdEx])))
				i--
				dAtA[i] = 0x62
			}
		}
		if len(x.Objectives) > 0 {
			for iNdEx := len(x.Objectives) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.Objectives[iNdEx])
				copy(dAtA[i:], x.Objectives[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Objectives[iNdEx])))
				i--
				dAtA[i] = 0x5a
			}
		}
		if len(x.KnowledgeArea) > 0 {
			i -= len(x.KnowledgeArea)
			copy(dAtA[i:], x.KnowledgeArea)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.KnowledgeArea)))
			i--
			dAtA[i] = 0x52
		}
		if len(x.SubjectType) > 0 {
			i -= len(x.SubjectType)
			copy(dAtA[i:], x.SubjectType)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.SubjectType)))
			i--
			dAtA[i] = 0x4a
		}
		if len(x.Description) > 0 {
			i -= len(x.Description)
			copy(dAtA[i:], x.Description)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Description)))
			i--
			dAtA[i] = 0x42
		}
		if x.Credits != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Credits))
			i--
			dAtA[i] = 0x38
		}
		if x.WorkloadHours != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.WorkloadHours))
			i--
			dAtA[i] = 0x30
		}
		if len(x.Code) > 0 {
			i -= len(x.Code)
			copy(dAtA[i:], x.Code)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Code)))
			i--
			dAtA[i] = 0x2a
		}
		if len(x.Title) > 0 {
			i -= len(x.Title)
			copy(dAtA[i:], x.Title)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Title)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.CourseId) > 0 {
			i -= len(x.CourseId)
			copy(dAtA[i:], x.CourseId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.CourseId)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.Institution) > 0 {
			i -= len(x.Institution)
			copy(dAtA[i:], x.Institution)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Institution)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Creator) > 0 {
			i -= len(x.Creator)
			copy(dAtA[i:], x.Creator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Creator)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgCreateSubject)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgCreateSubject: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgCreateSubject: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Creator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Institution", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Institution = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CourseId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CourseId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Title = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Code", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Code = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 6:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field WorkloadHours", wireType)
				}
				x.WorkloadHours = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.WorkloadHours |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 7:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Credits", wireType)
				}
				x.Credits = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Credits |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 8:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Description = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 9:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field SubjectType", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.SubjectType = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 10:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field KnowledgeArea", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.KnowledgeArea = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 11:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Objectives", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Objectives = append(x.Objectives, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			case 12:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicUnits", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TopicUnits = append(x.TopicUnits, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgCreateSubjectResponse       protoreflect.MessageDescriptor
	fd_MsgCreateSubjectResponse_index protoreflect.FieldDescriptor
)

func init() {
	file_academictoken_subject_tx_proto_init()
	md_MsgCreateSubjectResponse = File_academictoken_subject_tx_proto.Messages().ByName("MsgCreateSubjectResponse")
	fd_MsgCreateSubjectResponse_index = md_MsgCreateSubjectResponse.Fields().ByName("index")
}

var _ protoreflect.Message = (*fastReflection_MsgCreateSubjectResponse)(nil)

type fastReflection_MsgCreateSubjectResponse MsgCreateSubjectResponse

func (x *MsgCreateSubjectResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgCreateSubjectResponse)(x)
}

func (x *MsgCreateSubjectResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_academictoken_subject_tx_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgCreateSubjectResponse_messageType fastReflection_MsgCreateSubjectResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgCreateSubjectResponse_messageType{}

type fastReflection_MsgCreateSubjectResponse_messageType struct{}

func (x fastReflection_MsgCreateSubjectResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgCreateSubjectResponse)(nil)
}
func (x fastReflection_MsgCreateSubjectResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgCreateSubjectResponse)
}
func (x fastReflection_MsgCreateSubjectResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgCreateSubjectResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgCreateSubjectResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgCreateSubjectResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgCreateSubjectResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgCreateSubjectResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgCreateSubjectResponse) New() protoreflect.Message {
	return new(fastReflection_MsgCreateSubjectResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgCreateSubjectResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgCreateSubjectResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgCreateSubjectResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Index != "" {
		value := protoreflect.ValueOfString(x.Index)
		if !f(fd_MsgCreateSubjectResponse_index, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgCreateSubjectResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "academictoken.subject.MsgCreateSubjectResponse.index":
		return x.Index != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.subject.MsgCreateSubjectResponse"))
		}
		panic(fmt.Errorf("message academictoken.subject.MsgCreateSubjectResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCreateSubjectResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "academictoken.subject.MsgCreateSubjectResponse.index":
		x.Index = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.subject.MsgCreateSubjectResponse"))
		}
		panic(fmt.Errorf("message academictoken.subject.MsgCreateSubjectResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgCreateSubjectResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "academictoken.subject.MsgCreateSubjectResponse.index":
		value := x.Index
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.subject.MsgCreateSubjectResponse"))
		}
		panic(fmt.Errorf("message academictoken.subject.MsgCreateSubjectResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCreateSubjectResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "academictoken.subject.MsgCreateSubjectResponse.index":
		x.Index = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.subject.MsgCreateSubjectResponse"))
		}
		panic(fmt.Errorf("message academictoken.subject.MsgCreateSubjectResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCreateSubjectResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "academictoken.subject.MsgCreateSubjectResponse.index":
		panic(fmt.Errorf("field index of message academictoken.subject.MsgCreateSubjectResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.subject.MsgCreateSubjectResponse"))
		}
		panic(fmt.Errorf("message academictoken.subject.MsgCreateSubjectResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgCreateSubjectResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "academictoken.subject.MsgCreateSubjectResponse.index":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.subject.MsgCreateSubjectResponse"))
		}
		panic(fmt.Errorf("message academictoken.subject.MsgCreateSubjectResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgCreateSubjectResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in academictoken.subject.MsgCreateSubjectResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgCreateSubjectResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCreateSubjectResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgCreateSubjectResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgCreateSubjectResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgCreateSubjectResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Index)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgCreateSubjectResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Index) > 0 {
			i -= len(x.Index)
			copy(dAtA[i:], x.Index)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Index)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgCreateSubjectResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgCreateSubjectResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgCreateSubjectResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Index = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_MsgCreateSubjectContent_11_list)(nil)

type _MsgCreateSubjectContent_11_list struct {
	list *[]string
}

func (x *_MsgCreateSubjectContent_11_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgCreateSubjectContent_11_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_MsgCreateSubjectContent_11_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_MsgCreateSubjectContent_11_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgCreateSubjectContent_11_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message MsgCreateSubjectContent at list field Objectives as it is not of Message kind"))
}

func (x *_MsgCreateSubjectContent_11_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_MsgCreateSubjectContent_11_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_MsgCreateSubjectContent_11_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_MsgCreateSubjectContent_12_list)(nil)

type _MsgCreateSubjectContent_12_list struct {
	list *[]string
}

func (x *_MsgCreateSubjectContent_12_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgCreateSubjectContent_12_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_MsgCreateSubjectContent_12_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_MsgCreateSubjectContent_12_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgCreateSubjectContent_12_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message MsgCreateSubjectContent at list field TopicUnits as it is not of Message kind"))
}

func (x *_MsgCreateSubjectContent_12_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_MsgCreateSubjectContent_12_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_MsgCreateSubjectContent_12_list) IsValid() bool {
	return x.list != nil
}

var (
	md_MsgCreateSubjectContent               protoreflect.MessageDescriptor
	fd_MsgCreateSubjectContent_creator       protoreflect.FieldDescriptor
	fd_MsgCreateSubjectContent_institution   protoreflect.FieldDescriptor
	fd_MsgCreateSubjectContent_course_id     protoreflect.FieldDescriptor
	fd_MsgCreateSubjectContent_title         protoreflect.FieldDescriptor
	fd_MsgCreateSubjectContent_code          protoreflect.FieldDescriptor
	fd_MsgCreateSubjectContent_workloadHours protoreflect.FieldDescriptor
	fd_MsgCreateSubjectContent_credits       protoreflect.FieldDescriptor
	fd_MsgCreateSubjectContent_description   protoreflect.FieldDescriptor
	fd_MsgCreateSubjectContent_subjectType   protoreflect.FieldDescriptor
	fd_MsgCreateSubjectContent_knowledgeArea protoreflect.FieldDescriptor
	fd_MsgCreateSubjectContent_objectives    protoreflect.FieldDescriptor
	fd_MsgCreateSubjectContent_topicUnits    protoreflect.FieldDescriptor
)

func init() {
	file_academictoken_subject_tx_proto_init()
	md_MsgCreateSubjectContent = File_academictoken_subject_tx_proto.Messages().ByName("MsgCreateSubjectContent")
	fd_MsgCreateSubjectContent_creator = md_MsgCreateSubjectContent.Fields().ByName("creator")
	fd_MsgCreateSubjectContent_institution = md_MsgCreateSubjectContent.Fields().ByName("institution")
	fd_MsgCreateSubjectContent_course_id = md_MsgCreateSubjectContent.Fields().ByName("course_id")
	fd_MsgCreateSubjectContent_title = md_MsgCreateSubjectContent.Fields().ByName("title")
	fd_MsgCreateSubjectContent_code = md_MsgCreateSubjectContent.Fields().ByName("code")
	fd_MsgCreateSubjectContent_workloadHours = md_MsgCreateSubjectContent.Fields().ByName("workloadHours")
	fd_MsgCreateSubjectContent_credits = md_MsgCreateSubjectContent.Fields().ByName("credits")
	fd_MsgCreateSubjectContent_description = md_MsgCreateSubjectContent.Fields().ByName("description")
	fd_MsgCreateSubjectContent_subjectType = md_MsgCreateSubjectContent.Fields().ByName("subjectType")
	fd_MsgCreateSubjectContent_knowledgeArea = md_MsgCreateSubjectContent.Fields().ByName("knowledgeArea")
	fd_MsgCreateSubjectContent_objectives = md_MsgCreateSubjectContent.Fields().ByName("objectives")
	fd_MsgCreateSubjectContent_topicUnits = md_MsgCreateSubjectContent.Fields().ByName("topicUnits")
}

var _ protoreflect.Message = (*fastReflection_MsgCreateSubjectContent)(nil)

type fastReflection_MsgCreateSubjectContent MsgCreateSubjectContent

func (x *MsgCreateSubjectContent) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgCreateSubjectContent)(x)
}

func (x *MsgCreateSubjectContent) slowProtoReflect() protoreflect.Message {
	mi := &file_academictoken_subject_tx_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgCreateSubjectContent_messageType fastReflection_MsgCreateSubjectContent_messageType
var _ protoreflect.MessageType = fastReflection_MsgCreateSubjectContent_messageType{}

type fastReflection_MsgCreateSubjectContent_messageType struct{}

func (x fastReflection_MsgCreateSubjectContent_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgCreateSubjectContent)(nil)
}
func (x fastReflection_MsgCreateSubjectContent_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgCreateSubjectContent)
}
func (x fastReflection_MsgCreateSubjectContent_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgCreateSubjectContent
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgCreateSubjectContent) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgCreateSubjectContent
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgCreateSubjectContent) Type() protoreflect.MessageType {
	return _fastReflection_MsgCreateSubjectContent_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgCreateSubjectContent) New() protoreflect.Message {
	return new(fastReflection_MsgCreateSubjectContent)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgCreateSubjectContent) Interface() protoreflect.ProtoMessage {
	return (*MsgCreateSubjectContent)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgCreateSubjectContent) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Creator != "" {
		value := protoreflect.ValueOfString(x.Creator)
		if !f(fd_MsgCreateSubjectContent_creator, value) {
			return
		}
	}
	if x.Institution != "" {
		value := protoreflect.ValueOfString(x.Institution)
		if !f(fd_MsgCreateSubjectContent_institution, value) {
			return
		}
	}
	if x.CourseId != "" {
		value := protoreflect.ValueOfString(x.CourseId)
		if !f(fd_MsgCreateSubjectContent_course_id, value) {
			return
		}
	}
	if x.Title != "" {
		value := protoreflect.ValueOfString(x.Title)
		if !f(fd_MsgCreateSubjectContent_title, value) {
			return
		}
	}
	if x.Code != "" {
		value := protoreflect.ValueOfString(x.Code)
		if !f(fd_MsgCreateSubjectContent_code, value) {
			return
		}
	}
	if x.WorkloadHours != uint64(0) {
		value := protoreflect.ValueOfUint64(x.WorkloadHours)
		if !f(fd_MsgCreateSubjectContent_workloadHours, value) {
			return
		}
	}
	if x.Credits != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Credits)
		if !f(fd_MsgCreateSubjectContent_credits, value) {
			return
		}
	}
	if x.Description != "" {
		value := protoreflect.ValueOfString(x.Description)
		if !f(fd_MsgCreateSubjectContent_description, value) {
			return
		}
	}
	if x.SubjectType != "" {
		value := protoreflect.ValueOfString(x.SubjectType)
		if !f(fd_MsgCreateSubjectContent_subjectType, value) {
			return
		}
	}
	if x.KnowledgeArea != "" {
		value := protoreflect.ValueOfString(x.KnowledgeArea)
		if !f(fd_MsgCreateSubjectContent_knowledgeArea, value) {
			return
		}
	}
	if len(x.Objectives) != 0 {
		value := protoreflect.ValueOfList(&_MsgCreateSubjectContent_11_list{list: &x.Objectives})
		if !f(fd_MsgCreateSubjectContent_objectives, value) {
			return
		}
	}
	if len(x.TopicUnits) != 0 {
		value := protoreflect.ValueOfList(&_MsgCreateSubjectContent_12_list{list: &x.TopicUnits})
		if !f(fd_MsgCreateSubjectContent_topicUnits, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgCreateSubjectContent) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "academictoken.subject.MsgCreateSubjectContent.creator":
		return x.Creator != ""
	case "academictoken.subject.MsgCreateSubjectContent.institution":
		return x.Institution != ""
	case "academictoken.subject.MsgCreateSubjectContent.course_id":
		return x.CourseId != ""
	case "academictoken.subject.MsgCreateSubjectContent.title":
		return x.Title != ""
	case "academictoken.subject.MsgCreateSubjectContent.code":
		return x.Code != ""
	case "academictoken.subject.MsgCreateSubjectContent.workloadHours":
		return x.WorkloadHours != uint64(0)
	case "academictoken.subject.MsgCreateSubjectContent.credits":
		return x.Credits != uint64(0)
	case "academictoken.subject.MsgCreateSubjectContent.description":
		return x.Description != ""
	case "academictoken.subject.MsgCreateSubjectContent.subjectType":
		return x.SubjectType != ""
	case "academictoken.subject.MsgCreateSubjectContent.knowledgeArea":
		return x.KnowledgeArea != ""
	case "academictoken.subject.MsgCreateSubjectContent.objectives":
		return len(x.Objectives) != 0
	case "academictoken.subject.MsgCreateSubjectContent.topicUnits":
		return len(x.TopicUnits) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.subject.MsgCreateSubjectContent"))
		}
		panic(fmt.Errorf("message academictoken.subject.MsgCreateSubjectContent does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCreateSubjectContent) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "academictoken.subject.MsgCreateSubjectContent.creator":
		x.Creator = ""
	case "academictoken.subject.MsgCreateSubjectContent.institution":
		x.Institution = ""
	case "academictoken.subject.MsgCreateSubjectContent.course_id":
		x.CourseId = ""
	case "academictoken.subject.MsgCreateSubjectContent.title":
		x.Title = ""
	case "academictoken.subject.MsgCreateSubjectContent.code":
		x.Code = ""
	case "academictoken.subject.MsgCreateSubjectContent.workloadHours":
		x.WorkloadHours = uint64(0)
	case "academictoken.subject.MsgCreateSubjectContent.credits":
		x.Credits = uint64(0)
	case "academictoken.subject.MsgCreateSubjectContent.description":
		x.Description = ""
	case "academictoken.subject.MsgCreateSubjectContent.subjectType":
		x.SubjectType = ""
	case "academictoken.subject.MsgCreateSubjectContent.knowledgeArea":
		x.KnowledgeArea = ""
	case "academictoken.subject.MsgCreateSubjectContent.objectives":
		x.Objectives = nil
	case "academictoken.subject.MsgCreateSubjectContent.topicUnits":
		x.TopicUnits = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.subject.MsgCreateSubjectContent"))
		}
		panic(fmt.Errorf("message academictoken.subject.MsgCreateSubjectContent does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgCreateSubjectContent) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "academictoken.subject.MsgCreateSubjectContent.creator":
		value := x.Creator
		return protoreflect.ValueOfString(value)
	case "academictoken.subject.MsgCreateSubjectContent.institution":
		value := x.Institution
		return protoreflect.ValueOfString(value)
	case "academictoken.subject.MsgCreateSubjectContent.course_id":
		value := x.CourseId
		return protoreflect.ValueOfString(value)
	case "academictoken.subject.MsgCreateSubjectContent.title":
		value := x.Title
		return protoreflect.ValueOfString(value)
	case "academictoken.subject.MsgCreateSubjectContent.code":
		value := x.Code
		return protoreflect.ValueOfString(value)
	case "academictoken.subject.MsgCreateSubjectContent.workloadHours":
		value := x.WorkloadHours
		return protoreflect.ValueOfUint64(value)
	case "academictoken.subject.MsgCreateSubjectContent.credits":
		value := x.Credits
		return protoreflect.ValueOfUint64(value)
	case "academictoken.subject.MsgCreateSubjectContent.description":
		value := x.Description
		return protoreflect.ValueOfString(value)
	case "academictoken.subject.MsgCreateSubjectContent.subjectType":
		value := x.SubjectType
		return protoreflect.ValueOfString(value)
	case "academictoken.subject.MsgCreateSubjectContent.knowledgeArea":
		value := x.KnowledgeArea
		return protoreflect.ValueOfString(value)
	case "academictoken.subject.MsgCreateSubjectContent.objectives":
		if len(x.Objectives) == 0 {
			return protoreflect.ValueOfList(&_MsgCreateSubjectContent_11_list{})
		}
		listValue := &_MsgCreateSubjectContent_11_list{list: &x.Objectives}
		return protoreflect.ValueOfList(listValue)
	case "academictoken.subject.MsgCreateSubjectContent.topicUnits":
		if len(x.TopicUnits) == 0 {
			return protoreflect.ValueOfList(&_MsgCreateSubjectContent_12_list{})
		}
		listValue := &_MsgCreateSubjectContent_12_list{list: &x.TopicUnits}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.subject.MsgCreateSubjectContent"))
		}
		panic(fmt.Errorf("message academictoken.subject.MsgCreateSubjectContent does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCreateSubjectContent) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "academictoken.subject.MsgCreateSubjectContent.creator":
		x.Creator = value.Interface().(string)
	case "academictoken.subject.MsgCreateSubjectContent.institution":
		x.Institution = value.Interface().(string)
	case "academictoken.subject.MsgCreateSubjectContent.course_id":
		x.CourseId = value.Interface().(string)
	case "academictoken.subject.MsgCreateSubjectContent.title":
		x.Title = value.Interface().(string)
	case "academictoken.subject.MsgCreateSubjectContent.code":
		x.Code = value.Interface().(string)
	case "academictoken.subject.MsgCreateSubjectContent.workloadHours":
		x.WorkloadHours = value.Uint()
	case "academictoken.subject.MsgCreateSubjectContent.credits":
		x.Credits = value.Uint()
	case "academictoken.subject.MsgCreateSubjectContent.description":
		x.Description = value.Interface().(string)
	case "academictoken.subject.MsgCreateSubjectContent.subjectType":
		x.SubjectType = value.Interface().(string)
	case "academictoken.subject.MsgCreateSubjectContent.knowledgeArea":
		x.KnowledgeArea = value.Interface().(string)
	case "academictoken.subject.MsgCreateSubjectContent.objectives":
		lv := value.List()
		clv := lv.(*_MsgCreateSubjectContent_11_list)
		x.Objectives = *clv.list
	case "academictoken.subject.MsgCreateSubjectContent.topicUnits":
		lv := value.List()
		clv := lv.(*_MsgCreateSubjectContent_12_list)
		x.TopicUnits = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.subject.MsgCreateSubjectContent"))
		}
		panic(fmt.Errorf("message academictoken.subject.MsgCreateSubjectContent does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCreateSubjectContent) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "academictoken.subject.MsgCreateSubjectContent.objectives":
		if x.Objectives == nil {
			x.Objectives = []string{}
		}
		value := &_MsgCreateSubjectContent_11_list{list: &x.Objectives}
		return protoreflect.ValueOfList(value)
	case "academictoken.subject.MsgCreateSubjectContent.topicUnits":
		if x.TopicUnits == nil {
			x.TopicUnits = []string{}
		}
		value := &_MsgCreateSubjectContent_12_list{list: &x.TopicUnits}
		return protoreflect.ValueOfList(value)
	case "academictoken.subject.MsgCreateSubjectContent.creator":
		panic(fmt.Errorf("field creator of message academictoken.subject.MsgCreateSubjectContent is not mutable"))
	case "academictoken.subject.MsgCreateSubjectContent.institution":
		panic(fmt.Errorf("field institution of message academictoken.subject.MsgCreateSubjectContent is not mutable"))
	case "academictoken.subject.MsgCreateSubjectContent.course_id":
		panic(fmt.Errorf("field course_id of message academictoken.subject.MsgCreateSubjectContent is not mutable"))
	case "academictoken.subject.MsgCreateSubjectContent.title":
		panic(fmt.Errorf("field title of message academictoken.subject.MsgCreateSubjectContent is not mutable"))
	case "academictoken.subject.MsgCreateSubjectContent.code":
		panic(fmt.Errorf("field code of message academictoken.subject.MsgCreateSubjectContent is not mutable"))
	case "academictoken.subject.MsgCreateSubjectContent.workloadHours":
		panic(fmt.Errorf("field workloadHours of message academictoken.subject.MsgCreateSubjectContent is not mutable"))
	case "academictoken.subject.MsgCreateSubjectContent.credits":
		panic(fmt.Errorf("field credits of message academictoken.subject.MsgCreateSubjectContent is not mutable"))
	case "academictoken.subject.MsgCreateSubjectContent.description":
		panic(fmt.Errorf("field description of message academictoken.subject.MsgCreateSubjectContent is not mutable"))
	case "academictoken.subject.MsgCreateSubjectContent.subjectType":
		panic(fmt.Errorf("field subjectType of message academictoken.subject.MsgCreateSubjectContent is not mutable"))
	case "academictoken.subject.MsgCreateSubjectContent.knowledgeArea":
		panic(fmt.Errorf("field knowledgeArea of message academictoken.subject.MsgCreateSubjectContent is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.subject.MsgCreateSubjectContent"))
		}
		panic(fmt.Errorf("message academictoken.subject.MsgCreateSubjectContent does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgCreateSubjectContent) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "academictoken.subject.MsgCreateSubjectContent.creator":
		return protoreflect.ValueOfString("")
	case "academictoken.subject.MsgCreateSubjectContent.institution":
		return protoreflect.ValueOfString("")
	case "academictoken.subject.MsgCreateSubjectContent.course_id":
		return protoreflect.ValueOfString("")
	case "academictoken.subject.MsgCreateSubjectContent.title":
		return protoreflect.ValueOfString("")
	case "academictoken.subject.MsgCreateSubjectContent.code":
		return protoreflect.ValueOfString("")
	case "academictoken.subject.MsgCreateSubjectContent.workloadHours":
		return protoreflect.ValueOfUint64(uint64(0))
	case "academictoken.subject.MsgCreateSubjectContent.credits":
		return protoreflect.ValueOfUint64(uint64(0))
	case "academictoken.subject.MsgCreateSubjectContent.description":
		return protoreflect.ValueOfString("")
	case "academictoken.subject.MsgCreateSubjectContent.subjectType":
		return protoreflect.ValueOfString("")
	case "academictoken.subject.MsgCreateSubjectContent.knowledgeArea":
		return protoreflect.ValueOfString("")
	case "academictoken.subject.MsgCreateSubjectContent.objectives":
		list := []string{}
		return protoreflect.ValueOfList(&_MsgCreateSubjectContent_11_list{list: &list})
	case "academictoken.subject.MsgCreateSubjectContent.topicUnits":
		list := []string{}
		return protoreflect.ValueOfList(&_MsgCreateSubjectContent_12_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.subject.MsgCreateSubjectContent"))
		}
		panic(fmt.Errorf("message academictoken.subject.MsgCreateSubjectContent does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgCreateSubjectContent) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in academictoken.subject.MsgCreateSubjectContent", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgCreateSubjectContent) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCreateSubjectContent) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgCreateSubjectContent) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgCreateSubjectContent) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgCreateSubjectContent)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Creator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Institution)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.CourseId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Title)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Code)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.WorkloadHours != 0 {
			n += 1 + runtime.Sov(uint64(x.WorkloadHours))
		}
		if x.Credits != 0 {
			n += 1 + runtime.Sov(uint64(x.Credits))
		}
		l = len(x.Description)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.SubjectType)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.KnowledgeArea)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.Objectives) > 0 {
			for _, s := range x.Objectives {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.TopicUnits) > 0 {
			for _, s := range x.TopicUnits {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgCreateSubjectContent)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.TopicUnits) > 0 {
			for iNdEx := len(x.TopicUnits) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.TopicUnits[iNdEx])
				copy(dAtA[i:], x.TopicUnits[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.TopicUnits[iNdEx])))
				i--
				dAtA[i] = 0x62
			}
		}
		if len(x.Objectives) > 0 {
			for iNdEx := len(x.Objectives) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.Objectives[iNdEx])
				copy(dAtA[i:], x.Objectives[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Objectives[iNdEx])))
				i--
				dAtA[i] = 0x5a
			}
		}
		if len(x.KnowledgeArea) > 0 {
			i -= len(x.KnowledgeArea)
			copy(dAtA[i:], x.KnowledgeArea)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.KnowledgeArea)))
			i--
			dAtA[i] = 0x52
		}
		if len(x.SubjectType) > 0 {
			i -= len(x.SubjectType)
			copy(dAtA[i:], x.SubjectType)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.SubjectType)))
			i--
			dAtA[i] = 0x4a
		}
		if len(x.Description) > 0 {
			i -= len(x.Description)
			copy(dAtA[i:], x.Description)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Description)))
			i--
			dAtA[i] = 0x42
		}
		if x.Credits != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Credits))
			i--
			dAtA[i] = 0x38
		}
		if x.WorkloadHours != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.WorkloadHours))
			i--
			dAtA[i] = 0x30
		}
		if len(x.Code) > 0 {
			i -= len(x.Code)
			copy(dAtA[i:], x.Code)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Code)))
			i--
			dAtA[i] = 0x2a
		}
		if len(x.Title) > 0 {
			i -= len(x.Title)
			copy(dAtA[i:], x.Title)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Title)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.CourseId) > 0 {
			i -= len(x.CourseId)
			copy(dAtA[i:], x.CourseId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.CourseId)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.Institution) > 0 {
			i -= len(x.Institution)
			copy(dAtA[i:], x.Institution)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Institution)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Creator) > 0 {
			i -= len(x.Creator)
			copy(dAtA[i:], x.Creator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Creator)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgCreateSubjectContent)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgCreateSubjectContent: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgCreateSubjectContent: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Creator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Institution", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Institution = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CourseId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CourseId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Title = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Code", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Code = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 6:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field WorkloadHours", wireType)
				}
				x.WorkloadHours = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.WorkloadHours |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 7:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Credits", wireType)
				}
				x.Credits = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Credits |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 8:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Description = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 9:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field SubjectType", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.SubjectType = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 10:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field KnowledgeArea", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.KnowledgeArea = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 11:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Objectives", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Objectives = append(x.Objectives, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			case 12:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicUnits", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TopicUnits = append(x.TopicUnits, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgCreateSubjectContentResponse       protoreflect.MessageDescriptor
	fd_MsgCreateSubjectContentResponse_index protoreflect.FieldDescriptor
)

func init() {
	file_academictoken_subject_tx_proto_init()
	md_MsgCreateSubjectContentResponse = File_academictoken_subject_tx_proto.Messages().ByName("MsgCreateSubjectContentResponse")
	fd_MsgCreateSubjectContentResponse_index = md_MsgCreateSubjectContentResponse.Fields().ByName("index")
}

var _ protoreflect.Message = (*fastReflection_MsgCreateSubjectContentResponse)(nil)

type fastReflection_MsgCreateSubjectContentResponse MsgCreateSubjectContentResponse

func (x *MsgCreateSubjectContentResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgCreateSubjectContentResponse)(x)
}

func (x *MsgCreateSubjectContentResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_academictoken_subject_tx_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgCreateSubjectContentResponse_messageType fastReflection_MsgCreateSubjectContentResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgCreateSubjectContentResponse_messageType{}

type fastReflection_MsgCreateSubjectContentResponse_messageType struct{}

func (x fastReflection_MsgCreateSubjectContentResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgCreateSubjectContentResponse)(nil)
}
func (x fastReflection_MsgCreateSubjectContentResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgCreateSubjectContentResponse)
}
func (x fastReflection_MsgCreateSubjectContentResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgCreateSubjectContentResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgCreateSubjectContentResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgCreateSubjectContentResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgCreateSubjectContentResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgCreateSubjectContentResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgCreateSubjectContentResponse) New() protoreflect.Message {
	return new(fastReflection_MsgCreateSubjectContentResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgCreateSubjectContentResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgCreateSubjectContentResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgCreateSubjectContentResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Index != "" {
		value := protoreflect.ValueOfString(x.Index)
		if !f(fd_MsgCreateSubjectContentResponse_index, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgCreateSubjectContentResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "academictoken.subject.MsgCreateSubjectContentResponse.index":
		return x.Index != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.subject.MsgCreateSubjectContentResponse"))
		}
		panic(fmt.Errorf("message academictoken.subject.MsgCreateSubjectContentResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCreateSubjectContentResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "academictoken.subject.MsgCreateSubjectContentResponse.index":
		x.Index = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.subject.MsgCreateSubjectContentResponse"))
		}
		panic(fmt.Errorf("message academictoken.subject.MsgCreateSubjectContentResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgCreateSubjectContentResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "academictoken.subject.MsgCreateSubjectContentResponse.index":
		value := x.Index
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.subject.MsgCreateSubjectContentResponse"))
		}
		panic(fmt.Errorf("message academictoken.subject.MsgCreateSubjectContentResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCreateSubjectContentResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "academictoken.subject.MsgCreateSubjectContentResponse.index":
		x.Index = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.subject.MsgCreateSubjectContentResponse"))
		}
		panic(fmt.Errorf("message academictoken.subject.MsgCreateSubjectContentResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCreateSubjectContentResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "academictoken.subject.MsgCreateSubjectContentResponse.index":
		panic(fmt.Errorf("field index of message academictoken.subject.MsgCreateSubjectContentResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.subject.MsgCreateSubjectContentResponse"))
		}
		panic(fmt.Errorf("message academictoken.subject.MsgCreateSubjectContentResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgCreateSubjectContentResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "academictoken.subject.MsgCreateSubjectContentResponse.index":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.subject.MsgCreateSubjectContentResponse"))
		}
		panic(fmt.Errorf("message academictoken.subject.MsgCreateSubjectContentResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgCreateSubjectContentResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in academictoken.subject.MsgCreateSubjectContentResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgCreateSubjectContentResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCreateSubjectContentResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgCreateSubjectContentResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgCreateSubjectContentResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgCreateSubjectContentResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Index)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgCreateSubjectContentResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Index) > 0 {
			i -= len(x.Index)
			copy(dAtA[i:], x.Index)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Index)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgCreateSubjectContentResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgCreateSubjectContentResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgCreateSubjectContentResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Index = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_MsgAddPrerequisiteGroup_6_list)(nil)

type _MsgAddPrerequisiteGroup_6_list struct {
	list *[]string
}

func (x *_MsgAddPrerequisiteGroup_6_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgAddPrerequisiteGroup_6_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_MsgAddPrerequisiteGroup_6_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_MsgAddPrerequisiteGroup_6_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgAddPrerequisiteGroup_6_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message MsgAddPrerequisiteGroup at list field SubjectIds as it is not of Message kind"))
}

func (x *_MsgAddPrerequisiteGroup_6_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_MsgAddPrerequisiteGroup_6_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_MsgAddPrerequisiteGroup_6_list) IsValid() bool {
	return x.list != nil
}

var (
	md_MsgAddPrerequisiteGroup                          protoreflect.MessageDescriptor
	fd_MsgAddPrerequisiteGroup_creator                  protoreflect.FieldDescriptor
	fd_MsgAddPrerequisiteGroup_subjectId                protoreflect.FieldDescriptor
	fd_MsgAddPrerequisiteGroup_groupType                protoreflect.FieldDescriptor
	fd_MsgAddPrerequisiteGroup_minimumCredits           protoreflect.FieldDescriptor
	fd_MsgAddPrerequisiteGroup_minimumCompletedSubjects protoreflect.FieldDescriptor
	fd_MsgAddPrerequisiteGroup_subjectIds               protoreflect.FieldDescriptor
)

func init() {
	file_academictoken_subject_tx_proto_init()
	md_MsgAddPrerequisiteGroup = File_academictoken_subject_tx_proto.Messages().ByName("MsgAddPrerequisiteGroup")
	fd_MsgAddPrerequisiteGroup_creator = md_MsgAddPrerequisiteGroup.Fields().ByName("creator")
	fd_MsgAddPrerequisiteGroup_subjectId = md_MsgAddPrerequisiteGroup.Fields().ByName("subjectId")
	fd_MsgAddPrerequisiteGroup_groupType = md_MsgAddPrerequisiteGroup.Fields().ByName("groupType")
	fd_MsgAddPrerequisiteGroup_minimumCredits = md_MsgAddPrerequisiteGroup.Fields().ByName("minimumCredits")
	fd_MsgAddPrerequisiteGroup_minimumCompletedSubjects = md_MsgAddPrerequisiteGroup.Fields().ByName("minimumCompletedSubjects")
	fd_MsgAddPrerequisiteGroup_subjectIds = md_MsgAddPrerequisiteGroup.Fields().ByName("subjectIds")
}

var _ protoreflect.Message = (*fastReflection_MsgAddPrerequisiteGroup)(nil)

type fastReflection_MsgAddPrerequisiteGroup MsgAddPrerequisiteGroup

func (x *MsgAddPrerequisiteGroup) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgAddPrerequisiteGroup)(x)
}

func (x *MsgAddPrerequisiteGroup) slowProtoReflect() protoreflect.Message {
	mi := &file_academictoken_subject_tx_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgAddPrerequisiteGroup_messageType fastReflection_MsgAddPrerequisiteGroup_messageType
var _ protoreflect.MessageType = fastReflection_MsgAddPrerequisiteGroup_messageType{}

type fastReflection_MsgAddPrerequisiteGroup_messageType struct{}

func (x fastReflection_MsgAddPrerequisiteGroup_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgAddPrerequisiteGroup)(nil)
}
func (x fastReflection_MsgAddPrerequisiteGroup_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgAddPrerequisiteGroup)
}
func (x fastReflection_MsgAddPrerequisiteGroup_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgAddPrerequisiteGroup
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgAddPrerequisiteGroup) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgAddPrerequisiteGroup
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgAddPrerequisiteGroup) Type() protoreflect.MessageType {
	return _fastReflection_MsgAddPrerequisiteGroup_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgAddPrerequisiteGroup) New() protoreflect.Message {
	return new(fastReflection_MsgAddPrerequisiteGroup)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgAddPrerequisiteGroup) Interface() protoreflect.ProtoMessage {
	return (*MsgAddPrerequisiteGroup)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgAddPrerequisiteGroup) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Creator != "" {
		value := protoreflect.ValueOfString(x.Creator)
		if !f(fd_MsgAddPrerequisiteGroup_creator, value) {
			return
		}
	}
	if x.SubjectId != "" {
		value := protoreflect.ValueOfString(x.SubjectId)
		if !f(fd_MsgAddPrerequisiteGroup_subjectId, value) {
			return
		}
	}
	if x.GroupType != "" {
		value := protoreflect.ValueOfString(x.GroupType)
		if !f(fd_MsgAddPrerequisiteGroup_groupType, value) {
			return
		}
	}
	if x.MinimumCredits != uint64(0) {
		value := protoreflect.ValueOfUint64(x.MinimumCredits)
		if !f(fd_MsgAddPrerequisiteGroup_minimumCredits, value) {
			return
		}
	}
	if x.MinimumCompletedSubjects != uint64(0) {
		value := protoreflect.ValueOfUint64(x.MinimumCompletedSubjects)
		if !f(fd_MsgAddPrerequisiteGroup_minimumCompletedSubjects, value) {
			return
		}
	}
	if len(x.SubjectIds) != 0 {
		value := protoreflect.ValueOfList(&_MsgAddPrerequisiteGroup_6_list{list: &x.SubjectIds})
		if !f(fd_MsgAddPrerequisiteGroup_subjectIds, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgAddPrerequisiteGroup) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "academictoken.subject.MsgAddPrerequisiteGroup.creator":
		return x.Creator != ""
	case "academictoken.subject.MsgAddPrerequisiteGroup.subjectId":
		return x.SubjectId != ""
	case "academictoken.subject.MsgAddPrerequisiteGroup.groupType":
		return x.GroupType != ""
	case "academictoken.subject.MsgAddPrerequisiteGroup.minimumCredits":
		return x.MinimumCredits != uint64(0)
	case "academictoken.subject.MsgAddPrerequisiteGroup.minimumCompletedSubjects":
		return x.MinimumCompletedSubjects != uint64(0)
	case "academictoken.subject.MsgAddPrerequisiteGroup.subjectIds":
		return len(x.SubjectIds) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.subject.MsgAddPrerequisiteGroup"))
		}
		panic(fmt.Errorf("message academictoken.subject.MsgAddPrerequisiteGroup does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAddPrerequisiteGroup) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "academictoken.subject.MsgAddPrerequisiteGroup.creator":
		x.Creator = ""
	case "academictoken.subject.MsgAddPrerequisiteGroup.subjectId":
		x.SubjectId = ""
	case "academictoken.subject.MsgAddPrerequisiteGroup.groupType":
		x.GroupType = ""
	case "academictoken.subject.MsgAddPrerequisiteGroup.minimumCredits":
		x.MinimumCredits = uint64(0)
	case "academictoken.subject.MsgAddPrerequisiteGroup.minimumCompletedSubjects":
		x.MinimumCompletedSubjects = uint64(0)
	case "academictoken.subject.MsgAddPrerequisiteGroup.subjectIds":
		x.SubjectIds = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.subject.MsgAddPrerequisiteGroup"))
		}
		panic(fmt.Errorf("message academictoken.subject.MsgAddPrerequisiteGroup does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgAddPrerequisiteGroup) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "academictoken.subject.MsgAddPrerequisiteGroup.creator":
		value := x.Creator
		return protoreflect.ValueOfString(value)
	case "academictoken.subject.MsgAddPrerequisiteGroup.subjectId":
		value := x.SubjectId
		return protoreflect.ValueOfString(value)
	case "academictoken.subject.MsgAddPrerequisiteGroup.groupType":
		value := x.GroupType
		return protoreflect.ValueOfString(value)
	case "academictoken.subject.MsgAddPrerequisiteGroup.minimumCredits":
		value := x.MinimumCredits
		return protoreflect.ValueOfUint64(value)
	case "academictoken.subject.MsgAddPrerequisiteGroup.minimumCompletedSubjects":
		value := x.MinimumCompletedSubjects
		return protoreflect.ValueOfUint64(value)
	case "academictoken.subject.MsgAddPrerequisiteGroup.subjectIds":
		if len(x.SubjectIds) == 0 {
			return protoreflect.ValueOfList(&_MsgAddPrerequisiteGroup_6_list{})
		}
		listValue := &_MsgAddPrerequisiteGroup_6_list{list: &x.SubjectIds}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.subject.MsgAddPrerequisiteGroup"))
		}
		panic(fmt.Errorf("message academictoken.subject.MsgAddPrerequisiteGroup does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAddPrerequisiteGroup) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "academictoken.subject.MsgAddPrerequisiteGroup.creator":
		x.Creator = value.Interface().(string)
	case "academictoken.subject.MsgAddPrerequisiteGroup.subjectId":
		x.SubjectId = value.Interface().(string)
	case "academictoken.subject.MsgAddPrerequisiteGroup.groupType":
		x.GroupType = value.Interface().(string)
	case "academictoken.subject.MsgAddPrerequisiteGroup.minimumCredits":
		x.MinimumCredits = value.Uint()
	case "academictoken.subject.MsgAddPrerequisiteGroup.minimumCompletedSubjects":
		x.MinimumCompletedSubjects = value.Uint()
	case "academictoken.subject.MsgAddPrerequisiteGroup.subjectIds":
		lv := value.List()
		clv := lv.(*_MsgAddPrerequisiteGroup_6_list)
		x.SubjectIds = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.subject.MsgAddPrerequisiteGroup"))
		}
		panic(fmt.Errorf("message academictoken.subject.MsgAddPrerequisiteGroup does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAddPrerequisiteGroup) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "academictoken.subject.MsgAddPrerequisiteGroup.subjectIds":
		if x.SubjectIds == nil {
			x.SubjectIds = []string{}
		}
		value := &_MsgAddPrerequisiteGroup_6_list{list: &x.SubjectIds}
		return protoreflect.ValueOfList(value)
	case "academictoken.subject.MsgAddPrerequisiteGroup.creator":
		panic(fmt.Errorf("field creator of message academictoken.subject.MsgAddPrerequisiteGroup is not mutable"))
	case "academictoken.subject.MsgAddPrerequisiteGroup.subjectId":
		panic(fmt.Errorf("field subjectId of message academictoken.subject.MsgAddPrerequisiteGroup is not mutable"))
	case "academictoken.subject.MsgAddPrerequisiteGroup.groupType":
		panic(fmt.Errorf("field groupType of message academictoken.subject.MsgAddPrerequisiteGroup is not mutable"))
	case "academictoken.subject.MsgAddPrerequisiteGroup.minimumCredits":
		panic(fmt.Errorf("field minimumCredits of message academictoken.subject.MsgAddPrerequisiteGroup is not mutable"))
	case "academictoken.subject.MsgAddPrerequisiteGroup.minimumCompletedSubjects":
		panic(fmt.Errorf("field minimumCompletedSubjects of message academictoken.subject.MsgAddPrerequisiteGroup is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.subject.MsgAddPrerequisiteGroup"))
		}
		panic(fmt.Errorf("message academictoken.subject.MsgAddPrerequisiteGroup does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgAddPrerequisiteGroup) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "academictoken.subject.MsgAddPrerequisiteGroup.creator":
		return protoreflect.ValueOfString("")
	case "academictoken.subject.MsgAddPrerequisiteGroup.subjectId":
		return protoreflect.ValueOfString("")
	case "academictoken.subject.MsgAddPrerequisiteGroup.groupType":
		return protoreflect.ValueOfString("")
	case "academictoken.subject.MsgAddPrerequisiteGroup.minimumCredits":
		return protoreflect.ValueOfUint64(uint64(0))
	case "academictoken.subject.MsgAddPrerequisiteGroup.minimumCompletedSubjects":
		return protoreflect.ValueOfUint64(uint64(0))
	case "academictoken.subject.MsgAddPrerequisiteGroup.subjectIds":
		list := []string{}
		return protoreflect.ValueOfList(&_MsgAddPrerequisiteGroup_6_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.subject.MsgAddPrerequisiteGroup"))
		}
		panic(fmt.Errorf("message academictoken.subject.MsgAddPrerequisiteGroup does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgAddPrerequisiteGroup) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in academictoken.subject.MsgAddPrerequisiteGroup", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgAddPrerequisiteGroup) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAddPrerequisiteGroup) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgAddPrerequisiteGroup) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgAddPrerequisiteGroup) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgAddPrerequisiteGroup)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Creator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.SubjectId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.GroupType)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.MinimumCredits != 0 {
			n += 1 + runtime.Sov(uint64(x.MinimumCredits))
		}
		if x.MinimumCompletedSubjects != 0 {
			n += 1 + runtime.Sov(uint64(x.MinimumCompletedSubjects))
		}
		if len(x.SubjectIds) > 0 {
			for _, s := range x.SubjectIds {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgAddPrerequisiteGroup)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.SubjectIds) > 0 {
			for iNdEx := len(x.SubjectIds) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.SubjectIds[iNdEx])
				copy(dAtA[i:], x.SubjectIds[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.SubjectIds[iNdEx])))
				i--
				dAtA[i] = 0x32
			}
		}
		if x.MinimumCompletedSubjects != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.MinimumCompletedSubjects))
			i--
			dAtA[i] = 0x28
		}
		if x.MinimumCredits != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.MinimumCredits))
			i--
			dAtA[i] = 0x20
		}
		if len(x.GroupType) > 0 {
			i -= len(x.GroupType)
			copy(dAtA[i:], x.GroupType)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.GroupType)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.SubjectId) > 0 {
			i -= len(x.SubjectId)
			copy(dAtA[i:], x.SubjectId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.SubjectId)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Creator) > 0 {
			i -= len(x.Creator)
			copy(dAtA[i:], x.Creator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Creator)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgAddPrerequisiteGroup)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgAddPrerequisiteGroup: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgAddPrerequisiteGroup: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Creator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field SubjectId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.SubjectId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field GroupType", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.GroupType = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field MinimumCredits", wireType)
				}
				x.MinimumCredits = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.MinimumCredits |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 5:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field MinimumCompletedSubjects", wireType)
				}
				x.MinimumCompletedSubjects = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.MinimumCompletedSubjects |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field SubjectIds", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.SubjectIds = append(x.SubjectIds, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgAddPrerequisiteGroupResponse          protoreflect.MessageDescriptor
	fd_MsgAddPrerequisiteGroupResponse_group_id protoreflect.FieldDescriptor
)

func init() {
	file_academictoken_subject_tx_proto_init()
	md_MsgAddPrerequisiteGroupResponse = File_academictoken_subject_tx_proto.Messages().ByName("MsgAddPrerequisiteGroupResponse")
	fd_MsgAddPrerequisiteGroupResponse_group_id = md_MsgAddPrerequisiteGroupResponse.Fields().ByName("group_id")
}

var _ protoreflect.Message = (*fastReflection_MsgAddPrerequisiteGroupResponse)(nil)

type fastReflection_MsgAddPrerequisiteGroupResponse MsgAddPrerequisiteGroupResponse

func (x *MsgAddPrerequisiteGroupResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgAddPrerequisiteGroupResponse)(x)
}

func (x *MsgAddPrerequisiteGroupResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_academictoken_subject_tx_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgAddPrerequisiteGroupResponse_messageType fastReflection_MsgAddPrerequisiteGroupResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgAddPrerequisiteGroupResponse_messageType{}

type fastReflection_MsgAddPrerequisiteGroupResponse_messageType struct{}

func (x fastReflection_MsgAddPrerequisiteGroupResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgAddPrerequisiteGroupResponse)(nil)
}
func (x fastReflection_MsgAddPrerequisiteGroupResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgAddPrerequisiteGroupResponse)
}
func (x fastReflection_MsgAddPrerequisiteGroupResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgAddPrerequisiteGroupResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgAddPrerequisiteGroupResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgAddPrerequisiteGroupResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgAddPrerequisiteGroupResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgAddPrerequisiteGroupResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgAddPrerequisiteGroupResponse) New() protoreflect.Message {
	return new(fastReflection_MsgAddPrerequisiteGroupResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgAddPrerequisiteGroupResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgAddPrerequisiteGroupResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgAddPrerequisiteGroupResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.GroupId != "" {
		value := protoreflect.ValueOfString(x.GroupId)
		if !f(fd_MsgAddPrerequisiteGroupResponse_group_id, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgAddPrerequisiteGroupResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "academictoken.subject.MsgAddPrerequisiteGroupResponse.group_id":
		return x.GroupId != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.subject.MsgAddPrerequisiteGroupResponse"))
		}
		panic(fmt.Errorf("message academictoken.subject.MsgAddPrerequisiteGroupResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAddPrerequisiteGroupResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "academictoken.subject.MsgAddPrerequisiteGroupResponse.group_id":
		x.GroupId = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.subject.MsgAddPrerequisiteGroupResponse"))
		}
		panic(fmt.Errorf("message academictoken.subject.MsgAddPrerequisiteGroupResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgAddPrerequisiteGroupResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "academictoken.subject.MsgAddPrerequisiteGroupResponse.group_id":
		value := x.GroupId
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.subject.MsgAddPrerequisiteGroupResponse"))
		}
		panic(fmt.Errorf("message academictoken.subject.MsgAddPrerequisiteGroupResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAddPrerequisiteGroupResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "academictoken.subject.MsgAddPrerequisiteGroupResponse.group_id":
		x.GroupId = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.subject.MsgAddPrerequisiteGroupResponse"))
		}
		panic(fmt.Errorf("message academictoken.subject.MsgAddPrerequisiteGroupResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAddPrerequisiteGroupResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "academictoken.subject.MsgAddPrerequisiteGroupResponse.group_id":
		panic(fmt.Errorf("field group_id of message academictoken.subject.MsgAddPrerequisiteGroupResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.subject.MsgAddPrerequisiteGroupResponse"))
		}
		panic(fmt.Errorf("message academictoken.subject.MsgAddPrerequisiteGroupResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgAddPrerequisiteGroupResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "academictoken.subject.MsgAddPrerequisiteGroupResponse.group_id":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.subject.MsgAddPrerequisiteGroupResponse"))
		}
		panic(fmt.Errorf("message academictoken.subject.MsgAddPrerequisiteGroupResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgAddPrerequisiteGroupResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in academictoken.subject.MsgAddPrerequisiteGroupResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgAddPrerequisiteGroupResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAddPrerequisiteGroupResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgAddPrerequisiteGroupResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgAddPrerequisiteGroupResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgAddPrerequisiteGroupResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.GroupId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgAddPrerequisiteGroupResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.GroupId) > 0 {
			i -= len(x.GroupId)
			copy(dAtA[i:], x.GroupId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.GroupId)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgAddPrerequisiteGroupResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgAddPrerequisiteGroupResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgAddPrerequisiteGroupResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field GroupId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.GroupId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_MsgUpdateSubjectContent_3_list)(nil)

type _MsgUpdateSubjectContent_3_list struct {
	list *[]string
}

func (x *_MsgUpdateSubjectContent_3_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgUpdateSubjectContent_3_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_MsgUpdateSubjectContent_3_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_MsgUpdateSubjectContent_3_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgUpdateSubjectContent_3_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message MsgUpdateSubjectContent at list field Objectives as it is not of Message kind"))
}

func (x *_MsgUpdateSubjectContent_3_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_MsgUpdateSubjectContent_3_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_MsgUpdateSubjectContent_3_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_MsgUpdateSubjectContent_4_list)(nil)

type _MsgUpdateSubjectContent_4_list struct {
	list *[]string
}

func (x *_MsgUpdateSubjectContent_4_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgUpdateSubjectContent_4_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_MsgUpdateSubjectContent_4_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_MsgUpdateSubjectContent_4_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgUpdateSubjectContent_4_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message MsgUpdateSubjectContent at list field TopicUnits as it is not of Message kind"))
}

func (x *_MsgUpdateSubjectContent_4_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_MsgUpdateSubjectContent_4_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_MsgUpdateSubjectContent_4_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_MsgUpdateSubjectContent_5_list)(nil)

type _MsgUpdateSubjectContent_5_list struct {
	list *[]string
}

func (x *_MsgUpdateSubjectContent_5_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgUpdateSubjectContent_5_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_MsgUpdateSubjectContent_5_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_MsgUpdateSubjectContent_5_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgUpdateSubjectContent_5_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message MsgUpdateSubjectContent at list field Methodologies as it is not of Message kind"))
}

func (x *_MsgUpdateSubjectContent_5_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_MsgUpdateSubjectContent_5_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_MsgUpdateSubjectContent_5_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_MsgUpdateSubjectContent_6_list)(nil)

type _MsgUpdateSubjectContent_6_list struct {
	list *[]string
}

func (x *_MsgUpdateSubjectContent_6_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgUpdateSubjectContent_6_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_MsgUpdateSubjectContent_6_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_MsgUpdateSubjectContent_6_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgUpdateSubjectContent_6_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message MsgUpdateSubjectContent at list field EvaluationMethods as it is not of Message kind"))
}

func (x *_MsgUpdateSubjectContent_6_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_MsgUpdateSubjectContent_6_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_MsgUpdateSubjectContent_6_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_MsgUpdateSubjectContent_7_list)(nil)

type _MsgUpdateSubjectContent_7_list struct {
	list *[]string
}

func (x *_MsgUpdateSubjectContent_7_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgUpdateSubjectContent_7_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_MsgUpdateSubjectContent_7_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_MsgUpdateSubjectContent_7_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgUpdateSubjectContent_7_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message MsgUpdateSubjectContent at list field BibliographyBasic as it is not of Message kind"))
}

func (x *_MsgUpdateSubjectContent_7_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_MsgUpdateSubjectContent_7_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_MsgUpdateSubjectContent_7_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_MsgUpdateSubjectContent_8_list)(nil)

type _MsgUpdateSubjectContent_8_list struct {
	list *[]string
}

func (x *_MsgUpdateSubjectContent_8_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgUpdateSubjectContent_8_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_MsgUpdateSubjectContent_8_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_MsgUpdateSubjectContent_8_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgUpdateSubjectContent_8_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message MsgUpdateSubjectContent at list field BibliographyComplementary as it is not of Message kind"))
}

func (x *_MsgUpdateSubjectContent_8_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_MsgUpdateSubjectContent_8_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_MsgUpdateSubjectContent_8_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_MsgUpdateSubjectContent_9_list)(nil)

type _MsgUpdateSubjectContent_9_list struct {
	list *[]string
}

func (x *_MsgUpdateSubjectContent_9_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgUpdateSubjectContent_9_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_MsgUpdateSubjectContent_9_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_MsgUpdateSubjectContent_9_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgUpdateSubjectContent_9_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message MsgUpdateSubjectContent at list field Keywords as it is not of Message kind"))
}

func (x *_MsgUpdateSubjectContent_9_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_MsgUpdateSubjectContent_9_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_MsgUpdateSubjectContent_9_list) IsValid() bool {
	return x.list != nil
}

var (
	md_MsgUpdateSubjectContent                           protoreflect.MessageDescriptor
	fd_MsgUpdateSubjectContent_creator                   protoreflect.FieldDescriptor
	fd_MsgUpdateSubjectContent_subjectId                 protoreflect.FieldDescriptor
	fd_MsgUpdateSubjectContent_objectives                protoreflect.FieldDescriptor
	fd_MsgUpdateSubjectContent_topicUnits                protoreflect.FieldDescriptor
	fd_MsgUpdateSubjectContent_methodologies             protoreflect.FieldDescriptor
	fd_MsgUpdateSubjectContent_evaluationMethods         protoreflect.FieldDescriptor
	fd_MsgUpdateSubjectContent_bibliographyBasic         protoreflect.FieldDescriptor
	fd_MsgUpdateSubjectContent_bibliographyComplementary protoreflect.FieldDescriptor
	fd_MsgUpdateSubjectContent_keywords                  protoreflect.FieldDescriptor
	fd_MsgUpdateSubjectContent_contentHash               protoreflect.FieldDescriptor
	fd_MsgUpdateSubjectContent_ipfsLink                  protoreflect.FieldDescriptor
)

func init() {
	file_academictoken_subject_tx_proto_init()
	md_MsgUpdateSubjectContent = File_academictoken_subject_tx_proto.Messages().ByName("MsgUpdateSubjectContent")
	fd_MsgUpdateSubjectContent_creator = md_MsgUpdateSubjectContent.Fields().ByName("creator")
	fd_MsgUpdateSubjectContent_subjectId = md_MsgUpdateSubjectContent.Fields().ByName("subjectId")
	fd_MsgUpdateSubjectContent_objectives = md_MsgUpdateSubjectContent.Fields().ByName("objectives")
	fd_MsgUpdateSubjectContent_topicUnits = md_MsgUpdateSubjectContent.Fields().ByName("topicUnits")
	fd_MsgUpdateSubjectContent_methodologies = md_MsgUpdateSubjectContent.Fields().ByName("methodologies")
	fd_MsgUpdateSubjectContent_evaluationMethods = md_MsgUpdateSubjectContent.Fields().ByName("evaluationMethods")
	fd_MsgUpdateSubjectContent_bibliographyBasic = md_MsgUpdateSubjectContent.Fields().ByName("bibliographyBasic")
	fd_MsgUpdateSubjectContent_bibliographyComplementary = md_MsgUpdateSubjectContent.Fields().ByName("bibliographyComplementary")
	fd_MsgUpdateSubjectContent_keywords = md_MsgUpdateSubjectContent.Fields().ByName("keywords")
	fd_MsgUpdateSubjectContent_contentHash = md_MsgUpdateSubjectContent.Fields().ByName("contentHash")
	fd_MsgUpdateSubjectContent_ipfsLink = md_MsgUpdateSubjectContent.Fields().ByName("ipfsLink")
}

var _ protoreflect.Message = (*fastReflection_MsgUpdateSubjectContent)(nil)

type fastReflection_MsgUpdateSubjectContent MsgUpdateSubjectContent

func (x *MsgUpdateSubjectContent) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgUpdateSubjectContent)(x)
}

func (x *MsgUpdateSubjectContent) slowProtoReflect() protoreflect.Message {
	mi := &file_academictoken_subject_tx_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgUpdateSubjectContent_messageType fastReflection_MsgUpdateSubjectContent_messageType
var _ protoreflect.MessageType = fastReflection_MsgUpdateSubjectContent_messageType{}

type fastReflection_MsgUpdateSubjectContent_messageType struct{}

func (x fastReflection_MsgUpdateSubjectContent_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgUpdateSubjectContent)(nil)
}
func (x fastReflection_MsgUpdateSubjectContent_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgUpdateSubjectContent)
}
func (x fastReflection_MsgUpdateSubjectContent_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUpdateSubjectContent
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgUpdateSubjectContent) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUpdateSubjectContent
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgUpdateSubjectContent) Type() protoreflect.MessageType {
	return _fastReflection_MsgUpdateSubjectContent_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgUpdateSubjectContent) New() protoreflect.Message {
	return new(fastReflection_MsgUpdateSubjectContent)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgUpdateSubjectContent) Interface() protoreflect.ProtoMessage {
	return (*MsgUpdateSubjectContent)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgUpdateSubjectContent) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Creator != "" {
		value := protoreflect.ValueOfString(x.Creator)
		if !f(fd_MsgUpdateSubjectContent_creator, value) {
			return
		}
	}
	if x.SubjectId != "" {
		value := protoreflect.ValueOfString(x.SubjectId)
		if !f(fd_MsgUpdateSubjectContent_subjectId, value) {
			return
		}
	}
	if len(x.Objectives) != 0 {
		value := protoreflect.ValueOfList(&_MsgUpdateSubjectContent_3_list{list: &x.Objectives})
		if !f(fd_MsgUpdateSubjectContent_objectives, value) {
			return
		}
	}
	if len(x.TopicUnits) != 0 {
		value := protoreflect.ValueOfList(&_MsgUpdateSubjectContent_4_list{list: &x.TopicUnits})
		if !f(fd_MsgUpdateSubjectContent_topicUnits, value) {
			return
		}
	}
	if len(x.Methodologies) != 0 {
		value := protoreflect.ValueOfList(&_MsgUpdateSubjectContent_5_list{list: &x.Methodologies})
		if !f(fd_MsgUpdateSubjectContent_methodologies, value) {
			return
		}
	}
	if len(x.EvaluationMethods) != 0 {
		value := protoreflect.ValueOfList(&_MsgUpdateSubjectContent_6_list{list: &x.EvaluationMethods})
		if !f(fd_MsgUpdateSubjectContent_evaluationMethods, value) {
			return
		}
	}
	if len(x.BibliographyBasic) != 0 {
		value := protoreflect.ValueOfList(&_MsgUpdateSubjectContent_7_list{list: &x.BibliographyBasic})
		if !f(fd_MsgUpdateSubjectContent_bibliographyBasic, value) {
			return
		}
	}
	if len(x.BibliographyComplementary) != 0 {
		value := protoreflect.ValueOfList(&_MsgUpdateSubjectContent_8_list{list: &x.BibliographyComplementary})
		if !f(fd_MsgUpdateSubjectContent_bibliographyComplementary, value) {
			return
		}
	}
	if len(x.Keywords) != 0 {
		value := protoreflect.ValueOfList(&_MsgUpdateSubjectContent_9_list{list: &x.Keywords})
		if !f(fd_MsgUpdateSubjectContent_keywords, value) {
			return
		}
	}
	if x.ContentHash != "" {
		value := protoreflect.ValueOfString(x.ContentHash)
		if !f(fd_MsgUpdateSubjectContent_contentHash, value) {
			return
		}
	}
	if x.IpfsLink != "" {
		value := protoreflect.ValueOfString(x.IpfsLink)
		if !f(fd_MsgUpdateSubjectContent_ipfsLink, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgUpdateSubjectContent) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "academictoken.subject.MsgUpdateSubjectContent.creator":
		return x.Creator != ""
	case "academictoken.subject.MsgUpdateSubjectContent.subjectId":
		return x.SubjectId != ""
	case "academictoken.subject.MsgUpdateSubjectContent.objectives":
		return len(x.Objectives) != 0
	case "academictoken.subject.MsgUpdateSubjectContent.topicUnits":
		return len(x.TopicUnits) != 0
	case "academictoken.subject.MsgUpdateSubjectContent.methodologies":
		return len(x.Methodologies) != 0
	case "academictoken.subject.MsgUpdateSubjectContent.evaluationMethods":
		return len(x.EvaluationMethods) != 0
	case "academictoken.subject.MsgUpdateSubjectContent.bibliographyBasic":
		return len(x.BibliographyBasic) != 0
	case "academictoken.subject.MsgUpdateSubjectContent.bibliographyComplementary":
		return len(x.BibliographyComplementary) != 0
	case "academictoken.subject.MsgUpdateSubjectContent.keywords":
		return len(x.Keywords) != 0
	case "academictoken.subject.MsgUpdateSubjectContent.contentHash":
		return x.ContentHash != ""
	case "academictoken.subject.MsgUpdateSubjectContent.ipfsLink":
		return x.IpfsLink != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.subject.MsgUpdateSubjectContent"))
		}
		panic(fmt.Errorf("message academictoken.subject.MsgUpdateSubjectContent does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateSubjectContent) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "academictoken.subject.MsgUpdateSubjectContent.creator":
		x.Creator = ""
	case "academictoken.subject.MsgUpdateSubjectContent.subjectId":
		x.SubjectId = ""
	case "academictoken.subject.MsgUpdateSubjectContent.objectives":
		x.Objectives = nil
	case "academictoken.subject.MsgUpdateSubjectContent.topicUnits":
		x.TopicUnits = nil
	case "academictoken.subject.MsgUpdateSubjectContent.methodologies":
		x.Methodologies = nil
	case "academictoken.subject.MsgUpdateSubjectContent.evaluationMethods":
		x.EvaluationMethods = nil
	case "academictoken.subject.MsgUpdateSubjectContent.bibliographyBasic":
		x.BibliographyBasic = nil
	case "academictoken.subject.MsgUpdateSubjectContent.bibliographyComplementary":
		x.BibliographyComplementary = nil
	case "academictoken.subject.MsgUpdateSubjectContent.keywords":
		x.Keywords = nil
	case "academictoken.subject.MsgUpdateSubjectContent.contentHash":
		x.ContentHash = ""
	case "academictoken.subject.MsgUpdateSubjectContent.ipfsLink":
		x.IpfsLink = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.subject.MsgUpdateSubjectContent"))
		}
		panic(fmt.Errorf("message academictoken.subject.MsgUpdateSubjectContent does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgUpdateSubjectContent) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "academictoken.subject.MsgUpdateSubjectContent.creator":
		value := x.Creator
		return protoreflect.ValueOfString(value)
	case "academictoken.subject.MsgUpdateSubjectContent.subjectId":
		value := x.SubjectId
		return protoreflect.ValueOfString(value)
	case "academictoken.subject.MsgUpdateSubjectContent.objectives":
		if len(x.Objectives) == 0 {
			return protoreflect.ValueOfList(&_MsgUpdateSubjectContent_3_list{})
		}
		listValue := &_MsgUpdateSubjectContent_3_list{list: &x.Objectives}
		return protoreflect.ValueOfList(listValue)
	case "academictoken.subject.MsgUpdateSubjectContent.topicUnits":
		if len(x.TopicUnits) == 0 {
			return protoreflect.ValueOfList(&_MsgUpdateSubjectContent_4_list{})
		}
		listValue := &_MsgUpdateSubjectContent_4_list{list: &x.TopicUnits}
		return protoreflect.ValueOfList(listValue)
	case "academictoken.subject.MsgUpdateSubjectContent.methodologies":
		if len(x.Methodologies) == 0 {
			return protoreflect.ValueOfList(&_MsgUpdateSubjectContent_5_list{})
		}
		listValue := &_MsgUpdateSubjectContent_5_list{list: &x.Methodologies}
		return protoreflect.ValueOfList(listValue)
	case "academictoken.subject.MsgUpdateSubjectContent.evaluationMethods":
		if len(x.EvaluationMethods) == 0 {
			return protoreflect.ValueOfList(&_MsgUpdateSubjectContent_6_list{})
		}
		listValue := &_MsgUpdateSubjectContent_6_list{list: &x.EvaluationMethods}
		return protoreflect.ValueOfList(listValue)
	case "academictoken.subject.MsgUpdateSubjectContent.bibliographyBasic":
		if len(x.BibliographyBasic) == 0 {
			return protoreflect.ValueOfList(&_MsgUpdateSubjectContent_7_list{})
		}
		listValue := &_MsgUpdateSubjectContent_7_list{list: &x.BibliographyBasic}
		return protoreflect.ValueOfList(listValue)
	case "academictoken.subject.MsgUpdateSubjectContent.bibliographyComplementary":
		if len(x.BibliographyComplementary) == 0 {
			return protoreflect.ValueOfList(&_MsgUpdateSubjectContent_8_list{})
		}
		listValue := &_MsgUpdateSubjectContent_8_list{list: &x.BibliographyComplementary}
		return protoreflect.ValueOfList(listValue)
	case "academictoken.subject.MsgUpdateSubjectContent.keywords":
		if len(x.Keywords) == 0 {
			return protoreflect.ValueOfList(&_MsgUpdateSubjectContent_9_list{})
		}
		listValue := &_MsgUpdateSubjectContent_9_list{list: &x.Keywords}
		return protoreflect.ValueOfList(listValue)
	case "academictoken.subject.MsgUpdateSubjectContent.contentHash":
		value := x.ContentHash
		return protoreflect.ValueOfString(value)
	case "academictoken.subject.MsgUpdateSubjectContent.ipfsLink":
		value := x.IpfsLink
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.subject.MsgUpdateSubjectContent"))
		}
		panic(fmt.Errorf("message academictoken.subject.MsgUpdateSubjectContent does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateSubjectContent) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "academictoken.subject.MsgUpdateSubjectContent.creator":
		x.Creator = value.Interface().(string)
	case "academictoken.subject.MsgUpdateSubjectContent.subjectId":
		x.SubjectId = value.Interface().(string)
	case "academictoken.subject.MsgUpdateSubjectContent.objectives":
		lv := value.List()
		clv := lv.(*_MsgUpdateSubjectContent_3_list)
		x.Objectives = *clv.list
	case "academictoken.subject.MsgUpdateSubjectContent.topicUnits":
		lv := value.List()
		clv := lv.(*_MsgUpdateSubjectContent_4_list)
		x.TopicUnits = *clv.list
	case "academictoken.subject.MsgUpdateSubjectContent.methodologies":
		lv := value.List()
		clv := lv.(*_MsgUpdateSubjectContent_5_list)
		x.Methodologies = *clv.list
	case "academictoken.subject.MsgUpdateSubjectContent.evaluationMethods":
		lv := value.List()
		clv := lv.(*_MsgUpdateSubjectContent_6_list)
		x.EvaluationMethods = *clv.list
	case "academictoken.subject.MsgUpdateSubjectContent.bibliographyBasic":
		lv := value.List()
		clv := lv.(*_MsgUpdateSubjectContent_7_list)
		x.BibliographyBasic = *clv.list
	case "academictoken.subject.MsgUpdateSubjectContent.bibliographyComplementary":
		lv := value.List()
		clv := lv.(*_MsgUpdateSubjectContent_8_list)
		x.BibliographyComplementary = *clv.list
	case "academictoken.subject.MsgUpdateSubjectContent.keywords":
		lv := value.List()
		clv := lv.(*_MsgUpdateSubjectContent_9_list)
		x.Keywords = *clv.list
	case "academictoken.subject.MsgUpdateSubjectContent.contentHash":
		x.ContentHash = value.Interface().(string)
	case "academictoken.subject.MsgUpdateSubjectContent.ipfsLink":
		x.IpfsLink = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.subject.MsgUpdateSubjectContent"))
		}
		panic(fmt.Errorf("message academictoken.subject.MsgUpdateSubjectContent does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateSubjectContent) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "academictoken.subject.MsgUpdateSubjectContent.objectives":
		if x.Objectives == nil {
			x.Objectives = []string{}
		}
		value := &_MsgUpdateSubjectContent_3_list{list: &x.Objectives}
		return protoreflect.ValueOfList(value)
	case "academictoken.subject.MsgUpdateSubjectContent.topicUnits":
		if x.TopicUnits == nil {
			x.TopicUnits = []string{}
		}
		value := &_MsgUpdateSubjectContent_4_list{list: &x.TopicUnits}
		return protoreflect.ValueOfList(value)
	case "academictoken.subject.MsgUpdateSubjectContent.methodologies":
		if x.Methodologies == nil {
			x.Methodologies = []string{}
		}
		value := &_MsgUpdateSubjectContent_5_list{list: &x.Methodologies}
		return protoreflect.ValueOfList(value)
	case "academictoken.subject.MsgUpdateSubjectContent.evaluationMethods":
		if x.EvaluationMethods == nil {
			x.EvaluationMethods = []string{}
		}
		value := &_MsgUpdateSubjectContent_6_list{list: &x.EvaluationMethods}
		return protoreflect.ValueOfList(value)
	case "academictoken.subject.MsgUpdateSubjectContent.bibliographyBasic":
		if x.BibliographyBasic == nil {
			x.BibliographyBasic = []string{}
		}
		value := &_MsgUpdateSubjectContent_7_list{list: &x.BibliographyBasic}
		return protoreflect.ValueOfList(value)
	case "academictoken.subject.MsgUpdateSubjectContent.bibliographyComplementary":
		if x.BibliographyComplementary == nil {
			x.BibliographyComplementary = []string{}
		}
		value := &_MsgUpdateSubjectContent_8_list{list: &x.BibliographyComplementary}
		return protoreflect.ValueOfList(value)
	case "academictoken.subject.MsgUpdateSubjectContent.keywords":
		if x.Keywords == nil {
			x.Keywords = []string{}
		}
		value := &_MsgUpdateSubjectContent_9_list{list: &x.Keywords}
		return protoreflect.ValueOfList(value)
	case "academictoken.subject.MsgUpdateSubjectContent.creator":
		panic(fmt.Errorf("field creator of message academictoken.subject.MsgUpdateSubjectContent is not mutable"))
	case "academictoken.subject.MsgUpdateSubjectContent.subjectId":
		panic(fmt.Errorf("field subjectId of message academictoken.subject.MsgUpdateSubjectContent is not mutable"))
	case "academictoken.subject.MsgUpdateSubjectContent.contentHash":
		panic(fmt.Errorf("field contentHash of message academictoken.subject.MsgUpdateSubjectContent is not mutable"))
	case "academictoken.subject.MsgUpdateSubjectContent.ipfsLink":
		panic(fmt.Errorf("field ipfsLink of message academictoken.subject.MsgUpdateSubjectContent is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.subject.MsgUpdateSubjectContent"))
		}
		panic(fmt.Errorf("message academictoken.subject.MsgUpdateSubjectContent does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgUpdateSubjectContent) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "academictoken.subject.MsgUpdateSubjectContent.creator":
		return protoreflect.ValueOfString("")
	case "academictoken.subject.MsgUpdateSubjectContent.subjectId":
		return protoreflect.ValueOfString("")
	case "academictoken.subject.MsgUpdateSubjectContent.objectives":
		list := []string{}
		return protoreflect.ValueOfList(&_MsgUpdateSubjectContent_3_list{list: &list})
	case "academictoken.subject.MsgUpdateSubjectContent.topicUnits":
		list := []string{}
		return protoreflect.ValueOfList(&_MsgUpdateSubjectContent_4_list{list: &list})
	case "academictoken.subject.MsgUpdateSubjectContent.methodologies":
		list := []string{}
		return protoreflect.ValueOfList(&_MsgUpdateSubjectContent_5_list{list: &list})
	case "academictoken.subject.MsgUpdateSubjectContent.evaluationMethods":
		list := []string{}
		return protoreflect.ValueOfList(&_MsgUpdateSubjectContent_6_list{list: &list})
	case "academictoken.subject.MsgUpdateSubjectContent.bibliographyBasic":
		list := []string{}
		return protoreflect.ValueOfList(&_MsgUpdateSubjectContent_7_list{list: &list})
	case "academictoken.subject.MsgUpdateSubjectContent.bibliographyComplementary":
		list := []string{}
		return protoreflect.ValueOfList(&_MsgUpdateSubjectContent_8_list{list: &list})
	case "academictoken.subject.MsgUpdateSubjectContent.keywords":
		list := []string{}
		return protoreflect.ValueOfList(&_MsgUpdateSubjectContent_9_list{list: &list})
	case "academictoken.subject.MsgUpdateSubjectContent.contentHash":
		return protoreflect.ValueOfString("")
	case "academictoken.subject.MsgUpdateSubjectContent.ipfsLink":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.subject.MsgUpdateSubjectContent"))
		}
		panic(fmt.Errorf("message academictoken.subject.MsgUpdateSubjectContent does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgUpdateSubjectContent) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in academictoken.subject.MsgUpdateSubjectContent", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgUpdateSubjectContent) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateSubjectContent) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgUpdateSubjectContent) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgUpdateSubjectContent) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgUpdateSubjectContent)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Creator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.SubjectId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.Objectives) > 0 {
			for _, s := range x.Objectives {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.TopicUnits) > 0 {
			for _, s := range x.TopicUnits {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.Methodologies) > 0 {
			for _, s := range x.Methodologies {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.EvaluationMethods) > 0 {
			for _, s := range x.EvaluationMethods {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.BibliographyBasic) > 0 {
			for _, s := range x.BibliographyBasic {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.BibliographyComplementary) > 0 {
			for _, s := range x.BibliographyComplementary {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.Keywords) > 0 {
			for _, s := range x.Keywords {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		l = len(x.ContentHash)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.IpfsLink)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgUpdateSubjectContent)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.IpfsLink) > 0 {
			i -= len(x.IpfsLink)
			copy(dAtA[i:], x.IpfsLink)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.IpfsLink)))
			i--
			dAtA[i] = 0x5a
		}
		if len(x.ContentHash) > 0 {
			i -= len(x.ContentHash)
			copy(dAtA[i:], x.ContentHash)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ContentHash)))
			i--
			dAtA[i] = 0x52
		}
		if len(x.Keywords) > 0 {
			for iNdEx := len(x.Keywords) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.Keywords[iNdEx])
				copy(dAtA[i:], x.Keywords[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Keywords[iNdEx])))
				i--
				dAtA[i] = 0x4a
			}
		}
		if len(x.BibliographyComplementary) > 0 {
			for iNdEx := len(x.BibliographyComplementary) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.BibliographyComplementary[iNdEx])
				copy(dAtA[i:], x.BibliographyComplementary[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.BibliographyComplementary[iNdEx])))
				i--
				dAtA[i] = 0x42
			}
		}
		if len(x.BibliographyBasic) > 0 {
			for iNdEx := len(x.BibliographyBasic) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.BibliographyBasic[iNdEx])
				copy(dAtA[i:], x.BibliographyBasic[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.BibliographyBasic[iNdEx])))
				i--
				dAtA[i] = 0x3a
			}
		}
		if len(x.EvaluationMethods) > 0 {
			for iNdEx := len(x.EvaluationMethods) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.EvaluationMethods[iNdEx])
				copy(dAtA[i:], x.EvaluationMethods[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.EvaluationMethods[iNdEx])))
				i--
				dAtA[i] = 0x32
			}
		}
		if len(x.Methodologies) > 0 {
			for iNdEx := len(x.Methodologies) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.Methodologies[iNdEx])
				copy(dAtA[i:], x.Methodologies[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Methodologies[iNdEx])))
				i--
				dAtA[i] = 0x2a
			}
		}
		if len(x.TopicUnits) > 0 {
			for iNdEx := len(x.TopicUnits) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.TopicUnits[iNdEx])
				copy(dAtA[i:], x.TopicUnits[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.TopicUnits[iNdEx])))
				i--
				dAtA[i] = 0x22
			}
		}
		if len(x.Objectives) > 0 {
			for iNdEx := len(x.Objectives) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.Objectives[iNdEx])
				copy(dAtA[i:], x.Objectives[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Objectives[iNdEx])))
				i--
				dAtA[i] = 0x1a
			}
		}
		if len(x.SubjectId) > 0 {
			i -= len(x.SubjectId)
			copy(dAtA[i:], x.SubjectId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.SubjectId)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Creator) > 0 {
			i -= len(x.Creator)
			copy(dAtA[i:], x.Creator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Creator)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgUpdateSubjectContent)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUpdateSubjectContent: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUpdateSubjectContent: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Creator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field SubjectId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.SubjectId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Objectives", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Objectives = append(x.Objectives, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicUnits", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TopicUnits = append(x.TopicUnits, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Methodologies", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Methodologies = append(x.Methodologies, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EvaluationMethods", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.EvaluationMethods = append(x.EvaluationMethods, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			case 7:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BibliographyBasic", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.BibliographyBasic = append(x.BibliographyBasic, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			case 8:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BibliographyComplementary", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.BibliographyComplementary = append(x.BibliographyComplementary, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			case 9:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Keywords", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Keywords = append(x.Keywords, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			case 10:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ContentHash", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ContentHash = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 11:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field IpfsLink", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.IpfsLink = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgUpdateSubjectContentResponse              protoreflect.MessageDescriptor
	fd_MsgUpdateSubjectContentResponse_content_hash protoreflect.FieldDescriptor
	fd_MsgUpdateSubjectContentResponse_ipfs_link    protoreflect.FieldDescriptor
)

func init() {
	file_academictoken_subject_tx_proto_init()
	md_MsgUpdateSubjectContentResponse = File_academictoken_subject_tx_proto.Messages().ByName("MsgUpdateSubjectContentResponse")
	fd_MsgUpdateSubjectContentResponse_content_hash = md_MsgUpdateSubjectContentResponse.Fields().ByName("content_hash")
	fd_MsgUpdateSubjectContentResponse_ipfs_link = md_MsgUpdateSubjectContentResponse.Fields().ByName("ipfs_link")
}

var _ protoreflect.Message = (*fastReflection_MsgUpdateSubjectContentResponse)(nil)

type fastReflection_MsgUpdateSubjectContentResponse MsgUpdateSubjectContentResponse

func (x *MsgUpdateSubjectContentResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgUpdateSubjectContentResponse)(x)
}

func (x *MsgUpdateSubjectContentResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_academictoken_subject_tx_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgUpdateSubjectContentResponse_messageType fastReflection_MsgUpdateSubjectContentResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgUpdateSubjectContentResponse_messageType{}

type fastReflection_MsgUpdateSubjectContentResponse_messageType struct{}

func (x fastReflection_MsgUpdateSubjectContentResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgUpdateSubjectContentResponse)(nil)
}
func (x fastReflection_MsgUpdateSubjectContentResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgUpdateSubjectContentResponse)
}
func (x fastReflection_MsgUpdateSubjectContentResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUpdateSubjectContentResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgUpdateSubjectContentResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUpdateSubjectContentResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgUpdateSubjectContentResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgUpdateSubjectContentResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgUpdateSubjectContentResponse) New() protoreflect.Message {
	return new(fastReflection_MsgUpdateSubjectContentResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgUpdateSubjectContentResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgUpdateSubjectContentResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgUpdateSubjectContentResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.ContentHash != "" {
		value := protoreflect.ValueOfString(x.ContentHash)
		if !f(fd_MsgUpdateSubjectContentResponse_content_hash, value) {
			return
		}
	}
	if x.IpfsLink != "" {
		value := protoreflect.ValueOfString(x.IpfsLink)
		if !f(fd_MsgUpdateSubjectContentResponse_ipfs_link, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgUpdateSubjectContentResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "academictoken.subject.MsgUpdateSubjectContentResponse.content_hash":
		return x.ContentHash != ""
	case "academictoken.subject.MsgUpdateSubjectContentResponse.ipfs_link":
		return x.IpfsLink != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.subject.MsgUpdateSubjectContentResponse"))
		}
		panic(fmt.Errorf("message academictoken.subject.MsgUpdateSubjectContentResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateSubjectContentResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "academictoken.subject.MsgUpdateSubjectContentResponse.content_hash":
		x.ContentHash = ""
	case "academictoken.subject.MsgUpdateSubjectContentResponse.ipfs_link":
		x.IpfsLink = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.subject.MsgUpdateSubjectContentResponse"))
		}
		panic(fmt.Errorf("message academictoken.subject.MsgUpdateSubjectContentResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgUpdateSubjectContentResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "academictoken.subject.MsgUpdateSubjectContentResponse.content_hash":
		value := x.ContentHash
		return protoreflect.ValueOfString(value)
	case "academictoken.subject.MsgUpdateSubjectContentResponse.ipfs_link":
		value := x.IpfsLink
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.subject.MsgUpdateSubjectContentResponse"))
		}
		panic(fmt.Errorf("message academictoken.subject.MsgUpdateSubjectContentResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateSubjectContentResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "academictoken.subject.MsgUpdateSubjectContentResponse.content_hash":
		x.ContentHash = value.Interface().(string)
	case "academictoken.subject.MsgUpdateSubjectContentResponse.ipfs_link":
		x.IpfsLink = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.subject.MsgUpdateSubjectContentResponse"))
		}
		panic(fmt.Errorf("message academictoken.subject.MsgUpdateSubjectContentResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateSubjectContentResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "academictoken.subject.MsgUpdateSubjectContentResponse.content_hash":
		panic(fmt.Errorf("field content_hash of message academictoken.subject.MsgUpdateSubjectContentResponse is not mutable"))
	case "academictoken.subject.MsgUpdateSubjectContentResponse.ipfs_link":
		panic(fmt.Errorf("field ipfs_link of message academictoken.subject.MsgUpdateSubjectContentResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.subject.MsgUpdateSubjectContentResponse"))
		}
		panic(fmt.Errorf("message academictoken.subject.MsgUpdateSubjectContentResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgUpdateSubjectContentResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "academictoken.subject.MsgUpdateSubjectContentResponse.content_hash":
		return protoreflect.ValueOfString("")
	case "academictoken.subject.MsgUpdateSubjectContentResponse.ipfs_link":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: academictoken.subject.MsgUpdateSubjectContentResponse"))
		}
		panic(fmt.Errorf("message academictoken.subject.MsgUpdateSubjectContentResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgUpdateSubjectContentResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in academictoken.subject.MsgUpdateSubjectContentResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgUpdateSubjectContentResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateSubjectContentResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgUpdateSubjectContentResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgUpdateSubjectContentResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgUpdateSubjectContentResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.ContentHash)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.IpfsLink)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgUpdateSubjectContentResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.IpfsLink) > 0 {
			i -= len(x.IpfsLink)
			copy(dAtA[i:], x.IpfsLink)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.IpfsLink)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.ContentHash) > 0 {
			i -= len(x.ContentHash)
			copy(dAtA[i:], x.ContentHash)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ContentHash)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgUpdateSubjectContentResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUpdateSubjectContentResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUpdateSubjectContentResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ContentHash", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ContentHash = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field IpfsLink", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.IpfsLink = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: academictoken/subject/tx.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// MsgUpdateParams is the Msg/UpdateParams request type.
type MsgUpdateParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// authority is the address that controls the module (defaults to x/gov unless overwritten).
	Authority string `protobuf:"bytes,1,opt,name=authority,proto3" json:"authority,omitempty"` // params defines the module parameters to update.
	// NOTE: All parameters must be supplied.
	Params *Params `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *MsgUpdateParams) Reset() {
	*x = MsgUpdateParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_academictoken_subject_tx_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUpdateParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpdateParams) ProtoMessage() {}

// Deprecated: Use MsgUpdateParams.ProtoReflect.Descriptor instead.
func (*MsgUpdateParams) Descriptor() ([]byte, []int) {
	return file_academictoken_subject_tx_proto_rawDescGZIP(), []int{0}
}

func (x *MsgUpdateParams) GetAuthority() string {
	if x != nil {
		return x.Authority
	}
	return ""
}

func (x *MsgUpdateParams) GetParams() *Params {
	if x != nil {
		return x.Params
	}
	return nil
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
type MsgUpdateParamsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgUpdateParamsResponse) Reset() {
	*x = MsgUpdateParamsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_academictoken_subject_tx_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUpdateParamsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpdateParamsResponse) ProtoMessage() {}

// Deprecated: Use MsgUpdateParamsResponse.ProtoReflect.Descriptor instead.
func (*MsgUpdateParamsResponse) Descriptor() ([]byte, []int) {
	return file_academictoken_subject_tx_proto_rawDescGZIP(), []int{1}
}

type MsgCreateSubject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator       string   `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Institution   string   `protobuf:"bytes,2,opt,name=institution,proto3" json:"institution,omitempty"`
	CourseId      string   `protobuf:"bytes,3,opt,name=course_id,json=courseId,proto3" json:"course_id,omitempty"`
	Title         string   `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	Code          string   `protobuf:"bytes,5,opt,name=code,proto3" json:"code,omitempty"`
	WorkloadHours uint64   `protobuf:"varint,6,opt,name=workloadHours,proto3" json:"workloadHours,omitempty"`
	Credits       uint64   `protobuf:"varint,7,opt,name=credits,proto3" json:"credits,omitempty"`
	Description   string   `protobuf:"bytes,8,opt,name=description,proto3" json:"description,omitempty"`
	SubjectType   string   `protobuf:"bytes,9,opt,name=subjectType,proto3" json:"subjectType,omitempty"`
	KnowledgeArea string   `protobuf:"bytes,10,opt,name=knowledgeArea,proto3" json:"knowledgeArea,omitempty"`
	Objectives    []string `protobuf:"bytes,11,rep,name=objectives,proto3" json:"objectives,omitempty"`
	TopicUnits    []string `protobuf:"bytes,12,rep,name=topicUnits,proto3" json:"topicUnits,omitempty"`
}

func (x *MsgCreateSubject) Reset() {
	*x = MsgCreateSubject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_academictoken_subject_tx_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgCreateSubject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgCreateSubject) ProtoMessage() {}

// Deprecated: Use MsgCreateSubject.ProtoReflect.Descriptor instead.
func (*MsgCreateSubject) Descriptor() ([]byte, []int) {
	return file_academictoken_subject_tx_proto_rawDescGZIP(), []int{2}
}

func (x *MsgCreateSubject) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgCreateSubject) GetInstitution() string {
	if x != nil {
		return x.Institution
	}
	return ""
}

func (x *MsgCreateSubject) GetCourseId() string {
	if x != nil {
		return x.CourseId
	}
	return ""
}

func (x *MsgCreateSubject) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MsgCreateSubject) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *MsgCreateSubject) GetWorkloadHours() uint64 {
	if x != nil {
		return x.WorkloadHours
	}
	return 0
}

func (x *MsgCreateSubject) GetCredits() uint64 {
	if x != nil {
		return x.Credits
	}
	return 0
}

func (x *MsgCreateSubject) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MsgCreateSubject) GetSubjectType() string {
	if x != nil {
		return x.SubjectType
	}
	return ""
}

func (x *MsgCreateSubject) GetKnowledgeArea() string {
	if x != nil {
		return x.KnowledgeArea
	}
	return ""
}

func (x *MsgCreateSubject) GetObjectives() []string {
	if x != nil {
		return x.Objectives
	}
	return nil
}

func (x *MsgCreateSubject) GetTopicUnits() []string {
	if x != nil {
		return x.TopicUnits
	}
	return nil
}

type MsgCreateSubjectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index string `protobuf:"bytes,1,opt,name=index,proto3" json:"index,omitempty"`
}

func (x *MsgCreateSubjectResponse) Reset() {
	*x = MsgCreateSubjectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_academictoken_subject_tx_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgCreateSubjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgCreateSubjectResponse) ProtoMessage() {}

// Deprecated: Use MsgCreateSubjectResponse.ProtoReflect.Descriptor instead.
func (*MsgCreateSubjectResponse) Descriptor() ([]byte, []int) {
	return file_academictoken_subject_tx_proto_rawDescGZIP(), []int{3}
}

func (x *MsgCreateSubjectResponse) GetIndex() string {
	if x != nil {
		return x.Index
	}
	return ""
}

type MsgCreateSubjectContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator       string   `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Institution   string   `protobuf:"bytes,2,opt,name=institution,proto3" json:"institution,omitempty"`
	CourseId      string   `protobuf:"bytes,3,opt,name=course_id,json=courseId,proto3" json:"course_id,omitempty"`
	Title         string   `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	Code          string   `protobuf:"bytes,5,opt,name=code,proto3" json:"code,omitempty"`
	WorkloadHours uint64   `protobuf:"varint,6,opt,name=workloadHours,proto3" json:"workloadHours,omitempty"`
	Credits       uint64   `protobuf:"varint,7,opt,name=credits,proto3" json:"credits,omitempty"`
	Description   string   `protobuf:"bytes,8,opt,name=description,proto3" json:"description,omitempty"`
	SubjectType   string   `protobuf:"bytes,9,opt,name=subjectType,proto3" json:"subjectType,omitempty"`
	KnowledgeArea string   `protobuf:"bytes,10,opt,name=knowledgeArea,proto3" json:"knowledgeArea,omitempty"`
	Objectives    []string `protobuf:"bytes,11,rep,name=objectives,proto3" json:"objectives,omitempty"`
	TopicUnits    []string `protobuf:"bytes,12,rep,name=topicUnits,proto3" json:"topicUnits,omitempty"`
}

func (x *MsgCreateSubjectContent) Reset() {
	*x = MsgCreateSubjectContent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_academictoken_subject_tx_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgCreateSubjectContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgCreateSubjectContent) ProtoMessage() {}

// Deprecated: Use MsgCreateSubjectContent.ProtoReflect.Descriptor instead.
func (*MsgCreateSubjectContent) Descriptor() ([]byte, []int) {
	return file_academictoken_subject_tx_proto_rawDescGZIP(), []int{4}
}

func (x *MsgCreateSubjectContent) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgCreateSubjectContent) GetInstitution() string {
	if x != nil {
		return x.Institution
	}
	return ""
}

func (x *MsgCreateSubjectContent) GetCourseId() string {
	if x != nil {
		return x.CourseId
	}
	return ""
}

func (x *MsgCreateSubjectContent) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MsgCreateSubjectContent) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *MsgCreateSubjectContent) GetWorkloadHours() uint64 {
	if x != nil {
		return x.WorkloadHours
	}
	return 0
}

func (x *MsgCreateSubjectContent) GetCredits() uint64 {
	if x != nil {
		return x.Credits
	}
	return 0
}

func (x *MsgCreateSubjectContent) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MsgCreateSubjectContent) GetSubjectType() string {
	if x != nil {
		return x.SubjectType
	}
	return ""
}

func (x *MsgCreateSubjectContent) GetKnowledgeArea() string {
	if x != nil {
		return x.KnowledgeArea
	}
	return ""
}

func (x *MsgCreateSubjectContent) GetObjectives() []string {
	if x != nil {
		return x.Objectives
	}
	return nil
}

func (x *MsgCreateSubjectContent) GetTopicUnits() []string {
	if x != nil {
		return x.TopicUnits
	}
	return nil
}

type MsgCreateSubjectContentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index string `protobuf:"bytes,1,opt,name=index,proto3" json:"index,omitempty"`
}

func (x *MsgCreateSubjectContentResponse) Reset() {
	*x = MsgCreateSubjectContentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_academictoken_subject_tx_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgCreateSubjectContentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgCreateSubjectContentResponse) ProtoMessage() {}

// Deprecated: Use MsgCreateSubjectContentResponse.ProtoReflect.Descriptor instead.
func (*MsgCreateSubjectContentResponse) Descriptor() ([]byte, []int) {
	return file_academictoken_subject_tx_proto_rawDescGZIP(), []int{5}
}

func (x *MsgCreateSubjectContentResponse) GetIndex() string {
	if x != nil {
		return x.Index
	}
	return ""
}

type MsgAddPrerequisiteGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator                  string   `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	SubjectId                string   `protobuf:"bytes,2,opt,name=subjectId,proto3" json:"subjectId,omitempty"`
	GroupType                string   `protobuf:"bytes,3,opt,name=groupType,proto3" json:"groupType,omitempty"`
	MinimumCredits           uint64   `protobuf:"varint,4,opt,name=minimumCredits,proto3" json:"minimumCredits,omitempty"`
	MinimumCompletedSubjects uint64   `protobuf:"varint,5,opt,name=minimumCompletedSubjects,proto3" json:"minimumCompletedSubjects,omitempty"`
	SubjectIds               []string `protobuf:"bytes,6,rep,name=subjectIds,proto3" json:"subjectIds,omitempty"`
}

func (x *MsgAddPrerequisiteGroup) Reset() {
	*x = MsgAddPrerequisiteGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_academictoken_subject_tx_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgAddPrerequisiteGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgAddPrerequisiteGroup) ProtoMessage() {}

// Deprecated: Use MsgAddPrerequisiteGroup.ProtoReflect.Descriptor instead.
func (*MsgAddPrerequisiteGroup) Descriptor() ([]byte, []int) {
	return file_academictoken_subject_tx_proto_rawDescGZIP(), []int{6}
}

func (x *MsgAddPrerequisiteGroup) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgAddPrerequisiteGroup) GetSubjectId() string {
	if x != nil {
		return x.SubjectId
	}
	return ""
}

func (x *MsgAddPrerequisiteGroup) GetGroupType() string {
	if x != nil {
		return x.GroupType
	}
	return ""
}

func (x *MsgAddPrerequisiteGroup) GetMinimumCredits() uint64 {
	if x != nil {
		return x.MinimumCredits
	}
	return 0
}

func (x *MsgAddPrerequisiteGroup) GetMinimumCompletedSubjects() uint64 {
	if x != nil {
		return x.MinimumCompletedSubjects
	}
	return 0
}

func (x *MsgAddPrerequisiteGroup) GetSubjectIds() []string {
	if x != nil {
		return x.SubjectIds
	}
	return nil
}

type MsgAddPrerequisiteGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId string `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
}

func (x *MsgAddPrerequisiteGroupResponse) Reset() {
	*x = MsgAddPrerequisiteGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_academictoken_subject_tx_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgAddPrerequisiteGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgAddPrerequisiteGroupResponse) ProtoMessage() {}

// Deprecated: Use MsgAddPrerequisiteGroupResponse.ProtoReflect.Descriptor instead.
func (*MsgAddPrerequisiteGroupResponse) Descriptor() ([]byte, []int) {
	return file_academictoken_subject_tx_proto_rawDescGZIP(), []int{7}
}

func (x *MsgAddPrerequisiteGroupResponse) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

type MsgUpdateSubjectContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator                   string   `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	SubjectId                 string   `protobuf:"bytes,2,opt,name=subjectId,proto3" json:"subjectId,omitempty"`
	Objectives                []string `protobuf:"bytes,3,rep,name=objectives,proto3" json:"objectives,omitempty"`
	TopicUnits                []string `protobuf:"bytes,4,rep,name=topicUnits,proto3" json:"topicUnits,omitempty"`
	Methodologies             []string `protobuf:"bytes,5,rep,name=methodologies,proto3" json:"methodologies,omitempty"`
	EvaluationMethods         []string `protobuf:"bytes,6,rep,name=evaluationMethods,proto3" json:"evaluationMethods,omitempty"`
	BibliographyBasic         []string `protobuf:"bytes,7,rep,name=bibliographyBasic,proto3" json:"bibliographyBasic,omitempty"`
	BibliographyComplementary []string `protobuf:"bytes,8,rep,name=bibliographyComplementary,proto3" json:"bibliographyComplementary,omitempty"`
	Keywords                  []string `protobuf:"bytes,9,rep,name=keywords,proto3" json:"keywords,omitempty"`
	ContentHash               string   `protobuf:"bytes,10,opt,name=contentHash,proto3" json:"contentHash,omitempty"`
	IpfsLink                  string   `protobuf:"bytes,11,opt,name=ipfsLink,proto3" json:"ipfsLink,omitempty"`
}

func (x *MsgUpdateSubjectContent) Reset() {
	*x = MsgUpdateSubjectContent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_academictoken_subject_tx_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUpdateSubjectContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpdateSubjectContent) ProtoMessage() {}

// Deprecated: Use MsgUpdateSubjectContent.ProtoReflect.Descriptor instead.
func (*MsgUpdateSubjectContent) Descriptor() ([]byte, []int) {
	return file_academictoken_subject_tx_proto_rawDescGZIP(), []int{8}
}

func (x *MsgUpdateSubjectContent) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgUpdateSubjectContent) GetSubjectId() string {
	if x != nil {
		return x.SubjectId
	}
	return ""
}

func (x *MsgUpdateSubjectContent) GetObjectives() []string {
	if x != nil {
		return x.Objectives
	}
	return nil
}

func (x *MsgUpdateSubjectContent) GetTopicUnits() []string {
	if x != nil {
		return x.TopicUnits
	}
	return nil
}

func (x *MsgUpdateSubjectContent) GetMethodologies() []string {
	if x != nil {
		return x.Methodologies
	}
	return nil
}

func (x *MsgUpdateSubjectContent) GetEvaluationMethods() []string {
	if x != nil {
		return x.EvaluationMethods
	}
	return nil
}

func (x *MsgUpdateSubjectContent) GetBibliographyBasic() []string {
	if x != nil {
		return x.BibliographyBasic
	}
	return nil
}

func (x *MsgUpdateSubjectContent) GetBibliographyComplementary() []string {
	if x != nil {
		return x.BibliographyComplementary
	}
	return nil
}

func (x *MsgUpdateSubjectContent) GetKeywords() []string {
	if x != nil {
		return x.Keywords
	}
	return nil
}

func (x *MsgUpdateSubjectContent) GetContentHash() string {
	if x != nil {
		return x.ContentHash
	}
	return ""
}

func (x *MsgUpdateSubjectContent) GetIpfsLink() string {
	if x != nil {
		return x.IpfsLink
	}
	return ""
}

type MsgUpdateSubjectContentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContentHash string `protobuf:"bytes,1,opt,name=content_hash,json=contentHash,proto3" json:"content_hash,omitempty"`
	IpfsLink    string `protobuf:"bytes,2,opt,name=ipfs_link,json=ipfsLink,proto3" json:"ipfs_link,omitempty"`
}

func (x *MsgUpdateSubjectContentResponse) Reset() {
	*x = MsgUpdateSubjectContentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_academictoken_subject_tx_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUpdateSubjectContentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpdateSubjectContentResponse) ProtoMessage() {}

// Deprecated: Use MsgUpdateSubjectContentResponse.ProtoReflect.Descriptor instead.
func (*MsgUpdateSubjectContentResponse) Descriptor() ([]byte, []int) {
	return file_academictoken_subject_tx_proto_rawDescGZIP(), []int{9}
}

func (x *MsgUpdateSubjectContentResponse) GetContentHash() string {
	if x != nil {
		return x.ContentHash
	}
	return ""
}

func (x *MsgUpdateSubjectContentResponse) GetIpfsLink() string {
	if x != nil {
		return x.IpfsLink
	}
	return ""
}

var File_academictoken_subject_tx_proto protoreflect.FileDescriptor

var file_academictoken_subject_tx_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x61, 0x63, 0x61, 0x64, 0x65, 0x6d, 0x69, 0x63, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2f,
	0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x74, 0x78, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x15, 0x61, 0x63, 0x61, 0x64, 0x65, 0x6d, 0x69, 0x63, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e,
	0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x1a, 0x11, 0x61, 0x6d, 0x69, 0x6e, 0x6f, 0x2f, 0x61,
	0x6d, 0x69, 0x6e, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x63, 0x6f, 0x73, 0x6d,
	0x6f, 0x73, 0x2f, 0x6d, 0x73, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x73, 0x67, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14,
	0x67, 0x6f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x61, 0x63, 0x61, 0x64, 0x65, 0x6d, 0x69, 0x63, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x2f, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc7, 0x01, 0x0a, 0x0f, 0x4d, 0x73, 0x67,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x36, 0x0a, 0x09,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x18, 0xd2, 0xb4, 0x2d, 0x14, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x69, 0x74, 0x79, 0x12, 0x40, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x63, 0x61, 0x64, 0x65, 0x6d, 0x69, 0x63, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x42, 0x09, 0xc8, 0xde, 0x1f, 0x00, 0xa8, 0xe7, 0xb0, 0x2a, 0x01, 0x52, 0x06,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x3a, 0x3a, 0x82, 0xe7, 0xb0, 0x2a, 0x09, 0x61, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x8a, 0xe7, 0xb0, 0x2a, 0x27, 0x61, 0x63, 0x61, 0x64, 0x65,
	0x6d, 0x69, 0x63, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2f, 0x78, 0x2f, 0x73, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x2f, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x22, 0x19, 0x0a, 0x17, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x8d, 0x03,
	0x0a, 0x10, 0x4d, 0x73, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x20, 0x0a, 0x0b,
	0x69, 0x6e, 0x73, 0x74, 0x69, 0x74, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x69, 0x74, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b,
	0x0a, 0x09, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61,
	0x64, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x77, 0x6f,
	0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x72, 0x65, 0x64, 0x69, 0x74, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x63, 0x72,
	0x65, 0x64, 0x69, 0x74, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x6b, 0x6e, 0x6f,
	0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x41, 0x72, 0x65, 0x61, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x41, 0x72, 0x65, 0x61, 0x12,
	0x1e, 0x0a, 0x0a, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x73, 0x18, 0x0b, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x73, 0x12,
	0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x18, 0x0c, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x3a,
	0x0c, 0x82, 0xe7, 0xb0, 0x2a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x22, 0x30, 0x0a,
	0x18, 0x4d, 0x73, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22,
	0xc8, 0x03, 0x0a, 0x17, 0x4d, 0x73, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x69, 0x74, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6e, 0x73, 0x74,
	0x69, 0x74, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72,
	0x73, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x24,
	0x0a, 0x0d, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x48,
	0x6f, 0x75, 0x72, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x73, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x73, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x20, 0x0a, 0x0b, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x41,
	0x72, 0x65, 0x61, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6b, 0x6e, 0x6f, 0x77, 0x6c,
	0x65, 0x64, 0x67, 0x65, 0x41, 0x72, 0x65, 0x61, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x70, 0x69,
	0x63, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x6f,
	0x70, 0x69, 0x63, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x3a, 0x40, 0x82, 0xe7, 0xb0, 0x2a, 0x07, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x8a, 0xe7, 0xb0, 0x2a, 0x2f, 0x61, 0x63, 0x61, 0x64, 0x65,
	0x6d, 0x69, 0x63, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2f, 0x78, 0x2f, 0x73, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x2f, 0x4d, 0x73, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x37, 0x0a, 0x1f, 0x4d, 0x73,
	0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x22, 0x81, 0x02, 0x0a, 0x17, 0x4d, 0x73, 0x67, 0x41, 0x64, 0x64, 0x50, 0x72,
	0x65, 0x72, 0x65, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d,
	0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x6d,
	0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x73, 0x12, 0x3a, 0x0a,
	0x18, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x18, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x73,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x73, 0x3a, 0x0c, 0x82, 0xe7, 0xb0, 0x2a, 0x07,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x22, 0x3c, 0x0a, 0x1f, 0x4d, 0x73, 0x67, 0x41, 0x64,
	0x64, 0x50, 0x72, 0x65, 0x72, 0x65, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0xb9, 0x03, 0x0a, 0x17, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x70,
	0x69, 0x63, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x74,
	0x6f, 0x70, 0x69, 0x63, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x6f, 0x6c, 0x6f, 0x67, 0x69, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0d, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x6f, 0x6c, 0x6f, 0x67, 0x69, 0x65, 0x73, 0x12,
	0x2c, 0x0a, 0x11, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x11, 0x65, 0x76, 0x61, 0x6c,
	0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x12, 0x2c, 0x0a,
	0x11, 0x62, 0x69, 0x62, 0x6c, 0x69, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x79, 0x42, 0x61, 0x73,
	0x69, 0x63, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x11, 0x62, 0x69, 0x62, 0x6c, 0x69, 0x6f,
	0x67, 0x72, 0x61, 0x70, 0x68, 0x79, 0x42, 0x61, 0x73, 0x69, 0x63, 0x12, 0x3c, 0x0a, 0x19, 0x62,
	0x69, 0x62, 0x6c, 0x69, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x72, 0x79, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x19,
	0x62, 0x69, 0x62, 0x6c, 0x69, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x79, 0x43, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x79,
	0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6b, 0x65, 0x79,
	0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x48, 0x61, 0x73, 0x68, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x70, 0x66, 0x73, 0x4c,
	0x69, 0x6e, 0x6b, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x70, 0x66, 0x73, 0x4c,
	0x69, 0x6e, 0x6b, 0x3a, 0x0c, 0x82, 0xe7, 0xb0, 0x2a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f,
	0x72, 0x22, 0x61, 0x0a, 0x1f, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f,
	0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x70, 0x66, 0x73, 0x5f,
	0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x70, 0x66, 0x73,
	0x4c, 0x69, 0x6e, 0x6b, 0x32, 0xdf, 0x04, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x12, 0x66, 0x0a, 0x0c,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x26, 0x2e, 0x61,
	0x63, 0x61, 0x64, 0x65, 0x6d, 0x69, 0x63, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x73, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x2e, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x1a, 0x2e, 0x2e, 0x61, 0x63, 0x61, 0x64, 0x65, 0x6d, 0x69, 0x63, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x4d, 0x73, 0x67,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x69, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x27, 0x2e, 0x61, 0x63, 0x61, 0x64, 0x65, 0x6d, 0x69, 0x63,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x4d, 0x73,
	0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x1a, 0x2f,
	0x2e, 0x61, 0x63, 0x61, 0x64, 0x65, 0x6d, 0x69, 0x63, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x73,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x4d, 0x73, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x7e, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x2e, 0x2e, 0x61, 0x63, 0x61, 0x64, 0x65, 0x6d,
	0x69, 0x63, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e,
	0x4d, 0x73, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x1a, 0x36, 0x2e, 0x61, 0x63, 0x61, 0x64, 0x65, 0x6d,
	0x69, 0x63, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e,
	0x4d, 0x73, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x7e, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x50, 0x72, 0x65, 0x72, 0x65, 0x71, 0x75, 0x69, 0x73, 0x69,
	0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x2e, 0x2e, 0x61, 0x63, 0x61, 0x64, 0x65, 0x6d,
	0x69, 0x63, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e,
	0x4d, 0x73, 0x67, 0x41, 0x64, 0x64, 0x50, 0x72, 0x65, 0x72, 0x65, 0x71, 0x75, 0x69, 0x73, 0x69,
	0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x1a, 0x36, 0x2e, 0x61, 0x63, 0x61, 0x64, 0x65, 0x6d,
	0x69, 0x63, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e,
	0x4d, 0x73, 0x67, 0x41, 0x64, 0x64, 0x50, 0x72, 0x65, 0x72, 0x65, 0x71, 0x75, 0x69, 0x73, 0x69,
	0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x7e, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x2e, 0x2e, 0x61, 0x63, 0x61, 0x64, 0x65, 0x6d,
	0x69, 0x63, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e,
	0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x1a, 0x36, 0x2e, 0x61, 0x63, 0x61, 0x64, 0x65, 0x6d,
	0x69, 0x63, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e,
	0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a,
	0x05, 0x80, 0xe7, 0xb0, 0x2a, 0x01, 0x42, 0xc2, 0x01, 0x0a, 0x19, 0x63, 0x6f, 0x6d, 0x2e, 0x61,
	0x63, 0x61, 0x64, 0x65, 0x6d, 0x69, 0x63, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x73, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x42, 0x07, 0x54, 0x78, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a,
	0x27, 0x61, 0x63, 0x61, 0x64, 0x65, 0x6d, 0x69, 0x63, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x61, 0x63, 0x61, 0x64, 0x65, 0x6d, 0x69, 0x63, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x2f, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0xa2, 0x02, 0x03, 0x41, 0x53, 0x58, 0xaa, 0x02,
	0x15, 0x41, 0x63, 0x61, 0x64, 0x65, 0x6d, 0x69, 0x63, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x53,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0xca, 0x02, 0x15, 0x41, 0x63, 0x61, 0x64, 0x65, 0x6d, 0x69,
	0x63, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5c, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0xe2, 0x02,
	0x21, 0x41, 0x63, 0x61, 0x64, 0x65, 0x6d, 0x69, 0x63, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5c, 0x53,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0xea, 0x02, 0x16, 0x41, 0x63, 0x61, 0x64, 0x65, 0x6d, 0x69, 0x63, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x3a, 0x3a, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_academictoken_subject_tx_proto_rawDescOnce sync.Once
	file_academictoken_subject_tx_proto_rawDescData = file_academictoken_subject_tx_proto_rawDesc
)

func file_academictoken_subject_tx_proto_rawDescGZIP() []byte {
	file_academictoken_subject_tx_proto_rawDescOnce.Do(func() {
		file_academictoken_subject_tx_proto_rawDescData = protoimpl.X.CompressGZIP(file_academictoken_subject_tx_proto_rawDescData)
	})
	return file_academictoken_subject_tx_proto_rawDescData
}

var file_academictoken_subject_tx_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_academictoken_subject_tx_proto_goTypes = []interface{}{
	(*MsgUpdateParams)(nil),                 // 0: academictoken.subject.MsgUpdateParams
	(*MsgUpdateParamsResponse)(nil),         // 1: academictoken.subject.MsgUpdateParamsResponse
	(*MsgCreateSubject)(nil),                // 2: academictoken.subject.MsgCreateSubject
	(*MsgCreateSubjectResponse)(nil),        // 3: academictoken.subject.MsgCreateSubjectResponse
	(*MsgCreateSubjectContent)(nil),         // 4: academictoken.subject.MsgCreateSubjectContent
	(*MsgCreateSubjectContentResponse)(nil), // 5: academictoken.subject.MsgCreateSubjectContentResponse
	(*MsgAddPrerequisiteGroup)(nil),         // 6: academictoken.subject.MsgAddPrerequisiteGroup
	(*MsgAddPrerequisiteGroupResponse)(nil), // 7: academictoken.subject.MsgAddPrerequisiteGroupResponse
	(*MsgUpdateSubjectContent)(nil),         // 8: academictoken.subject.MsgUpdateSubjectContent
	(*MsgUpdateSubjectContentResponse)(nil), // 9: academictoken.subject.MsgUpdateSubjectContentResponse
	(*Params)(nil),                          // 10: academictoken.subject.Params
}
var file_academictoken_subject_tx_proto_depIdxs = []int32{
	10, // 0: academictoken.subject.MsgUpdateParams.params:type_name -> academictoken.subject.Params
	0,  // 1: academictoken.subject.Msg.UpdateParams:input_type -> academictoken.subject.MsgUpdateParams
	2,  // 2: academictoken.subject.Msg.CreateSubject:input_type -> academictoken.subject.MsgCreateSubject
	4,  // 3: academictoken.subject.Msg.CreateSubjectContent:input_type -> academictoken.subject.MsgCreateSubjectContent
	6,  // 4: academictoken.subject.Msg.AddPrerequisiteGroup:input_type -> academictoken.subject.MsgAddPrerequisiteGroup
	8,  // 5: academictoken.subject.Msg.UpdateSubjectContent:input_type -> academictoken.subject.MsgUpdateSubjectContent
	1,  // 6: academictoken.subject.Msg.UpdateParams:output_type -> academictoken.subject.MsgUpdateParamsResponse
	3,  // 7: academictoken.subject.Msg.CreateSubject:output_type -> academictoken.subject.MsgCreateSubjectResponse
	5,  // 8: academictoken.subject.Msg.CreateSubjectContent:output_type -> academictoken.subject.MsgCreateSubjectContentResponse
	7,  // 9: academictoken.subject.Msg.AddPrerequisiteGroup:output_type -> academictoken.subject.MsgAddPrerequisiteGroupResponse
	9,  // 10: academictoken.subject.Msg.UpdateSubjectContent:output_type -> academictoken.subject.MsgUpdateSubjectContentResponse
	6,  // [6:11] is the sub-list for method output_type
	1,  // [1:6] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_academictoken_subject_tx_proto_init() }
func file_academictoken_subject_tx_proto_init() {
	if File_academictoken_subject_tx_proto != nil {
		return
	}
	file_academictoken_subject_params_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_academictoken_subject_tx_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUpdateParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_academictoken_subject_tx_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUpdateParamsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_academictoken_subject_tx_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgCreateSubject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_academictoken_subject_tx_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgCreateSubjectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_academictoken_subject_tx_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgCreateSubjectContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_academictoken_subject_tx_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgCreateSubjectContentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_academictoken_subject_tx_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgAddPrerequisiteGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_academictoken_subject_tx_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgAddPrerequisiteGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_academictoken_subject_tx_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUpdateSubjectContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_academictoken_subject_tx_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUpdateSubjectContentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_academictoken_subject_tx_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_academictoken_subject_tx_proto_goTypes,
		DependencyIndexes: file_academictoken_subject_tx_proto_depIdxs,
		MessageInfos:      file_academictoken_subject_tx_proto_msgTypes,
	}.Build()
	File_academictoken_subject_tx_proto = out.File
	file_academictoken_subject_tx_proto_rawDesc = nil
	file_academictoken_subject_tx_proto_goTypes = nil
	file_academictoken_subject_tx_proto_depIdxs = nil
}
