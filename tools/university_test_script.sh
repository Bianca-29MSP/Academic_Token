#!/bin/bash

# =============================================================================
# ACADEMIC TOKEN - UNIVERSITY TEST SCRIPT
# =============================================================================
# Este script simula o fluxo completo de uma institui√ß√£o de ensino no sistema
# AcademicToken, cadastrando uma universidade com curso completo de Ci√™ncia da 
# Computa√ß√£o com disciplinas, pr√©-requisitos e grade curricular.
# =============================================================================

set -e  # Para o script se algum comando falhar

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
NC='\033[0m' # No Color

# Fun√ß√£o para logging
log() {
    echo -e "${GREEN}[$(date +'%Y-%m-%d %H:%M:%S')] $1${NC}"
}

error() {
    echo -e "${RED}[ERROR] $1${NC}"
    exit 1
}

warning() {
    echo -e "${YELLOW}[WARNING] $1${NC}"
}

info() {
    echo -e "${BLUE}[INFO] $1${NC}"
}

# =============================================================================
# CONFIGURA√á√ïES INICIAIS
# =============================================================================
CHAIN_ID="academictoken"
KEYRING="test"
ADMIN_KEY="admin"
UNIVERSITY_KEY="university"
HOME_DIR="$HOME/.academictoken"
BINARY="academictokend"

# Verificar se o bin√°rio existe
if ! command -v $BINARY &> /dev/null; then
    error "Bin√°rio $BINARY n√£o encontrado. Por favor, compile o projeto primeiro."
fi

log "üöÄ Iniciando Teste do Fluxo Institucional - AcademicToken"
log "======================================================"

# =============================================================================
# FASE 0: PREPARA√á√ÉO DO AMBIENTE
# =============================================================================
log "üìã FASE 0: Prepara√ß√£o do Ambiente"

# Criar chaves se n√£o existirem
if ! $BINARY keys show $ADMIN_KEY --keyring-backend $KEYRING --home $HOME_DIR > /dev/null 2>&1; then
    log "Criando chave do administrador..."
    $BINARY keys add $ADMIN_KEY --keyring-backend $KEYRING --home $HOME_DIR
fi

if ! $BINARY keys show $UNIVERSITY_KEY --keyring-backend $KEYRING --home $HOME_DIR > /dev/null 2>&1; then
    log "Criando chave da universidade..."
    $BINARY keys add $UNIVERSITY_KEY --keyring-backend $KEYRING --home $HOME_DIR
fi

# Obter endere√ßos
ADMIN_ADDR=$($BINARY keys show $ADMIN_KEY -a --keyring-backend $KEYRING --home $HOME_DIR)
UNIVERSITY_ADDR=$($BINARY keys show $UNIVERSITY_KEY -a --keyring-backend $KEYRING --home $HOME_DIR)

log "Admin Address: $ADMIN_ADDR"
log "University Address: $UNIVERSITY_ADDR"

# =============================================================================
# FASE 1: CADASTRO DA INSTITUI√á√ÉO
# =============================================================================
log "üèõÔ∏è  FASE 1: Cadastro da Institui√ß√£o"

info "Registrando Universidade Federal de Tecnologia (UFT)..."

$BINARY tx institution register-institution \
    "UFT" \
    "Universidade Federal de Tecnologia" \
    "BR" \
    "Brasil" \
    "RS" \
    "Porto Alegre" \
    "Av. Tecnologia, 1000" \
    "public" \
    "active" \
    "www.uft.edu.br" \
    "contato@uft.edu.br" \
    "+55-51-1234-5678" \
    "Universidade p√∫blica federal especializada em tecnologia e inova√ß√£o. Fundada em 1980, oferece cursos de gradua√ß√£o e p√≥s-gradua√ß√£o nas √°reas de computa√ß√£o, engenharia e ci√™ncias exatas." \
    --from $UNIVERSITY_ADDR \
    --keyring-backend $KEYRING \
    --home $HOME_DIR \
    --chain-id $CHAIN_ID \
    --gas auto \
    --gas-adjustment 1.5 \
    --fees 100stake \
    --yes

sleep 2
log "‚úÖ Institui√ß√£o UFT registrada com sucesso!"

# =============================================================================
# FASE 2: CRIA√á√ÉO DO CURSO DE CI√äNCIA DA COMPUTA√á√ÉO
# =============================================================================
log "üíª FASE 2: Cria√ß√£o do Curso de Ci√™ncia da Computa√ß√£o"

info "Criando curso de Bacharelado em Ci√™ncia da Computa√ß√£o..."

$BINARY tx course create-course \
    "UFT" \
    "CC-UFT-2024" \
    "Ci√™ncia da Computa√ß√£o" \
    "Bacharelado em Ci√™ncia da Computa√ß√£o" \
    "bachelor" \
    "8" \
    "240" \
    "O curso de Ci√™ncia da Computa√ß√£o da UFT forma profissionais aptos a atuar no desenvolvimento de software, pesquisa em computa√ß√£o, gest√£o de projetos tecnol√≥gicos e inova√ß√£o digital. O curr√≠culo integra teoria e pr√°tica, com foco em algoritmos, estruturas de dados, engenharia de software, intelig√™ncia artificial e sistemas distribu√≠dos." \
    "pt-BR" \
    --from $UNIVERSITY_ADDR \
    --keyring-backend $KEYRING \
    --home $HOME_DIR \
    --chain-id $CHAIN_ID \
    --gas auto \
    --gas-adjustment 1.5 \
    --fees 100stake \
    --yes

sleep 2
log "‚úÖ Curso de Ci√™ncia da Computa√ß√£o criado com sucesso!"

# =============================================================================
# FASE 3: CADASTRO DAS DISCIPLINAS (SUBJECTS)
# =============================================================================
log "üìö FASE 3: Cadastro das Disciplinas"

# Array com todas as disciplinas do curso
declare -A SUBJECTS

# 1¬∫ SEMESTRE
SUBJECTS["MAT101"]="C√°lculo I|6|90|Introdu√ß√£o ao c√°lculo diferencial e integral de fun√ß√µes de uma vari√°vel real. Limites, derivadas, integrais e aplica√ß√µes.|required|basic"
SUBJECTS["ALG101"]="Introdu√ß√£o √† Programa√ß√£o|6|90|Fundamentos de programa√ß√£o utilizando linguagem C. Algoritmos, estruturas de controle, fun√ß√µes e ponteiros.|required|basic"
SUBJECTS["MAT102"]="√Ålgebra Linear|4|60|Sistemas lineares, matrizes, determinantes, espa√ßos vetoriais e transforma√ß√µes lineares.|required|basic"
SUBJECTS["FIS101"]="F√≠sica Geral I|4|60|Mec√¢nica cl√°ssica, leis de Newton, energia, momento e oscila√ß√µes.|required|basic"
SUBJECTS["HUM101"]="Comunica√ß√£o e Express√£o|2|30|Desenvolvimento de habilidades de comunica√ß√£o oral e escrita no contexto acad√™mico e profissional.|required|basic"

# 2¬∫ SEMESTRE  
SUBJECTS["MAT201"]="C√°lculo II|6|90|C√°lculo de fun√ß√µes de v√°rias vari√°veis, integrais m√∫ltiplas e c√°lculo vetorial.|required|basic"
SUBJECTS["ALG201"]="Estruturas de Dados I|6|90|Listas, pilhas, filas, √°rvores e algoritmos de ordena√ß√£o e busca.|required|intermediate"
SUBJECTS["MAT202"]="Matem√°tica Discreta|4|60|L√≥gica proposicional, teoria dos conjuntos, rela√ß√µes, fun√ß√µes e combinat√≥ria.|required|basic"
SUBJECTS["FIS201"]="F√≠sica Geral II|4|60|Eletromagnetismo, ondas e √≥ptica geom√©trica.|required|basic"
SUBJECTS["HUM201"]="Filosofia da Ci√™ncia|2|30|Epistemologia, m√©todo cient√≠fico e √©tica na ci√™ncia da computa√ß√£o.|required|basic"

# 3¬∫ SEMESTRE
SUBJECTS["ALG301"]="Programa√ß√£o Orientada a Objetos|6|90|Paradigma orientado a objetos usando Java. Classes, heran√ßa, polimorfismo e interfaces.|required|intermediate"
SUBJECTS["ALG302"]="Estruturas de Dados II|6|90|√Årvores balanceadas, grafos, hashing e algoritmos avan√ßados.|required|intermediate"
SUBJECTS["MAT301"]="Estat√≠stica e Probabilidade|4|60|Probabilidade, distribui√ß√µes, infer√™ncia estat√≠stica e an√°lise de dados.|required|intermediate"
SUBJECTS["ALG303"]="Arquitetura de Computadores|4|60|Organiza√ß√£o de computadores, processadores, mem√≥ria e sistemas de E/S.|required|intermediate"
SUBJECTS["HUM301"]="Ingl√™s T√©cnico|2|30|Leitura e compreens√£o de textos t√©cnicos em ingl√™s na √°rea de computa√ß√£o.|required|basic"

# 4¬∫ SEMESTRE
SUBJECTS["ALG401"]="An√°lise de Algoritmos|6|90|Complexidade computacional, an√°lise assint√≥tica e t√©cnicas de projeto de algoritmos.|required|advanced"
SUBJECTS["ALG402"]="Banco de Dados I|6|90|Modelagem conceitual, modelo relacional, SQL e normaliza√ß√£o.|required|intermediate"
SUBJECTS["ALG403"]="Sistemas Operacionais|6|90|Processos, threads, sincroniza√ß√£o, gerenciamento de mem√≥ria e sistemas de arquivos.|required|intermediate"
SUBJECTS["MAT401"]="M√©todos Num√©ricos|4|60|M√©todos computacionais para resolu√ß√£o de problemas matem√°ticos.|required|intermediate"
SUBJECTS["ALG404"]="Redes de Computadores I|4|60|Protocolos de comunica√ß√£o, modelo OSI/TCP-IP e tecnologias de rede.|required|intermediate"

# 5¬∫ SEMESTRE
SUBJECTS["ALG501"]="Engenharia de Software I|6|90|Processo de desenvolvimento, an√°lise de requisitos, design e padr√µes de projeto.|required|advanced"
SUBJECTS["ALG502"]="Compiladores|6|90|An√°lise l√©xica, sint√°tica e sem√¢ntica. Gera√ß√£o de c√≥digo e otimiza√ß√£o.|required|advanced"
SUBJECTS["ALG503"]="Intelig√™ncia Artificial I|6|90|Busca, representa√ß√£o do conhecimento e sistemas especialistas.|required|advanced"
SUBJECTS["ALG504"]="Interface Humano-Computador|4|60|Design de interfaces, usabilidade e experi√™ncia do usu√°rio.|required|intermediate"
SUBJECTS["ELE501"]="Computa√ß√£o Gr√°fica|4|60|Primitivas gr√°ficas, transforma√ß√µes geom√©tricas e renderiza√ß√£o.|elective|advanced"

# 6¬∫ SEMESTRE
SUBJECTS["ALG601"]="Banco de Dados II|6|90|Transa√ß√µes, controle de concorr√™ncia, bancos distribu√≠dos e NoSQL.|required|advanced"
SUBJECTS["ALG602"]="Sistemas Distribu√≠dos|6|90|Comunica√ß√£o entre processos, toler√¢ncia a falhas e sistemas peer-to-peer.|required|advanced"
SUBJECTS["ALG603"]="Seguran√ßa Computacional|6|90|Criptografia, autentica√ß√£o, autoriza√ß√£o e seguran√ßa em sistemas.|required|advanced"
SUBJECTS["ALG604"]="Engenharia de Software II|4|60|Testes de software, manuten√ß√£o e evolu√ß√£o de sistemas.|required|advanced"
SUBJECTS["ELE601"]="Processamento de Imagens|4|60|Filtragem, segmenta√ß√£o e reconhecimento de padr√µes em imagens.|elective|advanced"

# 7¬∫ SEMESTRE
SUBJECTS["ALG701"]="Projeto de Software|8|120|Desenvolvimento completo de um projeto de software em equipe.|required|advanced"
SUBJECTS["ALG702"]="Intelig√™ncia Artificial II|6|90|Machine learning, redes neurais e deep learning.|required|advanced"
SUBJECTS["ALG703"]="Computa√ß√£o M√≥vel|4|60|Desenvolvimento para dispositivos m√≥veis e computa√ß√£o ub√≠qua.|required|advanced"
SUBJECTS["ELE701"]="Bioinform√°tica|4|60|Aplica√ß√µes computacionais em biologia e an√°lise de sequ√™ncias.|elective|advanced"
SUBJECTS["ELE702"]="Realidade Virtual|4|60|Ambientes virtuais, intera√ß√£o 3D e aplica√ß√µes imersivas.|elective|advanced"

# 8¬∫ SEMESTRE
SUBJECTS["ALG801"]="Trabalho de Conclus√£o de Curso|12|180|Desenvolvimento de projeto final de gradua√ß√£o com orienta√ß√£o.|required|advanced"
SUBJECTS["ALG802"]="Empreendedorismo Tecnol√≥gico|4|60|Inova√ß√£o, startups e gest√£o de neg√≥cios tecnol√≥gicos.|required|intermediate"
SUBJECTS["ELE801"]="Computa√ß√£o Qu√¢ntica|4|60|Fundamentos da computa√ß√£o qu√¢ntica e algoritmos qu√¢nticos.|elective|advanced"
SUBJECTS["ELE802"]="Blockchain e Criptomoedas|4|60|Tecnologias distribu√≠das, consenso e aplica√ß√µes blockchain.|elective|advanced"
SUBJECTS["ELE803"]="IoT e Sistemas Embarcados|4|60|Internet das Coisas, sensores e sistemas de tempo real.|elective|advanced"

# Fun√ß√£o para cadastrar uma disciplina
create_subject() {
    local code=$1
    local data=$2
    
    IFS='|' read -r name credits hours description type difficulty <<< "$data"
    
    info "Cadastrando disciplina: $code - $name"
    
    $BINARY tx subject create-subject \
        "$code" \
        "$name" \
        "UFT" \
        "CC-UFT-2024" \
        "$credits" \
        "$hours" \
        "$description" \
        "pt-BR" \
        "$type" \
        "$difficulty" \
        "active" \
        --from $UNIVERSITY_ADDR \
        --keyring-backend $KEYRING \
        --home $HOME_DIR \
        --chain-id $CHAIN_ID \
        --gas auto \
        --gas-adjustment 1.5 \
        --fees 100stake \
        --yes
    
    sleep 1  # Pequeno delay para n√£o sobrecarregar
}

# Cadastrar todas as disciplinas
log "Iniciando cadastro de disciplinas..."
for code in "${!SUBJECTS[@]}"; do
    create_subject "$code" "${SUBJECTS[$code]}"
done

log "‚úÖ Todas as disciplinas foram cadastradas com sucesso!"

# =============================================================================
# FASE 4: DEFINI√á√ÉO DE PR√â-REQUISITOS
# =============================================================================
log "üîó FASE 4: Defini√ß√£o de Pr√©-requisitos"

# Fun√ß√£o para adicionar pr√©-requisito
add_prerequisite() {
    local subject=$1
    local prereq_type=$2  # "all" ou "any"
    local prereqs=$3
    
    info "Adicionando pr√©-requisito $prereq_type para $subject: $prereqs"
    
    $BINARY tx subject add-prerequisite-group \
        "$subject" \
        "$prereq_type" \
        "$prereqs" \
        --from $UNIVERSITY_ADDR \
        --keyring-backend $KEYRING \
        --home $HOME_DIR \
        --chain-id $CHAIN_ID \
        --gas auto \
        --gas-adjustment 1.5 \
        --fees 100stake \
        --yes
    
    sleep 1
}

# Definir pr√©-requisitos (exemplos dos principais)
info "Definindo pr√©-requisitos das disciplinas..."

# 2¬∫ Semestre
add_prerequisite "MAT201" "all" "MAT101"  # C√°lculo II precisa de C√°lculo I
add_prerequisite "ALG201" "all" "ALG101"  # Estruturas de Dados I precisa de Intro Programa√ß√£o
add_prerequisite "FIS201" "all" "FIS101,MAT101"  # F√≠sica II precisa de F√≠sica I e C√°lculo I

# 3¬∫ Semestre  
add_prerequisite "ALG301" "all" "ALG201"  # POO precisa de Estruturas I
add_prerequisite "ALG302" "all" "ALG201,MAT202"  # Estruturas II precisa de Estruturas I e Mat. Discreta

# 4¬∫ Semestre
add_prerequisite "ALG401" "all" "ALG302,MAT202"  # An√°lise de Algoritmos
add_prerequisite "ALG402" "all" "ALG201"  # Banco de Dados I
add_prerequisite "ALG403" "all" "ALG302"  # Sistemas Operacionais

# 5¬∫ Semestre
add_prerequisite "ALG501" "all" "ALG301,ALG402"  # Engenharia de Software I
add_prerequisite "ALG502" "all" "ALG401"  # Compiladores
add_prerequisite "ALG503" "all" "ALG401,MAT301"  # IA I

# 6¬∫ Semestre
add_prerequisite "ALG601" "all" "ALG402"  # Banco de Dados II
add_prerequisite "ALG602" "all" "ALG403,ALG404"  # Sistemas Distribu√≠dos
add_prerequisite "ALG603" "all" "ALG403,MAT202"  # Seguran√ßa
add_prerequisite "ALG604" "all" "ALG501"  # Engenharia de Software II

# 7¬∫ Semestre
add_prerequisite "ALG701" "all" "ALG501,ALG604"  # Projeto de Software
add_prerequisite "ALG702" "all" "ALG503,MAT301"  # IA II

# 8¬∫ Semestre
add_prerequisite "ALG801" "all" "ALG701"  # TCC precisa do Projeto

log "‚úÖ Pr√©-requisitos definidos com sucesso!"

# =============================================================================
# FASE 5: CRIA√á√ÉO DA GRADE CURRICULAR (CURRICULUM)
# =============================================================================
log "üìã FASE 5: Cria√ß√£o da Grade Curricular"

info "Criando √°rvore curricular do curso..."

$BINARY tx curriculum create-curriculum-tree \
    "CURR-CC-UFT-2024" \
    "CC-UFT-2024" \
    "UFT" \
    "2024.1" \
    "active" \
    "Grade curricular do curso de Ci√™ncia da Computa√ß√£o 2024 - 8 semestres com 240 cr√©ditos totais" \
    --from $UNIVERSITY_ADDR \
    --keyring-backend $KEYRING \
    --home $HOME_DIR \
    --chain-id $CHAIN_ID \
    --gas auto \
    --gas-adjustment 1.5 \
    --fees 100stake \
    --yes

sleep 2

# Fun√ß√£o para adicionar semestre ao curr√≠culo
add_semester() {
    local semester=$1
    local subjects=$2
    
    info "Adicionando $semester ao curr√≠culo com disciplinas: $subjects"
    
    $BINARY tx curriculum add-semester-to-curriculum \
        "CURR-CC-UFT-2024" \
        "$semester" \
        "$subjects" \
        --from $UNIVERSITY_ADDR \
        --keyring-backend $KEYRING \
        --home $HOME_DIR \
        --chain-id $CHAIN_ID \
        --gas auto \
        --gas-adjustment 1.5 \
        --fees 100stake \
        --yes
    
    sleep 1
}

# Adicionar semestres com suas disciplinas
add_semester "1" "MAT101,ALG101,MAT102,FIS101,HUM101"
add_semester "2" "MAT201,ALG201,MAT202,FIS201,HUM201"  
add_semester "3" "ALG301,ALG302,MAT301,ALG303,HUM301"
add_semester "4" "ALG401,ALG402,ALG403,MAT401,ALG404"
add_semester "5" "ALG501,ALG502,ALG503,ALG504,ELE501"
add_semester "6" "ALG601,ALG602,ALG603,ALG604,ELE601"
add_semester "7" "ALG701,ALG702,ALG703,ELE701,ELE702"
add_semester "8" "ALG801,ALG802,ELE801,ELE802,ELE803"

# Adicionar grupo de disciplinas eletivas
info "Adicionando grupo de disciplinas eletivas..."

$BINARY tx curriculum add-elective-group \
    "CURR-CC-UFT-2024" \
    "Eletivas T√©cnicas" \
    "ELE501,ELE601,ELE701,ELE702,ELE801,ELE802,ELE803" \
    "3" \
    "Disciplinas eletivas da √°rea t√©cnica - aluno deve cursar pelo menos 3" \
    --from $UNIVERSITY_ADDR \
    --keyring-backend $KEYRING \
    --home $HOME_DIR \
    --chain-id $CHAIN_ID \
    --gas auto \
    --gas-adjustment 1.5 \
    --fees 100stake \
    --yes

sleep 2

# Definir requisitos de gradua√ß√£o
info "Definindo requisitos de gradua√ß√£o..."

$BINARY tx curriculum set-graduation-requirements \
    "CURR-CC-UFT-2024" \
    "240" \
    "190" \
    "30" \
    "20" \
    "8.0" \
    "ALG801" \
    "Para se formar, o aluno deve: 1) Completar 240 cr√©ditos totais; 2) Completar 190 cr√©ditos obrigat√≥rios; 3) Completar 30 cr√©ditos eletivos; 4) Completar 20 cr√©ditos complementares; 5) Ter m√©dia geral >= 8.0; 6) Concluir o TCC (ALG801)" \
    --from $UNIVERSITY_ADDR \
    --keyring-backend $KEYRING \
    --home $HOME_DIR \
    --chain-id $CHAIN_ID \
    --gas auto \
    --gas-adjustment 1.5 \
    --fees 100stake \
    --yes

sleep 2
log "‚úÖ Grade curricular criada com sucesso!"

# =============================================================================
# FASE 6: CRIA√á√ÉO DE TOKEN DEFINITIONS
# =============================================================================
log "ü™ô FASE 6: Cria√ß√£o de Token Definitions"

# Fun√ß√£o para criar token definition
create_token_def() {
    local subject_id=$1
    local token_name=$2
    
    info "Criando token definition para $subject_id: $token_name"
    
    $BINARY tx tokendef create-token-definition \
        "TOKEN-$subject_id" \
        "$token_name" \
        "$subject_id" \
        "UFT" \
        "CC-UFT-2024" \
        "academic_subject" \
        "Token NFT representando a conclus√£o da disciplina $subject_id do curso de Ci√™ncia da Computa√ß√£o da UFT" \
        --from $UNIVERSITY_ADDR \
        --keyring-backend $KEYRING \
        --home $HOME_DIR \
        --chain-id $CHAIN_ID \
        --gas auto \
        --gas-adjustment 1.5 \
        --fees 100stake \
        --yes
    
    sleep 1
}

# Criar tokens para algumas disciplinas principais (exemplo)
info "Criando token definitions para disciplinas principais..."

create_token_def "ALG101" "Token Introdu√ß√£o √† Programa√ß√£o"
create_token_def "ALG201" "Token Estruturas de Dados I"
create_token_def "ALG301" "Token Programa√ß√£o Orientada a Objetos"
create_token_def "ALG401" "Token An√°lise de Algoritmos"
create_token_def "ALG501" "Token Engenharia de Software I"
create_token_def "ALG601" "Token Banco de Dados II"
create_token_def "ALG701" "Token Projeto de Software"
create_token_def "ALG801" "Token Trabalho de Conclus√£o de Curso"

log "‚úÖ Token definitions criados com sucesso!"

# =============================================================================
# RELAT√ìRIO FINAL
# =============================================================================
log "üìä RELAT√ìRIO FINAL"
log "=================="

echo ""
echo -e "${PURPLE}üéì UNIVERSIDADE FEDERAL DE TECNOLOGIA (UFT) - SETUP COMPLETO${NC}"
echo ""
echo -e "${BLUE}üìã Resumo do que foi criado:${NC}"
echo "‚Ä¢ 1 Institui√ß√£o: Universidade Federal de Tecnologia (UFT)"
echo "‚Ä¢ 1 Curso: Bacharelado em Ci√™ncia da Computa√ß√£o"  
echo "‚Ä¢ 40 Disciplinas distribu√≠das em 8 semestres"
echo "‚Ä¢ Sistema completo de pr√©-requisitos"
echo "‚Ä¢ 1 Grade curricular estruturada (CURR-CC-UFT-2024)"
echo "‚Ä¢ Grupo de disciplinas eletivas"
echo "‚Ä¢ Requisitos de gradua√ß√£o definidos"
echo "‚Ä¢ 8 Token definitions para disciplinas principais"
echo ""
echo -e "${GREEN}‚úÖ Sistema institucional configurado e pronto para receber alunos!${NC}"
echo ""
echo -e "${YELLOW}üìå Pr√≥ximos passos:${NC}"
echo "1. Criar script para jornada do aluno"
echo "2. Testar matr√≠cula de estudantes"
echo "3. Simular conclus√£o de disciplinas"
echo "4. Testar emiss√£o de NFTs acad√™micos"
echo "5. Testar processo de gradua√ß√£o"
echo ""
echo -e "${BLUE}üîß Para consultar dados criados:${NC}"
echo "‚Ä¢ Institui√ß√µes: $BINARY q institution list-institution"
echo "‚Ä¢ Cursos: $BINARY q course list-course"  
echo "‚Ä¢ Disciplinas: $BINARY q subject list-subject"
echo "‚Ä¢ Grade curricular: $BINARY q curriculum show-curriculum-tree CURR-CC-UFT-2024"
echo ""

log "üéâ Teste do Fluxo Institucional conclu√≠do com sucesso!"