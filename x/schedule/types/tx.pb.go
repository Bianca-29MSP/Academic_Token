// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: academictoken/schedule/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	_ "github.com/cosmos/cosmos-sdk/types/msgservice"
	_ "github.com/cosmos/cosmos-sdk/types/tx/amino"
	_ "github.com/cosmos/gogoproto/gogoproto"
	grpc1 "github.com/cosmos/gogoproto/grpc"
	proto "github.com/cosmos/gogoproto/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// MsgUpdateParams is the Msg/UpdateParams request type.
type MsgUpdateParams struct {
	// authority is the address that controls the module (defaults to x/gov unless overwritten).
	Authority string `protobuf:"bytes,1,opt,name=authority,proto3" json:"authority,omitempty"`
	// NOTE: All parameters must be supplied.
	Params Params `protobuf:"bytes,2,opt,name=params,proto3" json:"params"`
}

func (m *MsgUpdateParams) Reset()         { *m = MsgUpdateParams{} }
func (m *MsgUpdateParams) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateParams) ProtoMessage()    {}
func (*MsgUpdateParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_01a3aa6f7c7f00db, []int{0}
}
func (m *MsgUpdateParams) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateParams.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateParams.Merge(m, src)
}
func (m *MsgUpdateParams) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateParams) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateParams.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateParams proto.InternalMessageInfo

func (m *MsgUpdateParams) GetAuthority() string {
	if m != nil {
		return m.Authority
	}
	return ""
}

func (m *MsgUpdateParams) GetParams() Params {
	if m != nil {
		return m.Params
	}
	return Params{}
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
type MsgUpdateParamsResponse struct {
}

func (m *MsgUpdateParamsResponse) Reset()         { *m = MsgUpdateParamsResponse{} }
func (m *MsgUpdateParamsResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateParamsResponse) ProtoMessage()    {}
func (*MsgUpdateParamsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_01a3aa6f7c7f00db, []int{1}
}
func (m *MsgUpdateParamsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateParamsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateParamsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateParamsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateParamsResponse.Merge(m, src)
}
func (m *MsgUpdateParamsResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateParamsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateParamsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateParamsResponse proto.InternalMessageInfo

type MsgCreateSubjectRecommendation struct {
	Creator                string                `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Student                string                `protobuf:"bytes,2,opt,name=student,proto3" json:"student,omitempty"`
	RecommendationSemester string                `protobuf:"bytes,3,opt,name=recommendationSemester,proto3" json:"recommendationSemester,omitempty"`
	RecommendedSubjects    []*RecommendedSubject `protobuf:"bytes,4,rep,name=recommendedSubjects,proto3" json:"recommendedSubjects,omitempty"`
	RecommendationMetadata string                `protobuf:"bytes,5,opt,name=recommendationMetadata,proto3" json:"recommendationMetadata,omitempty"`
	GeneratedDate          string                `protobuf:"bytes,6,opt,name=generatedDate,proto3" json:"generatedDate,omitempty"`
}

func (m *MsgCreateSubjectRecommendation) Reset()         { *m = MsgCreateSubjectRecommendation{} }
func (m *MsgCreateSubjectRecommendation) String() string { return proto.CompactTextString(m) }
func (*MsgCreateSubjectRecommendation) ProtoMessage()    {}
func (*MsgCreateSubjectRecommendation) Descriptor() ([]byte, []int) {
	return fileDescriptor_01a3aa6f7c7f00db, []int{2}
}
func (m *MsgCreateSubjectRecommendation) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateSubjectRecommendation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateSubjectRecommendation.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateSubjectRecommendation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateSubjectRecommendation.Merge(m, src)
}
func (m *MsgCreateSubjectRecommendation) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateSubjectRecommendation) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateSubjectRecommendation.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateSubjectRecommendation proto.InternalMessageInfo

func (m *MsgCreateSubjectRecommendation) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateSubjectRecommendation) GetStudent() string {
	if m != nil {
		return m.Student
	}
	return ""
}

func (m *MsgCreateSubjectRecommendation) GetRecommendationSemester() string {
	if m != nil {
		return m.RecommendationSemester
	}
	return ""
}

func (m *MsgCreateSubjectRecommendation) GetRecommendedSubjects() []*RecommendedSubject {
	if m != nil {
		return m.RecommendedSubjects
	}
	return nil
}

func (m *MsgCreateSubjectRecommendation) GetRecommendationMetadata() string {
	if m != nil {
		return m.RecommendationMetadata
	}
	return ""
}

func (m *MsgCreateSubjectRecommendation) GetGeneratedDate() string {
	if m != nil {
		return m.GeneratedDate
	}
	return ""
}

type MsgCreateSubjectRecommendationResponse struct {
}

func (m *MsgCreateSubjectRecommendationResponse) Reset() {
	*m = MsgCreateSubjectRecommendationResponse{}
}
func (m *MsgCreateSubjectRecommendationResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateSubjectRecommendationResponse) ProtoMessage()    {}
func (*MsgCreateSubjectRecommendationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_01a3aa6f7c7f00db, []int{3}
}
func (m *MsgCreateSubjectRecommendationResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateSubjectRecommendationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateSubjectRecommendationResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateSubjectRecommendationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateSubjectRecommendationResponse.Merge(m, src)
}
func (m *MsgCreateSubjectRecommendationResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateSubjectRecommendationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateSubjectRecommendationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateSubjectRecommendationResponse proto.InternalMessageInfo

type MsgCreateStudyPlan struct {
	Creator          string   `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Student          string   `protobuf:"bytes,2,opt,name=student,proto3" json:"student,omitempty"`
	CompletionTarget string   `protobuf:"bytes,3,opt,name=completionTarget,proto3" json:"completionTarget,omitempty"`
	SemesterCodes    []string `protobuf:"bytes,4,rep,name=semesterCodes,proto3" json:"semesterCodes,omitempty"`
	AdditionalNotes  string   `protobuf:"bytes,5,opt,name=additionalNotes,proto3" json:"additionalNotes,omitempty"`
	Status           string   `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
}

func (m *MsgCreateStudyPlan) Reset()         { *m = MsgCreateStudyPlan{} }
func (m *MsgCreateStudyPlan) String() string { return proto.CompactTextString(m) }
func (*MsgCreateStudyPlan) ProtoMessage()    {}
func (*MsgCreateStudyPlan) Descriptor() ([]byte, []int) {
	return fileDescriptor_01a3aa6f7c7f00db, []int{4}
}
func (m *MsgCreateStudyPlan) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateStudyPlan) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateStudyPlan.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateStudyPlan) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateStudyPlan.Merge(m, src)
}
func (m *MsgCreateStudyPlan) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateStudyPlan) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateStudyPlan.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateStudyPlan proto.InternalMessageInfo

func (m *MsgCreateStudyPlan) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateStudyPlan) GetStudent() string {
	if m != nil {
		return m.Student
	}
	return ""
}

func (m *MsgCreateStudyPlan) GetCompletionTarget() string {
	if m != nil {
		return m.CompletionTarget
	}
	return ""
}

func (m *MsgCreateStudyPlan) GetSemesterCodes() []string {
	if m != nil {
		return m.SemesterCodes
	}
	return nil
}

func (m *MsgCreateStudyPlan) GetAdditionalNotes() string {
	if m != nil {
		return m.AdditionalNotes
	}
	return ""
}

func (m *MsgCreateStudyPlan) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type MsgCreateStudyPlanResponse struct {
}

func (m *MsgCreateStudyPlanResponse) Reset()         { *m = MsgCreateStudyPlanResponse{} }
func (m *MsgCreateStudyPlanResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateStudyPlanResponse) ProtoMessage()    {}
func (*MsgCreateStudyPlanResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_01a3aa6f7c7f00db, []int{5}
}
func (m *MsgCreateStudyPlanResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateStudyPlanResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateStudyPlanResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateStudyPlanResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateStudyPlanResponse.Merge(m, src)
}
func (m *MsgCreateStudyPlanResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateStudyPlanResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateStudyPlanResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateStudyPlanResponse proto.InternalMessageInfo

type MsgAddPlannedSemester struct {
	Creator         string   `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	StudyPlanId     string   `protobuf:"bytes,2,opt,name=studyPlanId,proto3" json:"studyPlanId,omitempty"`
	SemesterCode    string   `protobuf:"bytes,3,opt,name=semesterCode,proto3" json:"semesterCode,omitempty"`
	PlannedSubjects []string `protobuf:"bytes,4,rep,name=plannedSubjects,proto3" json:"plannedSubjects,omitempty"`
	TotalCredits    uint64   `protobuf:"varint,5,opt,name=totalCredits,proto3" json:"totalCredits,omitempty"`
	TotalHours      uint64   `protobuf:"varint,6,opt,name=totalHours,proto3" json:"totalHours,omitempty"`
	Status          string   `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`
}

func (m *MsgAddPlannedSemester) Reset()         { *m = MsgAddPlannedSemester{} }
func (m *MsgAddPlannedSemester) String() string { return proto.CompactTextString(m) }
func (*MsgAddPlannedSemester) ProtoMessage()    {}
func (*MsgAddPlannedSemester) Descriptor() ([]byte, []int) {
	return fileDescriptor_01a3aa6f7c7f00db, []int{6}
}
func (m *MsgAddPlannedSemester) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddPlannedSemester) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddPlannedSemester.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddPlannedSemester) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddPlannedSemester.Merge(m, src)
}
func (m *MsgAddPlannedSemester) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddPlannedSemester) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddPlannedSemester.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddPlannedSemester proto.InternalMessageInfo

func (m *MsgAddPlannedSemester) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgAddPlannedSemester) GetStudyPlanId() string {
	if m != nil {
		return m.StudyPlanId
	}
	return ""
}

func (m *MsgAddPlannedSemester) GetSemesterCode() string {
	if m != nil {
		return m.SemesterCode
	}
	return ""
}

func (m *MsgAddPlannedSemester) GetPlannedSubjects() []string {
	if m != nil {
		return m.PlannedSubjects
	}
	return nil
}

func (m *MsgAddPlannedSemester) GetTotalCredits() uint64 {
	if m != nil {
		return m.TotalCredits
	}
	return 0
}

func (m *MsgAddPlannedSemester) GetTotalHours() uint64 {
	if m != nil {
		return m.TotalHours
	}
	return 0
}

func (m *MsgAddPlannedSemester) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type MsgAddPlannedSemesterResponse struct {
}

func (m *MsgAddPlannedSemesterResponse) Reset()         { *m = MsgAddPlannedSemesterResponse{} }
func (m *MsgAddPlannedSemesterResponse) String() string { return proto.CompactTextString(m) }
func (*MsgAddPlannedSemesterResponse) ProtoMessage()    {}
func (*MsgAddPlannedSemesterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_01a3aa6f7c7f00db, []int{7}
}
func (m *MsgAddPlannedSemesterResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddPlannedSemesterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddPlannedSemesterResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddPlannedSemesterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddPlannedSemesterResponse.Merge(m, src)
}
func (m *MsgAddPlannedSemesterResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddPlannedSemesterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddPlannedSemesterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddPlannedSemesterResponse proto.InternalMessageInfo

type MsgUpdateStudyPlanStatus struct {
	Creator     string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	StudyPlanId string `protobuf:"bytes,2,opt,name=studyPlanId,proto3" json:"studyPlanId,omitempty"`
	Status      string `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
}

func (m *MsgUpdateStudyPlanStatus) Reset()         { *m = MsgUpdateStudyPlanStatus{} }
func (m *MsgUpdateStudyPlanStatus) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateStudyPlanStatus) ProtoMessage()    {}
func (*MsgUpdateStudyPlanStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_01a3aa6f7c7f00db, []int{8}
}
func (m *MsgUpdateStudyPlanStatus) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateStudyPlanStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateStudyPlanStatus.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateStudyPlanStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateStudyPlanStatus.Merge(m, src)
}
func (m *MsgUpdateStudyPlanStatus) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateStudyPlanStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateStudyPlanStatus.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateStudyPlanStatus proto.InternalMessageInfo

func (m *MsgUpdateStudyPlanStatus) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateStudyPlanStatus) GetStudyPlanId() string {
	if m != nil {
		return m.StudyPlanId
	}
	return ""
}

func (m *MsgUpdateStudyPlanStatus) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type MsgUpdateStudyPlanStatusResponse struct {
}

func (m *MsgUpdateStudyPlanStatusResponse) Reset()         { *m = MsgUpdateStudyPlanStatusResponse{} }
func (m *MsgUpdateStudyPlanStatusResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateStudyPlanStatusResponse) ProtoMessage()    {}
func (*MsgUpdateStudyPlanStatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_01a3aa6f7c7f00db, []int{9}
}
func (m *MsgUpdateStudyPlanStatusResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateStudyPlanStatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateStudyPlanStatusResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateStudyPlanStatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateStudyPlanStatusResponse.Merge(m, src)
}
func (m *MsgUpdateStudyPlanStatusResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateStudyPlanStatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateStudyPlanStatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateStudyPlanStatusResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgUpdateParams)(nil), "academictoken.schedule.MsgUpdateParams")
	proto.RegisterType((*MsgUpdateParamsResponse)(nil), "academictoken.schedule.MsgUpdateParamsResponse")
	proto.RegisterType((*MsgCreateSubjectRecommendation)(nil), "academictoken.schedule.MsgCreateSubjectRecommendation")
	proto.RegisterType((*MsgCreateSubjectRecommendationResponse)(nil), "academictoken.schedule.MsgCreateSubjectRecommendationResponse")
	proto.RegisterType((*MsgCreateStudyPlan)(nil), "academictoken.schedule.MsgCreateStudyPlan")
	proto.RegisterType((*MsgCreateStudyPlanResponse)(nil), "academictoken.schedule.MsgCreateStudyPlanResponse")
	proto.RegisterType((*MsgAddPlannedSemester)(nil), "academictoken.schedule.MsgAddPlannedSemester")
	proto.RegisterType((*MsgAddPlannedSemesterResponse)(nil), "academictoken.schedule.MsgAddPlannedSemesterResponse")
	proto.RegisterType((*MsgUpdateStudyPlanStatus)(nil), "academictoken.schedule.MsgUpdateStudyPlanStatus")
	proto.RegisterType((*MsgUpdateStudyPlanStatusResponse)(nil), "academictoken.schedule.MsgUpdateStudyPlanStatusResponse")
}

func init() { proto.RegisterFile("academictoken/schedule/tx.proto", fileDescriptor_01a3aa6f7c7f00db) }

var fileDescriptor_01a3aa6f7c7f00db = []byte{
	// 789 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x96, 0x4b, 0x6f, 0xd3, 0x4a,
	0x14, 0xc7, 0xe3, 0xa6, 0x4d, 0x95, 0xd3, 0x5e, 0xf5, 0xde, 0xb9, 0x7d, 0xb8, 0xbe, 0x17, 0x37,
	0x0a, 0x08, 0xa2, 0x48, 0x4d, 0x4a, 0x10, 0x55, 0x55, 0x24, 0xa4, 0xb6, 0x2c, 0x60, 0x11, 0x54,
	0x39, 0xb0, 0x41, 0x48, 0xd5, 0xd4, 0x33, 0x72, 0x03, 0xb1, 0x27, 0x78, 0x26, 0xa8, 0x45, 0x2c,
	0x10, 0xdd, 0xc1, 0x86, 0x0d, 0xdf, 0x81, 0x65, 0x17, 0x7c, 0x88, 0xb2, 0xab, 0x58, 0x20, 0x56,
	0x08, 0xb5, 0x8b, 0x4a, 0x7c, 0x0a, 0x64, 0x7b, 0xec, 0xc4, 0x4e, 0x9c, 0x3e, 0xd8, 0xb4, 0x9d,
	0x73, 0xfe, 0xe7, 0xf5, 0x9b, 0x87, 0x0b, 0x0b, 0xd8, 0xc4, 0x84, 0xda, 0x4d, 0x53, 0xb0, 0xe7,
	0xd4, 0xa9, 0x72, 0x73, 0x87, 0x92, 0x4e, 0x8b, 0x56, 0xc5, 0x6e, 0xa5, 0xed, 0x32, 0xc1, 0xd0,
	0x6c, 0x4c, 0x50, 0x09, 0x05, 0xda, 0x3f, 0xd8, 0x6e, 0x3a, 0xac, 0xea, 0xff, 0x0c, 0xa4, 0xda,
	0x9c, 0xc9, 0xb8, 0xcd, 0x78, 0xd5, 0xe6, 0x56, 0xf5, 0xe5, 0x4d, 0xef, 0x97, 0x74, 0xcc, 0x07,
	0x8e, 0x2d, 0x7f, 0x55, 0x0d, 0x16, 0xd2, 0x35, 0x6d, 0x31, 0x8b, 0x05, 0x76, 0xef, 0x2f, 0x69,
	0xbd, 0x9a, 0xd2, 0x55, 0x1b, 0xbb, 0xd8, 0x0e, 0x43, 0x97, 0x52, 0x44, 0x2e, 0x35, 0x99, 0x6d,
	0x53, 0x87, 0x50, 0xb2, 0xc5, 0x3b, 0xdb, 0xcf, 0xa8, 0x29, 0x64, 0xc4, 0x62, 0x5a, 0xda, 0x16,
	0x76, 0x1c, 0x4f, 0x4d, 0x6d, 0xca, 0x05, 0x75, 0x03, 0x79, 0xf1, 0x8b, 0x02, 0x53, 0x75, 0x6e,
	0x3d, 0x6e, 0x13, 0x2c, 0xe8, 0xa6, 0x5f, 0x1a, 0x2d, 0x43, 0x1e, 0x77, 0xc4, 0x0e, 0x73, 0x9b,
	0x62, 0x4f, 0x55, 0x0a, 0x4a, 0x29, 0xbf, 0xae, 0x7e, 0xfd, 0xbc, 0x38, 0x2d, 0x87, 0x5a, 0x23,
	0xc4, 0xa5, 0x9c, 0x37, 0x84, 0xdb, 0x74, 0x2c, 0xa3, 0x2b, 0x45, 0x6b, 0x90, 0x0b, 0x9a, 0x57,
	0x47, 0x0a, 0x4a, 0x69, 0xa2, 0xa6, 0x57, 0x06, 0x73, 0xad, 0x04, 0x75, 0xd6, 0xf3, 0x87, 0x3f,
	0x16, 0x32, 0x9f, 0x4e, 0x0f, 0xca, 0x8a, 0x21, 0x03, 0x57, 0xef, 0xbc, 0x3d, 0x3d, 0x28, 0x77,
	0x53, 0xbe, 0x3b, 0x3d, 0x28, 0x97, 0xe2, 0x03, 0xed, 0x76, 0x47, 0x4a, 0xf4, 0x5d, 0x9c, 0x87,
	0xb9, 0x84, 0xc9, 0xa0, 0xbc, 0xcd, 0x1c, 0x4e, 0x8b, 0xdf, 0x46, 0x40, 0xaf, 0x73, 0x6b, 0xc3,
	0xa5, 0x58, 0xd0, 0x46, 0x00, 0xcc, 0x08, 0x19, 0x62, 0xd1, 0x64, 0x0e, 0x52, 0x61, 0xdc, 0xf4,
	0xdc, 0xcc, 0x0d, 0x66, 0x36, 0xc2, 0xa5, 0xe7, 0xe1, 0xa2, 0x43, 0xa8, 0x23, 0xfc, 0xc1, 0xf2,
	0x46, 0xb8, 0x44, 0xcb, 0x30, 0xeb, 0xc6, 0xb2, 0x34, 0x24, 0x5d, 0x35, 0xeb, 0x0b, 0x53, 0xbc,
	0xe8, 0x29, 0xfc, 0xdb, 0xb3, 0x83, 0xb2, 0x1f, 0xae, 0x8e, 0x16, 0xb2, 0xa5, 0x89, 0x5a, 0x39,
	0x0d, 0x9b, 0xd1, 0x17, 0x62, 0x0c, 0x4a, 0xd3, 0xdf, 0x55, 0x9d, 0x0a, 0x4c, 0xb0, 0xc0, 0xea,
	0xd8, 0xa0, 0xae, 0x42, 0x2f, 0xba, 0x06, 0x7f, 0x59, 0xd4, 0xa1, 0x2e, 0x16, 0x94, 0xdc, 0xc3,
	0x82, 0xaa, 0x39, 0x5f, 0x1e, 0x37, 0xae, 0x4e, 0x7a, 0x5b, 0x14, 0xb2, 0x29, 0x96, 0xe0, 0xfa,
	0x70, 0xae, 0xd1, 0x16, 0xfc, 0x52, 0x00, 0x75, 0xa5, 0xa2, 0x43, 0xf6, 0x36, 0x5b, 0xf8, 0x72,
	0xd8, 0xcb, 0xf0, 0xb7, 0xc9, 0xec, 0x76, 0x8b, 0x7a, 0x05, 0x1e, 0x61, 0xd7, 0xa2, 0x42, 0x02,
	0xef, 0xb3, 0x7b, 0x43, 0x85, 0x47, 0x7e, 0x83, 0x11, 0x1a, 0x40, 0xce, 0x1b, 0x71, 0x23, 0x2a,
	0xc1, 0x14, 0x26, 0xa4, 0xe9, 0xc5, 0xe1, 0xd6, 0x43, 0x26, 0x28, 0x97, 0xac, 0x92, 0x66, 0x34,
	0x0b, 0x39, 0x2e, 0xb0, 0xe8, 0x70, 0x49, 0x47, 0xae, 0x12, 0x58, 0xfe, 0x07, 0xad, 0x7f, 0xd6,
	0x08, 0xc5, 0xfb, 0x11, 0x98, 0xa9, 0x73, 0x6b, 0x8d, 0x90, 0xcd, 0xe0, 0x56, 0x46, 0x07, 0x23,
	0x9d, 0x46, 0x01, 0x26, 0x78, 0x98, 0xe8, 0x01, 0x91, 0x44, 0x7a, 0x4d, 0xa8, 0x08, 0x93, 0xbd,
	0x43, 0x49, 0x22, 0x31, 0x9b, 0x37, 0xa7, 0x7c, 0x08, 0x62, 0x87, 0x2e, 0x6f, 0x24, 0xcd, 0x5e,
	0x36, 0xc1, 0x04, 0x6e, 0x6d, 0xb8, 0x94, 0x34, 0x45, 0x80, 0x63, 0xd4, 0x88, 0xd9, 0x90, 0x0e,
	0xe0, 0xaf, 0xef, 0xb3, 0x8e, 0x1b, 0xf0, 0x18, 0x35, 0x7a, 0x2c, 0x3d, 0xac, 0xc6, 0x87, 0xb0,
	0x5a, 0x80, 0x2b, 0x03, 0x61, 0x44, 0xb8, 0x5e, 0x83, 0x1a, 0xdd, 0xeb, 0x08, 0x66, 0xc3, 0x4f,
	0xf5, 0x47, 0xc0, 0xba, 0xed, 0x65, 0x87, 0xb4, 0x57, 0x84, 0x42, 0x5a, 0xf5, 0xb0, 0xc3, 0xda,
	0xfe, 0x18, 0x64, 0xeb, 0xdc, 0x42, 0x3b, 0x30, 0x19, 0x7b, 0x49, 0x6f, 0xa4, 0x5d, 0xe5, 0xc4,
	0x3b, 0xa5, 0x55, 0xcf, 0x29, 0x0c, 0x2b, 0xa2, 0x8f, 0x0a, 0xfc, 0x37, 0xec, 0x35, 0x5b, 0x1e,
	0x92, 0x70, 0x48, 0x9c, 0x76, 0xf7, 0x72, 0x71, 0x51, 0x5f, 0x2f, 0x60, 0x2a, 0x79, 0xc3, 0xcb,
	0x67, 0xa7, 0x0c, 0xb5, 0x5a, 0xed, 0xfc, 0xda, 0xa8, 0xe4, 0x2b, 0x40, 0x03, 0x6e, 0xd2, 0xe2,
	0x90, 0x4c, 0xfd, 0x72, 0xed, 0xf6, 0x85, 0xe4, 0x51, 0xed, 0x7d, 0x05, 0x66, 0x06, 0x1f, 0xcc,
	0xa5, 0x33, 0x77, 0x34, 0x11, 0xa1, 0xad, 0x5c, 0x34, 0x22, 0xec, 0x42, 0x1b, 0x7b, 0xe3, 0x7d,
	0x44, 0xd7, 0x57, 0x0e, 0x8f, 0x75, 0xe5, 0xe8, 0x58, 0x57, 0x7e, 0x1e, 0xeb, 0xca, 0x87, 0x13,
	0x3d, 0x73, 0x74, 0xa2, 0x67, 0xbe, 0x9f, 0xe8, 0x99, 0x27, 0x7a, 0xea, 0x37, 0x54, 0xec, 0xb5,
	0x29, 0xdf, 0xce, 0xf9, 0xff, 0x0c, 0xdc, 0xfa, 0x1d, 0x00, 0x00, 0xff, 0xff, 0x9e, 0xd7, 0xa2,
	0xf7, 0x2a, 0x09, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	// UpdateParams defines a (governance) operation for updating the module
	// parameters. The authority defaults to the x/gov module account.
	UpdateParams(ctx context.Context, in *MsgUpdateParams, opts ...grpc.CallOption) (*MsgUpdateParamsResponse, error)
	CreateSubjectRecommendation(ctx context.Context, in *MsgCreateSubjectRecommendation, opts ...grpc.CallOption) (*MsgCreateSubjectRecommendationResponse, error)
	CreateStudyPlan(ctx context.Context, in *MsgCreateStudyPlan, opts ...grpc.CallOption) (*MsgCreateStudyPlanResponse, error)
	AddPlannedSemester(ctx context.Context, in *MsgAddPlannedSemester, opts ...grpc.CallOption) (*MsgAddPlannedSemesterResponse, error)
	UpdateStudyPlanStatus(ctx context.Context, in *MsgUpdateStudyPlanStatus, opts ...grpc.CallOption) (*MsgUpdateStudyPlanStatusResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) UpdateParams(ctx context.Context, in *MsgUpdateParams, opts ...grpc.CallOption) (*MsgUpdateParamsResponse, error) {
	out := new(MsgUpdateParamsResponse)
	err := c.cc.Invoke(ctx, "/academictoken.schedule.Msg/UpdateParams", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateSubjectRecommendation(ctx context.Context, in *MsgCreateSubjectRecommendation, opts ...grpc.CallOption) (*MsgCreateSubjectRecommendationResponse, error) {
	out := new(MsgCreateSubjectRecommendationResponse)
	err := c.cc.Invoke(ctx, "/academictoken.schedule.Msg/CreateSubjectRecommendation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateStudyPlan(ctx context.Context, in *MsgCreateStudyPlan, opts ...grpc.CallOption) (*MsgCreateStudyPlanResponse, error) {
	out := new(MsgCreateStudyPlanResponse)
	err := c.cc.Invoke(ctx, "/academictoken.schedule.Msg/CreateStudyPlan", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) AddPlannedSemester(ctx context.Context, in *MsgAddPlannedSemester, opts ...grpc.CallOption) (*MsgAddPlannedSemesterResponse, error) {
	out := new(MsgAddPlannedSemesterResponse)
	err := c.cc.Invoke(ctx, "/academictoken.schedule.Msg/AddPlannedSemester", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateStudyPlanStatus(ctx context.Context, in *MsgUpdateStudyPlanStatus, opts ...grpc.CallOption) (*MsgUpdateStudyPlanStatusResponse, error) {
	out := new(MsgUpdateStudyPlanStatusResponse)
	err := c.cc.Invoke(ctx, "/academictoken.schedule.Msg/UpdateStudyPlanStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	// UpdateParams defines a (governance) operation for updating the module
	// parameters. The authority defaults to the x/gov module account.
	UpdateParams(context.Context, *MsgUpdateParams) (*MsgUpdateParamsResponse, error)
	CreateSubjectRecommendation(context.Context, *MsgCreateSubjectRecommendation) (*MsgCreateSubjectRecommendationResponse, error)
	CreateStudyPlan(context.Context, *MsgCreateStudyPlan) (*MsgCreateStudyPlanResponse, error)
	AddPlannedSemester(context.Context, *MsgAddPlannedSemester) (*MsgAddPlannedSemesterResponse, error)
	UpdateStudyPlanStatus(context.Context, *MsgUpdateStudyPlanStatus) (*MsgUpdateStudyPlanStatusResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) UpdateParams(ctx context.Context, req *MsgUpdateParams) (*MsgUpdateParamsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateParams not implemented")
}
func (*UnimplementedMsgServer) CreateSubjectRecommendation(ctx context.Context, req *MsgCreateSubjectRecommendation) (*MsgCreateSubjectRecommendationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSubjectRecommendation not implemented")
}
func (*UnimplementedMsgServer) CreateStudyPlan(ctx context.Context, req *MsgCreateStudyPlan) (*MsgCreateStudyPlanResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateStudyPlan not implemented")
}
func (*UnimplementedMsgServer) AddPlannedSemester(ctx context.Context, req *MsgAddPlannedSemester) (*MsgAddPlannedSemesterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddPlannedSemester not implemented")
}
func (*UnimplementedMsgServer) UpdateStudyPlanStatus(ctx context.Context, req *MsgUpdateStudyPlanStatus) (*MsgUpdateStudyPlanStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateStudyPlanStatus not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_UpdateParams_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateParams(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/academictoken.schedule.Msg/UpdateParams",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateParams(ctx, req.(*MsgUpdateParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateSubjectRecommendation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateSubjectRecommendation)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateSubjectRecommendation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/academictoken.schedule.Msg/CreateSubjectRecommendation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateSubjectRecommendation(ctx, req.(*MsgCreateSubjectRecommendation))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateStudyPlan_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateStudyPlan)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateStudyPlan(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/academictoken.schedule.Msg/CreateStudyPlan",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateStudyPlan(ctx, req.(*MsgCreateStudyPlan))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_AddPlannedSemester_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgAddPlannedSemester)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).AddPlannedSemester(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/academictoken.schedule.Msg/AddPlannedSemester",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).AddPlannedSemester(ctx, req.(*MsgAddPlannedSemester))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateStudyPlanStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateStudyPlanStatus)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateStudyPlanStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/academictoken.schedule.Msg/UpdateStudyPlanStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateStudyPlanStatus(ctx, req.(*MsgUpdateStudyPlanStatus))
	}
	return interceptor(ctx, in, info, handler)
}

var Msg_serviceDesc = _Msg_serviceDesc
var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "academictoken.schedule.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UpdateParams",
			Handler:    _Msg_UpdateParams_Handler,
		},
		{
			MethodName: "CreateSubjectRecommendation",
			Handler:    _Msg_CreateSubjectRecommendation_Handler,
		},
		{
			MethodName: "CreateStudyPlan",
			Handler:    _Msg_CreateStudyPlan_Handler,
		},
		{
			MethodName: "AddPlannedSemester",
			Handler:    _Msg_AddPlannedSemester_Handler,
		},
		{
			MethodName: "UpdateStudyPlanStatus",
			Handler:    _Msg_UpdateStudyPlanStatus_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "academictoken/schedule/tx.proto",
}

func (m *MsgUpdateParams) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateParams) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateParams) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Params.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.Authority) > 0 {
		i -= len(m.Authority)
		copy(dAtA[i:], m.Authority)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Authority)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateParamsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateParamsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateParamsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateSubjectRecommendation) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateSubjectRecommendation) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateSubjectRecommendation) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.GeneratedDate) > 0 {
		i -= len(m.GeneratedDate)
		copy(dAtA[i:], m.GeneratedDate)
		i = encodeVarintTx(dAtA, i, uint64(len(m.GeneratedDate)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.RecommendationMetadata) > 0 {
		i -= len(m.RecommendationMetadata)
		copy(dAtA[i:], m.RecommendationMetadata)
		i = encodeVarintTx(dAtA, i, uint64(len(m.RecommendationMetadata)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.RecommendedSubjects) > 0 {
		for iNdEx := len(m.RecommendedSubjects) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.RecommendedSubjects[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x22
		}
	}
	if len(m.RecommendationSemester) > 0 {
		i -= len(m.RecommendationSemester)
		copy(dAtA[i:], m.RecommendationSemester)
		i = encodeVarintTx(dAtA, i, uint64(len(m.RecommendationSemester)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Student) > 0 {
		i -= len(m.Student)
		copy(dAtA[i:], m.Student)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Student)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateSubjectRecommendationResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateSubjectRecommendationResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateSubjectRecommendationResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateStudyPlan) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateStudyPlan) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateStudyPlan) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Status) > 0 {
		i -= len(m.Status)
		copy(dAtA[i:], m.Status)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Status)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.AdditionalNotes) > 0 {
		i -= len(m.AdditionalNotes)
		copy(dAtA[i:], m.AdditionalNotes)
		i = encodeVarintTx(dAtA, i, uint64(len(m.AdditionalNotes)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.SemesterCodes) > 0 {
		for iNdEx := len(m.SemesterCodes) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.SemesterCodes[iNdEx])
			copy(dAtA[i:], m.SemesterCodes[iNdEx])
			i = encodeVarintTx(dAtA, i, uint64(len(m.SemesterCodes[iNdEx])))
			i--
			dAtA[i] = 0x22
		}
	}
	if len(m.CompletionTarget) > 0 {
		i -= len(m.CompletionTarget)
		copy(dAtA[i:], m.CompletionTarget)
		i = encodeVarintTx(dAtA, i, uint64(len(m.CompletionTarget)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Student) > 0 {
		i -= len(m.Student)
		copy(dAtA[i:], m.Student)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Student)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateStudyPlanResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateStudyPlanResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateStudyPlanResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgAddPlannedSemester) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddPlannedSemester) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddPlannedSemester) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Status) > 0 {
		i -= len(m.Status)
		copy(dAtA[i:], m.Status)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Status)))
		i--
		dAtA[i] = 0x3a
	}
	if m.TotalHours != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.TotalHours))
		i--
		dAtA[i] = 0x30
	}
	if m.TotalCredits != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.TotalCredits))
		i--
		dAtA[i] = 0x28
	}
	if len(m.PlannedSubjects) > 0 {
		for iNdEx := len(m.PlannedSubjects) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.PlannedSubjects[iNdEx])
			copy(dAtA[i:], m.PlannedSubjects[iNdEx])
			i = encodeVarintTx(dAtA, i, uint64(len(m.PlannedSubjects[iNdEx])))
			i--
			dAtA[i] = 0x22
		}
	}
	if len(m.SemesterCode) > 0 {
		i -= len(m.SemesterCode)
		copy(dAtA[i:], m.SemesterCode)
		i = encodeVarintTx(dAtA, i, uint64(len(m.SemesterCode)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.StudyPlanId) > 0 {
		i -= len(m.StudyPlanId)
		copy(dAtA[i:], m.StudyPlanId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.StudyPlanId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgAddPlannedSemesterResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddPlannedSemesterResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddPlannedSemesterResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateStudyPlanStatus) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateStudyPlanStatus) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateStudyPlanStatus) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Status) > 0 {
		i -= len(m.Status)
		copy(dAtA[i:], m.Status)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Status)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.StudyPlanId) > 0 {
		i -= len(m.StudyPlanId)
		copy(dAtA[i:], m.StudyPlanId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.StudyPlanId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateStudyPlanStatusResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateStudyPlanStatusResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateStudyPlanStatusResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgUpdateParams) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Authority)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.Params.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgUpdateParamsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateSubjectRecommendation) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Student)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.RecommendationSemester)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if len(m.RecommendedSubjects) > 0 {
		for _, e := range m.RecommendedSubjects {
			l = e.Size()
			n += 1 + l + sovTx(uint64(l))
		}
	}
	l = len(m.RecommendationMetadata)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.GeneratedDate)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateSubjectRecommendationResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateStudyPlan) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Student)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.CompletionTarget)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if len(m.SemesterCodes) > 0 {
		for _, s := range m.SemesterCodes {
			l = len(s)
			n += 1 + l + sovTx(uint64(l))
		}
	}
	l = len(m.AdditionalNotes)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Status)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateStudyPlanResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgAddPlannedSemester) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.StudyPlanId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.SemesterCode)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if len(m.PlannedSubjects) > 0 {
		for _, s := range m.PlannedSubjects {
			l = len(s)
			n += 1 + l + sovTx(uint64(l))
		}
	}
	if m.TotalCredits != 0 {
		n += 1 + sovTx(uint64(m.TotalCredits))
	}
	if m.TotalHours != 0 {
		n += 1 + sovTx(uint64(m.TotalHours))
	}
	l = len(m.Status)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgAddPlannedSemesterResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateStudyPlanStatus) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.StudyPlanId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Status)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateStudyPlanStatusResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgUpdateParams) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateParams: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateParams: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Authority", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Authority = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Params.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateParamsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateParamsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateParamsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateSubjectRecommendation) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateSubjectRecommendation: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateSubjectRecommendation: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Student", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Student = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RecommendationSemester", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RecommendationSemester = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RecommendedSubjects", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RecommendedSubjects = append(m.RecommendedSubjects, &RecommendedSubject{})
			if err := m.RecommendedSubjects[len(m.RecommendedSubjects)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RecommendationMetadata", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RecommendationMetadata = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GeneratedDate", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GeneratedDate = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateSubjectRecommendationResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateSubjectRecommendationResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateSubjectRecommendationResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateStudyPlan) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateStudyPlan: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateStudyPlan: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Student", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Student = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CompletionTarget", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CompletionTarget = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SemesterCodes", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SemesterCodes = append(m.SemesterCodes, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AdditionalNotes", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AdditionalNotes = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Status = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateStudyPlanResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateStudyPlanResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateStudyPlanResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddPlannedSemester) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddPlannedSemester: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddPlannedSemester: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StudyPlanId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.StudyPlanId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SemesterCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SemesterCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlannedSubjects", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PlannedSubjects = append(m.PlannedSubjects, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TotalCredits", wireType)
			}
			m.TotalCredits = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TotalCredits |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TotalHours", wireType)
			}
			m.TotalHours = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TotalHours |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Status = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddPlannedSemesterResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddPlannedSemesterResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddPlannedSemesterResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateStudyPlanStatus) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateStudyPlanStatus: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateStudyPlanStatus: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StudyPlanId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.StudyPlanId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Status = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateStudyPlanStatusResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateStudyPlanStatusResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateStudyPlanStatusResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
