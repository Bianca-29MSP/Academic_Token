// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: academictoken/student/graduation_status.proto

package types

import (
	fmt "fmt"
	proto "github.com/cosmos/gogoproto/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type GraduationStatus struct {
	IsEligible                  bool                  `protobuf:"varint,1,opt,name=isEligible,proto3" json:"isEligible,omitempty"`
	EstimatedGraduationSemester string                `protobuf:"bytes,2,opt,name=estimatedGraduationSemester,proto3" json:"estimatedGraduationSemester,omitempty"`
	GpaStatus                   string                `protobuf:"bytes,3,opt,name=gpaStatus,proto3" json:"gpaStatus,omitempty"`
	TimeframeStatus             string                `protobuf:"bytes,4,opt,name=timeframeStatus,proto3" json:"timeframeStatus,omitempty"`
	MissingRequirements         []*MissingRequirement `protobuf:"bytes,5,rep,name=missingRequirements,proto3" json:"missingRequirements,omitempty"`
}

func (m *GraduationStatus) Reset()         { *m = GraduationStatus{} }
func (m *GraduationStatus) String() string { return proto.CompactTextString(m) }
func (*GraduationStatus) ProtoMessage()    {}
func (*GraduationStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_ff0e613fe3134f3a, []int{0}
}
func (m *GraduationStatus) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GraduationStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GraduationStatus.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GraduationStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GraduationStatus.Merge(m, src)
}
func (m *GraduationStatus) XXX_Size() int {
	return m.Size()
}
func (m *GraduationStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_GraduationStatus.DiscardUnknown(m)
}

var xxx_messageInfo_GraduationStatus proto.InternalMessageInfo

func (m *GraduationStatus) GetIsEligible() bool {
	if m != nil {
		return m.IsEligible
	}
	return false
}

func (m *GraduationStatus) GetEstimatedGraduationSemester() string {
	if m != nil {
		return m.EstimatedGraduationSemester
	}
	return ""
}

func (m *GraduationStatus) GetGpaStatus() string {
	if m != nil {
		return m.GpaStatus
	}
	return ""
}

func (m *GraduationStatus) GetTimeframeStatus() string {
	if m != nil {
		return m.TimeframeStatus
	}
	return ""
}

func (m *GraduationStatus) GetMissingRequirements() []*MissingRequirement {
	if m != nil {
		return m.MissingRequirements
	}
	return nil
}

func init() {
	proto.RegisterType((*GraduationStatus)(nil), "academictoken.student.GraduationStatus")
}

func init() {
	proto.RegisterFile("academictoken/student/graduation_status.proto", fileDescriptor_ff0e613fe3134f3a)
}

var fileDescriptor_ff0e613fe3134f3a = []byte{
	// 277 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x90, 0xbd, 0x4a, 0xc4, 0x40,
	0x14, 0x85, 0x33, 0xbb, 0x2a, 0xee, 0x58, 0x28, 0x23, 0x42, 0xf0, 0x67, 0x08, 0x56, 0xb1, 0x30,
	0x01, 0x2d, 0x6c, 0x45, 0x10, 0x2b, 0x9b, 0xd8, 0x69, 0xb1, 0xcc, 0x6e, 0xae, 0x61, 0x70, 0x67,
	0x12, 0xe7, 0xde, 0x80, 0xbe, 0x85, 0xad, 0x6f, 0x64, 0xb9, 0xa5, 0xa5, 0x24, 0x2f, 0x22, 0x64,
	0xc3, 0xfe, 0x68, 0xd8, 0xf6, 0xf0, 0xdd, 0x73, 0xb8, 0x1f, 0x3f, 0x57, 0x63, 0x95, 0x82, 0xd1,
	0x63, 0xca, 0x5f, 0xc0, 0xc6, 0x48, 0x65, 0x0a, 0x96, 0xe2, 0xcc, 0xa9, 0xb4, 0x54, 0xa4, 0x73,
	0x3b, 0x44, 0x52, 0x54, 0x62, 0x54, 0xb8, 0x9c, 0x72, 0x71, 0xb0, 0x82, 0x47, 0x2d, 0x7e, 0x18,
	0x77, 0xb7, 0x18, 0x8d, 0xa8, 0x6d, 0x36, 0x74, 0xf0, 0x5a, 0x6a, 0x07, 0x06, 0x2c, 0xcd, 0x7a,
	0x4e, 0x3f, 0x7b, 0x7c, 0xef, 0x6e, 0xbe, 0xf1, 0xd0, 0x4c, 0x08, 0xc9, 0xb9, 0xc6, 0xdb, 0x89,
	0xce, 0xf4, 0x68, 0x02, 0x3e, 0x0b, 0x58, 0xb8, 0x9d, 0x2c, 0x25, 0xe2, 0x9a, 0x1f, 0x01, 0x92,
	0x36, 0x8a, 0x20, 0x5d, 0x3a, 0x06, 0x03, 0x48, 0xe0, 0xfc, 0x5e, 0xc0, 0xc2, 0x41, 0xb2, 0x0e,
	0x11, 0xc7, 0x7c, 0x90, 0x15, 0x6a, 0x36, 0xe7, 0xf7, 0x1b, 0x7e, 0x11, 0x88, 0x90, 0xef, 0x92,
	0x36, 0xf0, 0xec, 0x94, 0x81, 0x96, 0xd9, 0x68, 0x98, 0xbf, 0xb1, 0x78, 0xe2, 0xfb, 0xed, 0x6f,
	0xc9, 0xe2, 0x35, 0xf4, 0x37, 0x83, 0x7e, 0xb8, 0x73, 0x71, 0x16, 0x75, 0x4a, 0x8a, 0xee, 0xff,
	0x5d, 0x24, 0x5d, 0x2d, 0x37, 0x57, 0x5f, 0x95, 0x64, 0xd3, 0x4a, 0xb2, 0x9f, 0x4a, 0xb2, 0x8f,
	0x5a, 0x7a, 0xd3, 0x5a, 0x7a, 0xdf, 0xb5, 0xf4, 0x1e, 0x4f, 0x56, 0x35, 0xbf, 0xcd, 0x45, 0xd3,
	0x7b, 0x01, 0x38, 0xda, 0x6a, 0xdc, 0x5e, 0xfe, 0x06, 0x00, 0x00, 0xff, 0xff, 0xa8, 0x74, 0xf8,
	0x4e, 0xd4, 0x01, 0x00, 0x00,
}

func (m *GraduationStatus) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GraduationStatus) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GraduationStatus) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.MissingRequirements) > 0 {
		for iNdEx := len(m.MissingRequirements) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.MissingRequirements[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintGraduationStatus(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x2a
		}
	}
	if len(m.TimeframeStatus) > 0 {
		i -= len(m.TimeframeStatus)
		copy(dAtA[i:], m.TimeframeStatus)
		i = encodeVarintGraduationStatus(dAtA, i, uint64(len(m.TimeframeStatus)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.GpaStatus) > 0 {
		i -= len(m.GpaStatus)
		copy(dAtA[i:], m.GpaStatus)
		i = encodeVarintGraduationStatus(dAtA, i, uint64(len(m.GpaStatus)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.EstimatedGraduationSemester) > 0 {
		i -= len(m.EstimatedGraduationSemester)
		copy(dAtA[i:], m.EstimatedGraduationSemester)
		i = encodeVarintGraduationStatus(dAtA, i, uint64(len(m.EstimatedGraduationSemester)))
		i--
		dAtA[i] = 0x12
	}
	if m.IsEligible {
		i--
		if m.IsEligible {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintGraduationStatus(dAtA []byte, offset int, v uint64) int {
	offset -= sovGraduationStatus(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *GraduationStatus) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.IsEligible {
		n += 2
	}
	l = len(m.EstimatedGraduationSemester)
	if l > 0 {
		n += 1 + l + sovGraduationStatus(uint64(l))
	}
	l = len(m.GpaStatus)
	if l > 0 {
		n += 1 + l + sovGraduationStatus(uint64(l))
	}
	l = len(m.TimeframeStatus)
	if l > 0 {
		n += 1 + l + sovGraduationStatus(uint64(l))
	}
	if len(m.MissingRequirements) > 0 {
		for _, e := range m.MissingRequirements {
			l = e.Size()
			n += 1 + l + sovGraduationStatus(uint64(l))
		}
	}
	return n
}

func sovGraduationStatus(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozGraduationStatus(x uint64) (n int) {
	return sovGraduationStatus(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *GraduationStatus) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGraduationStatus
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GraduationStatus: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GraduationStatus: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsEligible", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGraduationStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsEligible = bool(v != 0)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EstimatedGraduationSemester", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGraduationStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGraduationStatus
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGraduationStatus
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.EstimatedGraduationSemester = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GpaStatus", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGraduationStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGraduationStatus
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGraduationStatus
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GpaStatus = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TimeframeStatus", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGraduationStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGraduationStatus
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGraduationStatus
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TimeframeStatus = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MissingRequirements", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGraduationStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGraduationStatus
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGraduationStatus
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MissingRequirements = append(m.MissingRequirements, &MissingRequirement{})
			if err := m.MissingRequirements[len(m.MissingRequirements)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGraduationStatus(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGraduationStatus
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipGraduationStatus(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowGraduationStatus
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowGraduationStatus
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowGraduationStatus
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthGraduationStatus
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupGraduationStatus
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthGraduationStatus
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthGraduationStatus        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowGraduationStatus          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupGraduationStatus = fmt.Errorf("proto: unexpected end of group")
)
