syntax = "proto3";
package academictoken.schedule;

import "amino/amino.proto";
import "gogoproto/gogo.proto";

option go_package = "academictoken/x/schedule/types";

// Params defines the parameters for the module.
message Params {
  option (amino.name) = "academictoken/x/schedule/Params";
  option (gogoproto.equal) = true;
  
  // Maximum credits allowed per semester
  uint64 max_credits_per_semester = 1 [(gogoproto.moretags) = "yaml:\"max_credits_per_semester\""];
  
  // Maximum number of planned semesters
  uint64 max_planned_semesters = 2 [(gogoproto.moretags) = "yaml:\"max_planned_semesters\""];
  
  // Weight for recommendation algorithm (0.0 to 1.0)
  float recommendation_weight = 3 [(gogoproto.moretags) = "yaml:\"recommendation_weight\""];
  
  // IPFS timeout duration as string
  string ipfs_timeout = 4 [(gogoproto.moretags) = "yaml:\"ipfs_timeout\""];
  
  // Minimum grade required for academic progress
  float minimum_grade_for_progress = 5 [(gogoproto.moretags) = "yaml:\"minimum_grade_for_progress\""];
  
  // Allowed recommendation types
  repeated string allowed_recommendation_types = 6 [(gogoproto.moretags) = "yaml:\"allowed_recommendation_types\""];
  
  // Default difficulty levels available
  repeated string default_difficulty_levels = 7 [(gogoproto.moretags) = "yaml:\"default_difficulty_levels\""];
  
  // Maximum study plans per student
  uint64 max_study_plans_per_student = 8 [(gogoproto.moretags) = "yaml:\"max_study_plans_per_student\""];
  
  // Threshold score for recommendations (0.0 to 1.0)
  float recommendation_score_threshold = 9 [(gogoproto.moretags) = "yaml:\"recommendation_score_threshold\""];
  
  // Default semester duration in months
  uint64 default_semester_duration = 10 [(gogoproto.moretags) = "yaml:\"default_semester_duration\""];
}